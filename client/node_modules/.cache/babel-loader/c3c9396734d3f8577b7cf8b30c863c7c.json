{"ast":null,"code":"import _classCallCheck from \"/Users/angeldiscopanda/Trilogy-2020/Projects/trainofthought/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getVecChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport var TransposePackedProgram = function TransposePackedProgram(aShape, newDim) {\n  _classCallCheck(this, TransposePackedProgram);\n\n  this.variableNames = ['A'];\n  this.packedInputs = true;\n  this.packedOutput = true;\n  var outputShape = new Array(aShape.length);\n\n  for (var i = 0; i < outputShape.length; i++) {\n    outputShape[i] = aShape[newDim[i]];\n  }\n\n  this.outputShape = outputShape;\n  this.rank = outputShape.length;\n\n  if (this.rank > 6) {\n    throw Error(\"Packed transpose for rank \".concat(this.rank, \" is not yet supported.\"));\n  }\n\n  var dtype = getCoordsDataType(this.rank);\n  var outputOrder = getVecChannels('rc', this.rank);\n  var switchedOrder = new Array(this.rank);\n\n  for (var _i = 0; _i < newDim.length; _i++) {\n    switchedOrder[newDim[_i]] = outputOrder[_i];\n  }\n\n  var innerDims = \"vec2(\".concat(switchedOrder.slice(-2).join(), \")\");\n  var nextColumn = \"++\".concat(outputOrder[this.rank - 1], \" < \").concat(outputShape[this.rank - 1]);\n  var getc = \"getChannel(getA(\".concat(switchedOrder.join(), \"), \").concat(innerDims, \")\");\n  this.userCode = \"\\n    void main() {\\n      \".concat(dtype, \" rc = getOutputCoords();\\n      vec4 result = vec4(0.);\\n      result[0] = \").concat(getc, \";\\n      if(\").concat(nextColumn, \") {\\n        result[1] = \").concat(getc, \";\\n      }\\n      --\").concat(outputOrder[this.rank - 1], \";\\n      if(++\").concat(outputOrder[this.rank - 2], \" < \").concat(outputShape[this.rank - 2], \") {\\n        result[2] = \").concat(getc, \";\\n        if(\").concat(nextColumn, \") {\\n          result[3] = \").concat(getc, \";\\n        }\\n      }\\n      setOutput(result);\\n    }\\n    \");\n};","map":null,"metadata":{},"sourceType":"module"}