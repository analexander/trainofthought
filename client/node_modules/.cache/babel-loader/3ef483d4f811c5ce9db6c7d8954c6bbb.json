{"ast":null,"code":"import * as tf from '@tensorflow/tfjs-core';\nimport { boxPredictionLayer } from './boxPredictionLayer';\nimport { pointwiseConvLayer } from './pointwiseConvLayer';\nexport function predictionLayer(x, conv11, params) {\n  return tf.tidy(function () {\n    var conv0 = pointwiseConvLayer(x, params.conv_0, [1, 1]);\n    var conv1 = pointwiseConvLayer(conv0, params.conv_1, [2, 2]);\n    var conv2 = pointwiseConvLayer(conv1, params.conv_2, [1, 1]);\n    var conv3 = pointwiseConvLayer(conv2, params.conv_3, [2, 2]);\n    var conv4 = pointwiseConvLayer(conv3, params.conv_4, [1, 1]);\n    var conv5 = pointwiseConvLayer(conv4, params.conv_5, [2, 2]);\n    var conv6 = pointwiseConvLayer(conv5, params.conv_6, [1, 1]);\n    var conv7 = pointwiseConvLayer(conv6, params.conv_7, [2, 2]);\n    var boxPrediction0 = boxPredictionLayer(conv11, params.box_predictor_0);\n    var boxPrediction1 = boxPredictionLayer(x, params.box_predictor_1);\n    var boxPrediction2 = boxPredictionLayer(conv1, params.box_predictor_2);\n    var boxPrediction3 = boxPredictionLayer(conv3, params.box_predictor_3);\n    var boxPrediction4 = boxPredictionLayer(conv5, params.box_predictor_4);\n    var boxPrediction5 = boxPredictionLayer(conv7, params.box_predictor_5);\n    var boxPredictions = tf.concat([boxPrediction0.boxPredictionEncoding, boxPrediction1.boxPredictionEncoding, boxPrediction2.boxPredictionEncoding, boxPrediction3.boxPredictionEncoding, boxPrediction4.boxPredictionEncoding, boxPrediction5.boxPredictionEncoding], 1);\n    var classPredictions = tf.concat([boxPrediction0.classPrediction, boxPrediction1.classPrediction, boxPrediction2.classPrediction, boxPrediction3.classPrediction, boxPrediction4.classPrediction, boxPrediction5.classPrediction], 1);\n    return {\n      boxPredictions: boxPredictions,\n      classPredictions: classPredictions\n    };\n  });\n}","map":{"version":3,"sources":["../../../src/ssdMobilenetv1/predictionLayer.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAZ,MAAoB,uBAApB;AAEA,SAAS,kBAAT,QAAmC,sBAAnC;AACA,SAAS,kBAAT,QAAmC,sBAAnC;AAGA,OAAM,SAAU,eAAV,CACJ,CADI,EAEJ,MAFI,EAGJ,MAHI,EAGyB;AAE7B,SAAO,EAAE,CAAC,IAAH,CAAQ,YAAA;AAEb,QAAM,KAAK,GAAG,kBAAkB,CAAC,CAAD,EAAI,MAAM,CAAC,MAAX,EAAmB,CAAC,CAAD,EAAI,CAAJ,CAAnB,CAAhC;AACA,QAAM,KAAK,GAAG,kBAAkB,CAAC,KAAD,EAAQ,MAAM,CAAC,MAAf,EAAuB,CAAC,CAAD,EAAI,CAAJ,CAAvB,CAAhC;AACA,QAAM,KAAK,GAAG,kBAAkB,CAAC,KAAD,EAAQ,MAAM,CAAC,MAAf,EAAuB,CAAC,CAAD,EAAI,CAAJ,CAAvB,CAAhC;AACA,QAAM,KAAK,GAAG,kBAAkB,CAAC,KAAD,EAAQ,MAAM,CAAC,MAAf,EAAuB,CAAC,CAAD,EAAI,CAAJ,CAAvB,CAAhC;AACA,QAAM,KAAK,GAAG,kBAAkB,CAAC,KAAD,EAAQ,MAAM,CAAC,MAAf,EAAuB,CAAC,CAAD,EAAI,CAAJ,CAAvB,CAAhC;AACA,QAAM,KAAK,GAAG,kBAAkB,CAAC,KAAD,EAAQ,MAAM,CAAC,MAAf,EAAuB,CAAC,CAAD,EAAI,CAAJ,CAAvB,CAAhC;AACA,QAAM,KAAK,GAAG,kBAAkB,CAAC,KAAD,EAAQ,MAAM,CAAC,MAAf,EAAuB,CAAC,CAAD,EAAI,CAAJ,CAAvB,CAAhC;AACA,QAAM,KAAK,GAAG,kBAAkB,CAAC,KAAD,EAAQ,MAAM,CAAC,MAAf,EAAuB,CAAC,CAAD,EAAI,CAAJ,CAAvB,CAAhC;AAEA,QAAM,cAAc,GAAG,kBAAkB,CAAC,MAAD,EAAS,MAAM,CAAC,eAAhB,CAAzC;AACA,QAAM,cAAc,GAAG,kBAAkB,CAAC,CAAD,EAAI,MAAM,CAAC,eAAX,CAAzC;AACA,QAAM,cAAc,GAAG,kBAAkB,CAAC,KAAD,EAAQ,MAAM,CAAC,eAAf,CAAzC;AACA,QAAM,cAAc,GAAG,kBAAkB,CAAC,KAAD,EAAQ,MAAM,CAAC,eAAf,CAAzC;AACA,QAAM,cAAc,GAAG,kBAAkB,CAAC,KAAD,EAAQ,MAAM,CAAC,eAAf,CAAzC;AACA,QAAM,cAAc,GAAG,kBAAkB,CAAC,KAAD,EAAQ,MAAM,CAAC,eAAf,CAAzC;AAEA,QAAM,cAAc,GAAG,EAAE,CAAC,MAAH,CAAU,CAC/B,cAAc,CAAC,qBADgB,EAE/B,cAAc,CAAC,qBAFgB,EAG/B,cAAc,CAAC,qBAHgB,EAI/B,cAAc,CAAC,qBAJgB,EAK/B,cAAc,CAAC,qBALgB,EAM/B,cAAc,CAAC,qBANgB,CAAV,EAOpB,CAPoB,CAAvB;AASA,QAAM,gBAAgB,GAAG,EAAE,CAAC,MAAH,CAAU,CACjC,cAAc,CAAC,eADkB,EAEjC,cAAc,CAAC,eAFkB,EAGjC,cAAc,CAAC,eAHkB,EAIjC,cAAc,CAAC,eAJkB,EAKjC,cAAc,CAAC,eALkB,EAMjC,cAAc,CAAC,eANkB,CAAV,EAOtB,CAPsB,CAAzB;AASA,WAAO;AACL,MAAA,cAAc,EAAA,cADT;AAEL,MAAA,gBAAgB,EAAA;AAFX,KAAP;AAID,GAxCM,CAAP;AAyCD","sourceRoot":"","sourcesContent":["import * as tf from '@tensorflow/tfjs-core';\r\nimport { boxPredictionLayer } from './boxPredictionLayer';\r\nimport { pointwiseConvLayer } from './pointwiseConvLayer';\r\nexport function predictionLayer(x, conv11, params) {\r\n    return tf.tidy(function () {\r\n        var conv0 = pointwiseConvLayer(x, params.conv_0, [1, 1]);\r\n        var conv1 = pointwiseConvLayer(conv0, params.conv_1, [2, 2]);\r\n        var conv2 = pointwiseConvLayer(conv1, params.conv_2, [1, 1]);\r\n        var conv3 = pointwiseConvLayer(conv2, params.conv_3, [2, 2]);\r\n        var conv4 = pointwiseConvLayer(conv3, params.conv_4, [1, 1]);\r\n        var conv5 = pointwiseConvLayer(conv4, params.conv_5, [2, 2]);\r\n        var conv6 = pointwiseConvLayer(conv5, params.conv_6, [1, 1]);\r\n        var conv7 = pointwiseConvLayer(conv6, params.conv_7, [2, 2]);\r\n        var boxPrediction0 = boxPredictionLayer(conv11, params.box_predictor_0);\r\n        var boxPrediction1 = boxPredictionLayer(x, params.box_predictor_1);\r\n        var boxPrediction2 = boxPredictionLayer(conv1, params.box_predictor_2);\r\n        var boxPrediction3 = boxPredictionLayer(conv3, params.box_predictor_3);\r\n        var boxPrediction4 = boxPredictionLayer(conv5, params.box_predictor_4);\r\n        var boxPrediction5 = boxPredictionLayer(conv7, params.box_predictor_5);\r\n        var boxPredictions = tf.concat([\r\n            boxPrediction0.boxPredictionEncoding,\r\n            boxPrediction1.boxPredictionEncoding,\r\n            boxPrediction2.boxPredictionEncoding,\r\n            boxPrediction3.boxPredictionEncoding,\r\n            boxPrediction4.boxPredictionEncoding,\r\n            boxPrediction5.boxPredictionEncoding\r\n        ], 1);\r\n        var classPredictions = tf.concat([\r\n            boxPrediction0.classPrediction,\r\n            boxPrediction1.classPrediction,\r\n            boxPrediction2.classPrediction,\r\n            boxPrediction3.classPrediction,\r\n            boxPrediction4.classPrediction,\r\n            boxPrediction5.classPrediction\r\n        ], 1);\r\n        return {\r\n            boxPredictions: boxPredictions,\r\n            classPredictions: classPredictions\r\n        };\r\n    });\r\n}\r\n//# sourceMappingURL=predictionLayer.js.map"]},"metadata":{},"sourceType":"module"}