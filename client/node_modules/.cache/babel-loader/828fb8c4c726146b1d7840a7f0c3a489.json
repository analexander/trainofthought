{"ast":null,"code":"import { __spreadArrays } from \"tslib\";\nimport * as tf from '@tensorflow/tfjs-core';\nexport function normalize(x, meanRgb) {\n  return tf.tidy(function () {\n    var r = meanRgb[0],\n        g = meanRgb[1],\n        b = meanRgb[2];\n    var avg_r = tf.fill(__spreadArrays(x.shape.slice(0, 3), [1]), r);\n    var avg_g = tf.fill(__spreadArrays(x.shape.slice(0, 3), [1]), g);\n    var avg_b = tf.fill(__spreadArrays(x.shape.slice(0, 3), [1]), b);\n    var avg_rgb = tf.concat([avg_r, avg_g, avg_b], 3);\n    return tf.sub(x, avg_rgb);\n  });\n}","map":{"version":3,"sources":["../../../src/ops/normalize.ts"],"names":[],"mappings":";AAAA,OAAO,KAAK,EAAZ,MAAoB,uBAApB;AAEA,OAAM,SAAU,SAAV,CAAoB,CAApB,EAAoC,OAApC,EAAqD;AACzD,SAAO,EAAE,CAAC,IAAH,CAAQ,YAAA;AACN,QAAA,CAAA,GAAA,OAAA,CAAA,CAAA,CAAA;AAAA,QAAG,CAAA,GAAA,OAAA,CAAA,CAAA,CAAH;AAAA,QAAM,CAAA,GAAA,OAAA,CAAA,CAAA,CAAN;AACP,QAAM,KAAK,GAAG,EAAE,CAAC,IAAH,CAAO,cAAA,CAAK,CAAC,CAAC,KAAF,CAAQ,KAAR,CAAc,CAAd,EAAiB,CAAjB,CAAL,EAAwB,CAAE,CAAF,CAAxB,CAAP,EAAqC,CAArC,CAAd;AACA,QAAM,KAAK,GAAG,EAAE,CAAC,IAAH,CAAO,cAAA,CAAK,CAAC,CAAC,KAAF,CAAQ,KAAR,CAAc,CAAd,EAAiB,CAAjB,CAAL,EAAwB,CAAE,CAAF,CAAxB,CAAP,EAAqC,CAArC,CAAd;AACA,QAAM,KAAK,GAAG,EAAE,CAAC,IAAH,CAAO,cAAA,CAAK,CAAC,CAAC,KAAF,CAAQ,KAAR,CAAc,CAAd,EAAiB,CAAjB,CAAL,EAAwB,CAAE,CAAF,CAAxB,CAAP,EAAqC,CAArC,CAAd;AACA,QAAM,OAAO,GAAG,EAAE,CAAC,MAAH,CAAU,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,CAAV,EAAiC,CAAjC,CAAhB;AAEA,WAAO,EAAE,CAAC,GAAH,CAAO,CAAP,EAAU,OAAV,CAAP;AACD,GARM,CAAP;AASD","sourceRoot":"","sourcesContent":["import { __spreadArrays } from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nexport function normalize(x, meanRgb) {\r\n    return tf.tidy(function () {\r\n        var r = meanRgb[0], g = meanRgb[1], b = meanRgb[2];\r\n        var avg_r = tf.fill(__spreadArrays(x.shape.slice(0, 3), [1]), r);\r\n        var avg_g = tf.fill(__spreadArrays(x.shape.slice(0, 3), [1]), g);\r\n        var avg_b = tf.fill(__spreadArrays(x.shape.slice(0, 3), [1]), b);\r\n        var avg_rgb = tf.concat([avg_r, avg_g, avg_b], 3);\r\n        return tf.sub(x, avg_rgb);\r\n    });\r\n}\r\n//# sourceMappingURL=normalize.js.map"]},"metadata":{},"sourceType":"module"}