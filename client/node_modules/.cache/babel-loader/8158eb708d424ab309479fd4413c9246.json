{"ast":null,"code":"import _classCallCheck from \"/Users/angeldiscopanda/Trilogy-2020/Projects/trainofthought/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getGlslDifferences } from './glsl_version';\nimport * as shader_util from './shader_compiler_util';\nimport { getDenseTexShape, PackingScheme } from './tex_util';\nexport var DecodeMatrixProgram = function DecodeMatrixProgram(outputShape) {\n  _classCallCheck(this, DecodeMatrixProgram);\n\n  this.variableNames = ['A'];\n  this.packedInputs = false;\n  this.packedOutput = true;\n  this.outPackingScheme = PackingScheme.DENSE;\n  var texShape = getDenseTexShape(outputShape);\n  var glsl = getGlslDifferences();\n  this.outputShape = outputShape;\n  this.userCode = \"\\n      ivec3 outCoordsFromFlatIndex(int index) {\\n        \".concat(shader_util.getLogicalCoordinatesFromFlatIndex(['r', 'c', 'd'], outputShape), \"\\n        return ivec3(r, c, d);\\n      }\\n\\n      void main() {\\n        ivec2 resTexRC = ivec2(resultUV.yx *\\n          vec2(\").concat(texShape[0], \", \").concat(texShape[1], \"));\\n        int index = 4 * (resTexRC.x * \").concat(texShape[1], \" + resTexRC.y);\\n\\n        vec4 result = vec4(0.);\\n\\n        for (int i=0; i<4; i++) {\\n          int flatIndex = index + i;\\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\\n          result[i] = getA(rc.x, rc.y, rc.z);\\n        }\\n\\n        \").concat(glsl.output, \" = result;\\n      }\\n    \");\n};","map":null,"metadata":{},"sourceType":"module"}