{"ast":null,"code":"import _toConsumableArray from \"/Users/angeldiscopanda/Trilogy-2020/Projects/trainofthought/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/angeldiscopanda/Trilogy-2020/Projects/trainofthought/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/angeldiscopanda/Trilogy-2020/Projects/trainofthought/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/angeldiscopanda/Trilogy-2020/Projects/trainofthought/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/angeldiscopanda/Trilogy-2020/Projects/trainofthought/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/angeldiscopanda/Trilogy-2020/Projects/trainofthought/client/src/component/FaceDetectionComponent/FaceDetectionComponent.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    position: relative;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { CameraComponent } from \"../CameraComponent/CameraComponent\";\nimport CanvasComponent from \"../CanvasComponent/CanvasComponent\";\nimport styled from \"styled-components\";\nimport { nets, loadFaceExpressionModel, detectSingleFace, TinyFaceDetectorOptions } from \"face-api.js\";\nvar ContainerComponent = styled.div(_templateObject());\nvar OverlayComponent = styled.div(_templateObject2());\n\nvar FaceDetectionComponent = function FaceDetectionComponent() {\n  var videoRef = useRef();\n  var canvasRef = useRef();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      cameraReady = _useState2[0],\n      setCameraReady = _useState2[1];\n\n  var cameraIsReady = function cameraIsReady() {\n    setCameraReady(true);\n  };\n\n  var initModels = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return nets.tinyFaceDetector.load(\"/models/\");\n\n            case 2:\n              _context.next = 4;\n              return loadFaceExpressionModel(\"/models/\");\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function initModels() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var redirectToPage = function redirectToPage(emotion) {\n    console.log(emotion); // TODO: Redirect Emotion\n  };\n\n  var startFaceDetection = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var options, result, expressions, maxValue, emotion;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              options = new TinyFaceDetectorOptions({\n                inputSize: 512,\n                scoreThreshold: 0.5\n              });\n              _context2.next = 3;\n              return detectSingleFace(videoRef.current, options).withFaceExpressions();\n\n            case 3:\n              result = _context2.sent;\n\n              if (result) {\n                /////// expression capture ////////\n                expressions = result.expressions;\n                maxValue = Math.max.apply(Math, _toConsumableArray(Object.values(expressions)));\n                emotion = Object.keys(expressions).filter(function (item) {\n                  return expressions[item] === maxValue;\n                });\n                redirectToPage(emotion[0]); /////// expression capture ////////\n              } else {\n                setTimeout(function () {\n                  return startFaceDetection();\n                });\n              }\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function startFaceDetection() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    if (cameraReady) {\n      startFaceDetection();\n    }\n  }, [cameraReady]);\n  useEffect(function () {\n    initModels();\n  }, []);\n  return /*#__PURE__*/React.createElement(ContainerComponent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CameraComponent, {\n    videoRef: videoRef,\n    onReady: cameraIsReady,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(OverlayComponent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CanvasComponent, {\n    canvasRef: canvasRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default FaceDetectionComponent;","map":{"version":3,"sources":["/Users/angeldiscopanda/Trilogy-2020/Projects/trainofthought/client/src/component/FaceDetectionComponent/FaceDetectionComponent.js"],"names":["React","useEffect","useRef","useState","CameraComponent","CanvasComponent","styled","nets","loadFaceExpressionModel","detectSingleFace","TinyFaceDetectorOptions","ContainerComponent","div","OverlayComponent","FaceDetectionComponent","videoRef","canvasRef","cameraReady","setCameraReady","cameraIsReady","initModels","tinyFaceDetector","load","redirectToPage","emotion","console","log","startFaceDetection","options","inputSize","scoreThreshold","current","withFaceExpressions","result","expressions","maxValue","Math","max","Object","values","keys","filter","item","setTimeout"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\n\nimport { CameraComponent } from \"../CameraComponent/CameraComponent\";\nimport CanvasComponent from \"../CanvasComponent/CanvasComponent\";\nimport styled from \"styled-components\";\nimport {\n    nets, loadFaceExpressionModel,\n     detectSingleFace, TinyFaceDetectorOptions,\n} from \"face-api.js\";\n\nconst ContainerComponent = styled.div`\n    position: relative;\n`;\n\nconst OverlayComponent = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n`;\n\n\nconst FaceDetectionComponent = () => {\n    const videoRef = useRef();\n    const canvasRef = useRef();\n    const [cameraReady, setCameraReady] = useState(false);\n\n    const cameraIsReady = () => {\n        setCameraReady(true);\n    };\n\n    const initModels = async () => {\n        await nets.tinyFaceDetector.load(\"/models/\");\n        await loadFaceExpressionModel(\"/models/\");\n    }\n\n    const redirectToPage = (emotion) => {\n        console.log(emotion);\n        // TODO: Redirect Emotion\n    }\n\n    const startFaceDetection = async () => {\n        const options = new TinyFaceDetectorOptions({ inputSize: 512, scoreThreshold: 0.5 });\n        const result = await detectSingleFace(videoRef.current, options).withFaceExpressions();\n        if (result) {\n\n            /////// expression capture ////////\n\n            const expressions = result.expressions;\n            const maxValue = Math.max(...Object.values(expressions));\n            const emotion = Object.keys(expressions).filter(\n                item => expressions[item] === maxValue\n            );\n\n            redirectToPage(emotion[0]);\n            \n            /////// expression capture ////////\n\n        } else {\n            setTimeout(() => startFaceDetection());\n        }\n\n            \n    };\n\n    useEffect(() => {\n        if (cameraReady) {\n            startFaceDetection();\n        }\n    }, [cameraReady])\n\n    useEffect(() => {\n        initModels();\n    }, []);\n\n\n    return (\n        <ContainerComponent>\n            <CameraComponent videoRef={videoRef} onReady={cameraIsReady} />\n            <OverlayComponent>\n                <CanvasComponent canvasRef={canvasRef} />\n            </OverlayComponent>\n        </ContainerComponent>\n    );\n};\n\nexport default FaceDetectionComponent;"]},"metadata":{},"sourceType":"module"}