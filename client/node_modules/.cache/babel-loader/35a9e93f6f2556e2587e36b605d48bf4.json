{"ast":null,"code":"import _slicedToArray from \"/Users/angeldiscopanda/Trilogy-2020/Projects/trainofthought/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Prelu } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { createSimpleBinaryKernelImpl } from '../utils/binary_impl';\nvar preluImpl = createSimpleBinaryKernelImpl(function (xValue, aValue) {\n  return xValue < 0 ? aValue * xValue : xValue;\n});\nexport function prelu(args) {\n  var inputs = args.inputs,\n      backend = args.backend;\n  var x = inputs.x,\n      alpha = inputs.alpha;\n  assertNotComplex([x, alpha], 'prelu');\n  var aVals = backend.data.get(x.dataId).values;\n  var bVals = backend.data.get(alpha.dataId).values;\n\n  var _preluImpl = preluImpl(x.shape, alpha.shape, aVals, bVals, x.dtype),\n      _preluImpl2 = _slicedToArray(_preluImpl, 2),\n      resultData = _preluImpl2[0],\n      resultShape = _preluImpl2[1];\n\n  return backend.makeTensorInfo(resultShape, x.dtype, resultData);\n}\nexport var preluConfig = {\n  kernelName: Prelu,\n  backendName: 'cpu',\n  kernelFunc: prelu\n};","map":null,"metadata":{},"sourceType":"module"}