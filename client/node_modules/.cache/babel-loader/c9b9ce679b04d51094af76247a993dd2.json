{"ast":null,"code":"\"use strict\";\n\nmodule.exports = exports = build;\nexports.usage = 'Attempts to compile the module by dispatching to node-gyp or nw-gyp';\n\nvar napi = require('./util/napi.js');\n\nvar compile = require('./util/compile.js');\n\nvar handle_gyp_opts = require('./util/handle_gyp_opts.js');\n\nvar configure = require('./configure.js');\n\nfunction do_build(gyp, argv, callback) {\n  handle_gyp_opts(gyp, argv, function (err, result) {\n    var final_args = ['build'].concat(result.gyp).concat(result.pre);\n\n    if (result.unparsed.length > 0) {\n      final_args = final_args.concat(['--']).concat(result.unparsed);\n    }\n\n    if (!err && result.opts.napi_build_version) {\n      napi.swap_build_dir_in(result.opts.napi_build_version);\n    }\n\n    compile.run_gyp(final_args, result.opts, function (err) {\n      if (result.opts.napi_build_version) {\n        napi.swap_build_dir_out(result.opts.napi_build_version);\n      }\n\n      return callback(err);\n    });\n  });\n}\n\nfunction build(gyp, argv, callback) {\n  // Form up commands to pass to node-gyp:\n  // We map `node-pre-gyp build` to `node-gyp configure build` so that we do not\n  // trigger a clean and therefore do not pay the penalty of a full recompile\n  if (argv.length && argv.indexOf('rebuild') > -1) {\n    argv.shift(); // remove `rebuild`\n    // here we map `node-pre-gyp rebuild` to `node-gyp rebuild` which internally means\n    // \"clean + configure + build\" and triggers a full recompile\n\n    compile.run_gyp(['clean'], {}, function (err) {\n      if (err) return callback(err);\n      configure(gyp, argv, function (err) {\n        if (err) return callback(err);\n        return do_build(gyp, argv, callback);\n      });\n    });\n  } else {\n    return do_build(gyp, argv, callback);\n  }\n}","map":null,"metadata":{},"sourceType":"script"}