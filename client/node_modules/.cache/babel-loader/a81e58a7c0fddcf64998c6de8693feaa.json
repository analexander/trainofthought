{"ast":null,"code":"import _regeneratorRuntime from \"/Users/angeldiscopanda/Trilogy-2020/Projects/trainofthought/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/angeldiscopanda/Trilogy-2020/Projects/trainofthought/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { nonMaxSuppressionV3Impl } from '../../backends/non_max_suppression_impl';\nimport { convertToTensor } from '../../tensor_util_env';\nimport { nonMaxSuppSanityCheck } from '../nonmax_util';\n/**\n * Performs non maximum suppression of bounding boxes based on\n * iou (intersection over union).\n *\n * This is the async version of `nonMaxSuppression`\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @return A 1D tensor with the selected box indices.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\n\nfunction nonMaxSuppressionAsync_(_x, _x2, _x3) {\n  return _nonMaxSuppressionAsync_.apply(this, arguments);\n}\n\nfunction _nonMaxSuppressionAsync_() {\n  _nonMaxSuppressionAsync_ = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(boxes, scores, maxOutputSize) {\n    var iouThreshold,\n        scoreThreshold,\n        $boxes,\n        $scores,\n        inputs,\n        boxesAndScores,\n        boxesVals,\n        scoresVals,\n        res,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            iouThreshold = _args.length > 3 && _args[3] !== undefined ? _args[3] : 0.5;\n            scoreThreshold = _args.length > 4 && _args[4] !== undefined ? _args[4] : Number.NEGATIVE_INFINITY;\n            $boxes = convertToTensor(boxes, 'boxes', 'nonMaxSuppressionAsync');\n            $scores = convertToTensor(scores, 'scores', 'nonMaxSuppressionAsync');\n            inputs = nonMaxSuppSanityCheck($boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold);\n            maxOutputSize = inputs.maxOutputSize;\n            iouThreshold = inputs.iouThreshold;\n            scoreThreshold = inputs.scoreThreshold;\n            _context.next = 10;\n            return Promise.all([$boxes.data(), $scores.data()]);\n\n          case 10:\n            boxesAndScores = _context.sent;\n            boxesVals = boxesAndScores[0];\n            scoresVals = boxesAndScores[1]; // We call a cpu based impl directly with the typedarray data  here rather\n            // than a kernel because all kernels are synchronous (and thus cannot await\n            // .data()).\n\n            res = nonMaxSuppressionV3Impl(boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold);\n\n            if ($boxes !== boxes) {\n              $boxes.dispose();\n            }\n\n            if ($scores !== scores) {\n              $scores.dispose();\n            }\n\n            return _context.abrupt(\"return\", res);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _nonMaxSuppressionAsync_.apply(this, arguments);\n}\n\nexport var nonMaxSuppressionAsync = nonMaxSuppressionAsync_;","map":null,"metadata":{},"sourceType":"module"}