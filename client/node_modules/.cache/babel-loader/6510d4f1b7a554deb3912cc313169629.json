{"ast":null,"code":"import _toConsumableArray from \"/Users/angeldiscopanda/Trilogy-2020/Projects/trainofthought/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/angeldiscopanda/Trilogy-2020/Projects/trainofthought/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/angeldiscopanda/Trilogy-2020/Projects/trainofthought/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/angeldiscopanda/Trilogy-2020/Projects/trainofthought/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/angeldiscopanda/Trilogy-2020/Projects/trainofthought/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/angeldiscopanda/Trilogy-2020/Projects/trainofthought/client/src/component/FaceDetectionComponent/FaceDetectionComponent.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    position: relative;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { CameraComponent } from \"../CameraComponent/CameraComponent\";\nimport CanvasComponent from \"../CanvasComponent/CanvasComponent\";\nimport styled from \"styled-components\";\nimport { nets, loadFaceExpressionModel, matchDimensions, resizeResults, detectSingleFace, TinyFaceDetectorOptions, draw } from \"face-api.js\";\nvar ContainerComponent = styled.div(_templateObject());\nvar OverlayComponent = styled.div(_templateObject2());\n\nvar FaceDetectionComponent = function FaceDetectionComponent() {\n  var videoRef = useRef();\n  var canvasRef = useRef();\n\n  var _useState = useState([]);\n\n  var _useState2 = _slicedToArray(_useState, 2);\n\n  result = _useState2[0];\n  setResult = _useState2[1];\n\n  var initModels = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return nets.tinyFaceDetector.load(\"/models/\");\n\n            case 2:\n              _context.next = 4;\n              return loadFaceExpressionModel(\"/models/\");\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function initModels() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var startFaceDetection = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var options, result, dims, resizedResult, minConfidence;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              options = new TinyFaceDetectorOptions({\n                inputSize: 512,\n                scoreThreshold: 0.5\n              });\n              _context2.next = 3;\n              return setResult(detectSingleFace(videoRef.current, options).withFaceExpressions());\n\n            case 3:\n              result = _context2.sent;\n\n              if (result) {\n                dims = matchDimensions(canvasRef.current, videoRef.current, true);\n                resizedResult = resizeResults(result, dims);\n                minConfidence = 0.05;\n                draw.drawDetections(canvasRef.current, resizedResult);\n                draw.drawFaceExpressions(canvasRef.current, resizedResult, minConfidence); ///// expression capture ////////\n                // const expressions = result.expressions;\n                // const maxValue = Math.max(...Object.values(expressions));\n                // const emotion = Object.keys(expressions).filter(\n                //     item => expressions[item] === maxValue\n                // );\n                // setTimeout(() => {\n                //     console.log(emotion[0])\n                //   }, 5000);\n                ///// expression capture ////////\n              }\n\n              setTimeout(function () {\n                return startFaceDetection();\n              });\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function startFaceDetection() {\n      return _ref2.apply(this, arguments);\n    };\n  }(); ///// expression capture ////////\n\n\n  var expressions = result.expressions;\n  var maxValue = Math.max.apply(Math, _toConsumableArray(Object.values(expressions)));\n  var emotion = Object.keys(expressions).filter(function (item) {\n    return expressions[item] === maxValue;\n  });\n  setTimeout(function () {\n    console.log(emotion[0]);\n  }, 5000); ///// expression capture ////////\n\n  useEffect(function () {\n    initModels();\n  }, []);\n  return /*#__PURE__*/React.createElement(ContainerComponent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CameraComponent, {\n    videoRef: videoRef,\n    onReady: startFaceDetection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(OverlayComponent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CanvasComponent, {\n    canvasRef: canvasRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default FaceDetectionComponent;","map":{"version":3,"sources":["/Users/angeldiscopanda/Trilogy-2020/Projects/trainofthought/client/src/component/FaceDetectionComponent/FaceDetectionComponent.js"],"names":["React","useEffect","useRef","useState","CameraComponent","CanvasComponent","styled","nets","loadFaceExpressionModel","matchDimensions","resizeResults","detectSingleFace","TinyFaceDetectorOptions","draw","ContainerComponent","div","OverlayComponent","FaceDetectionComponent","videoRef","canvasRef","result","setResult","initModels","tinyFaceDetector","load","startFaceDetection","options","inputSize","scoreThreshold","current","withFaceExpressions","dims","resizedResult","minConfidence","drawDetections","drawFaceExpressions","setTimeout","expressions","maxValue","Math","max","Object","values","emotion","keys","filter","item","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState} from \"react\";\nimport { CameraComponent } from \"../CameraComponent/CameraComponent\";\nimport CanvasComponent from \"../CanvasComponent/CanvasComponent\";\nimport styled from \"styled-components\";\nimport {\n    nets, loadFaceExpressionModel, matchDimensions,\n    resizeResults, detectSingleFace, TinyFaceDetectorOptions,\n    draw\n} from \"face-api.js\";\n\nconst ContainerComponent = styled.div`\n    position: relative;\n`;\n\nconst OverlayComponent = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n`;\n\nconst FaceDetectionComponent = () => {\n    const videoRef = useRef();\n    const canvasRef = useRef();\n    [result, setResult] = useState([]);\n\n    const initModels = async () => {\n        await nets.tinyFaceDetector.load(\"/models/\");\n        await loadFaceExpressionModel(\"/models/\");\n    }\n\n    const startFaceDetection = async () => {\n        const options = new TinyFaceDetectorOptions({ inputSize: 512, scoreThreshold: 0.5 });\n        const result = await setResult(detectSingleFace(videoRef.current, options).withFaceExpressions());\n        if (result) {\n            const dims = matchDimensions(canvasRef.current, videoRef.current, true);\n            const resizedResult = resizeResults(result, dims);\n            const minConfidence = 0.05;\n            draw.drawDetections(canvasRef.current, resizedResult);\n            draw.drawFaceExpressions(canvasRef.current, resizedResult, minConfidence);\n\n///// expression capture ////////\n\n            // const expressions = result.expressions;\n            // const maxValue = Math.max(...Object.values(expressions));\n            // const emotion = Object.keys(expressions).filter(\n            //     item => expressions[item] === maxValue\n            // );\n            // setTimeout(() => {\n            //     console.log(emotion[0])\n            //   }, 5000);\n\n ///// expression capture ////////\n\n        }\n        setTimeout(() => startFaceDetection());\n    };\n\n    ///// expression capture ////////\n\n    const expressions = result.expressions;\n    const maxValue = Math.max(...Object.values(expressions));\n    const emotion = Object.keys(expressions).filter(\n        item => expressions[item] === maxValue\n    );\n    setTimeout(() => {\n        console.log(emotion[0])\n      }, 5000);\n\n///// expression capture ////////\n\n    useEffect(() => {\n        initModels();\n    }, []);\n\n\n    return (\n        <ContainerComponent>\n            <CameraComponent videoRef={videoRef} onReady={startFaceDetection} />\n            <OverlayComponent>\n                <CanvasComponent canvasRef={canvasRef} />\n            </OverlayComponent>\n        </ContainerComponent>\n    );\n};\n\nexport default FaceDetectionComponent;"]},"metadata":{},"sourceType":"module"}