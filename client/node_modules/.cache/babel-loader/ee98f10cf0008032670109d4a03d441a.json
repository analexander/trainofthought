{"ast":null,"code":"import _createClass from \"/Users/angeldiscopanda/Trilogy-2020/Projects/trainofthought/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/Users/angeldiscopanda/Trilogy-2020/Projects/trainofthought/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/angeldiscopanda/Trilogy-2020/Projects/trainofthought/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/angeldiscopanda/Trilogy-2020/Projects/trainofthought/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/angeldiscopanda/Trilogy-2020/Projects/trainofthought/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/* original source: keras/regularizers.py */\nimport * as tfc from '@tensorflow/tfjs-core';\nimport { abs, add, serialization, sum, tidy, zeros } from '@tensorflow/tfjs-core';\nimport * as K from './backend/tfjs_backend';\nimport { deserializeKerasObject, serializeKerasObject } from './utils/generic_utils';\n\nfunction assertObjectArgs(args) {\n  if (args != null && typeof args !== 'object') {\n    throw new Error(\"Argument to L1L2 regularizer's constructor is expected to be an \" + \"object, but received: \".concat(args));\n  }\n}\n/**\n * Regularizer base class.\n */\n\n\nexport var Regularizer = /*#__PURE__*/function (_serialization$Serial) {\n  _inherits(Regularizer, _serialization$Serial);\n\n  function Regularizer() {\n    _classCallCheck(this, Regularizer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Regularizer).apply(this, arguments));\n  }\n\n  return Regularizer;\n}(serialization.Serializable);\nexport var L1L2 = /*#__PURE__*/function (_Regularizer) {\n  _inherits(L1L2, _Regularizer);\n\n  function L1L2(args) {\n    var _this;\n\n    _classCallCheck(this, L1L2);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(L1L2).call(this));\n    assertObjectArgs(args);\n    _this.l1 = args == null || args.l1 == null ? 0.01 : args.l1;\n    _this.l2 = args == null || args.l2 == null ? 0.01 : args.l2;\n    _this.hasL1 = _this.l1 !== 0;\n    _this.hasL2 = _this.l2 !== 0;\n    return _this;\n  }\n  /**\n   * Porting note: Renamed from __call__.\n   * @param x Variable of which to calculate the regularization score.\n   */\n\n\n  _createClass(L1L2, [{\n    key: \"apply\",\n    value: function apply(x) {\n      var _this2 = this;\n\n      return tidy(function () {\n        var regularization = zeros([1]);\n\n        if (_this2.hasL1) {\n          regularization = add(regularization, sum(tfc.mul(_this2.l1, abs(x))));\n        }\n\n        if (_this2.hasL2) {\n          regularization = add(regularization, sum(tfc.mul(_this2.l2, K.square(x))));\n        }\n\n        return regularization.asScalar();\n      });\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      return {\n        'l1': this.l1,\n        'l2': this.l2\n      };\n    }\n    /** @nocollapse */\n\n  }], [{\n    key: \"fromConfig\",\n    value: function fromConfig(cls, config) {\n      return new cls({\n        l1: config['l1'],\n        l2: config['l2']\n      });\n    }\n  }]);\n\n  return L1L2;\n}(Regularizer);\n/** @nocollapse */\n\nL1L2.className = 'L1L2';\nserialization.registerClass(L1L2);\nexport function l1(args) {\n  assertObjectArgs(args);\n  return new L1L2({\n    l1: args != null ? args.l1 : null,\n    l2: 0\n  });\n}\nexport function l2(args) {\n  assertObjectArgs(args);\n  return new L1L2({\n    l2: args != null ? args.l2 : null,\n    l1: 0\n  });\n} // Maps the JavaScript-like identifier keys to the corresponding keras symbols.\n\nexport var REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP = {\n  'l1l2': 'L1L2'\n};\nexport function serializeRegularizer(constraint) {\n  return serializeKerasObject(constraint);\n}\nexport function deserializeRegularizer(config) {\n  var customObjects = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return deserializeKerasObject(config, serialization.SerializationMap.getMap().classNameMap, customObjects, 'regularizer');\n}\nexport function getRegularizer(identifier) {\n  if (identifier == null) {\n    return null;\n  }\n\n  if (typeof identifier === 'string') {\n    var className = identifier in REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP ? REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP[identifier] : identifier;\n    var config = {\n      className: className,\n      config: {}\n    };\n    return deserializeRegularizer(config);\n  } else if (identifier instanceof Regularizer) {\n    return identifier;\n  } else {\n    return deserializeRegularizer(identifier);\n  }\n}","map":null,"metadata":{},"sourceType":"module"}