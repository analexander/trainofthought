{"ast":null,"code":"import _slicedToArray from \"/Users/angeldiscopanda/Trilogy-2020/Projects/trainofthought/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Conv2D } from '../kernel_names';\nimport { conv2DBackpropFilter } from '../ops/conv2d_backprop_filter';\nimport { conv2DBackpropInput } from '../ops/conv2d_backprop_input';\nimport * as conv_util from '../ops/conv_util';\nimport * as util from '../util';\nexport var conv2DGradConfig = {\n  kernelName: Conv2D,\n  inputsToSave: ['x', 'filter'],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var _saved = _slicedToArray(saved, 2),\n        x4D = _saved[0],\n        $filter = _saved[1];\n\n    var dilations = attrs.dilations,\n        strides = attrs.strides,\n        pad = attrs.pad,\n        dataFormat = attrs.dataFormat;\n    util.assert(conv_util.tupleValuesAreOne(dilations), function () {\n      return 'Error in gradient of conv2D: dilation rates greater than 1 ' + \"are not yet supported in gradients. Got dilations '\".concat(dilations, \"'\");\n    });\n    return {\n      x: function x() {\n        return conv2DBackpropInput(x4D.shape, dy, $filter, strides, pad, dataFormat);\n      },\n      filter: function filter() {\n        return conv2DBackpropFilter(x4D, dy, $filter.shape, strides, pad, dataFormat);\n      }\n    };\n  }\n};","map":null,"metadata":{},"sourceType":"module"}