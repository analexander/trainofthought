{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\n/**\n * Factory function for HTTP IO Handler in Node.js.\n *\n * @param path URL path or an array of them.\n * @param requestInit Request init for the HTTP IOHandler. May include fields\n *   such as \"credentials\" and \"cache\". (Optional)\n * @param weightPathPrefix A path prefix for weight loading . (Optional).\n */\n\n\nfunction nodeHTTPRequest(path, requestInit, weightPathPrefix) {\n  return tfjs_1.io.browserHTTPRequest(path, {\n    requestInit: requestInit,\n    weightPathPrefix: weightPathPrefix\n  });\n}\n\nexports.nodeHTTPRequest = nodeHTTPRequest;\n\nexports.nodeHTTPRequestRouter = function (url) {\n  var isHTTP = true;\n\n  if (Array.isArray(url)) {\n    isHTTP = url.every(function (urlItem) {\n      return tfjs_1.io.isHTTPScheme(urlItem);\n    });\n  } else {\n    isHTTP = tfjs_1.io.isHTTPScheme(url);\n  }\n\n  if (isHTTP) {\n    return nodeHTTPRequest(url);\n  }\n\n  return null;\n};","map":null,"metadata":{},"sourceType":"script"}