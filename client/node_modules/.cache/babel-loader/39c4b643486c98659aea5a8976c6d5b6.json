{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { isValidProbablitiy } from '../utils';\nimport { LabeledBox } from './LabeledBox';\n\nvar PredictedBox =\n/** @class */\nfunction (_super) {\n  __extends(PredictedBox, _super);\n\n  function PredictedBox(box, label, score, classScore) {\n    var _this = _super.call(this, box, label) || this;\n\n    _this._score = score;\n    _this._classScore = classScore;\n    return _this;\n  }\n\n  PredictedBox.assertIsValidPredictedBox = function (box, callee) {\n    LabeledBox.assertIsValidLabeledBox(box, callee);\n\n    if (!isValidProbablitiy(box.score) || !isValidProbablitiy(box.classScore)) {\n      throw new Error(callee + \" - expected properties score (\" + box.score + \") and (\" + box.classScore + \") to be a number between [0, 1]\");\n    }\n  };\n\n  Object.defineProperty(PredictedBox.prototype, \"score\", {\n    get: function get() {\n      return this._score;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PredictedBox.prototype, \"classScore\", {\n    get: function get() {\n      return this._classScore;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return PredictedBox;\n}(LabeledBox);\n\nexport { PredictedBox };","map":{"version":3,"sources":["../../../src/classes/PredictedBox.ts"],"names":[],"mappings":";AAAA,SAAS,kBAAT,QAAmC,UAAnC;AAEA,SAAS,UAAT,QAA2B,cAA3B;;AAGA,IAAA,YAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAkC,EAAA,SAAA,CAAA,YAAA,EAAA,MAAA,CAAA;;AAgBhC,WAAA,YAAA,CAAY,GAAZ,EAA6C,KAA7C,EAA4D,KAA5D,EAA2E,UAA3E,EAA6F;AAA7F,QAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,GAAN,EAAW,KAAX,KAAiB,IADnB;;AAEE,IAAA,KAAI,CAAC,MAAL,GAAc,KAAd;AACA,IAAA,KAAI,CAAC,WAAL,GAAmB,UAAnB;;AACD;;AAlBa,EAAA,YAAA,CAAA,yBAAA,GAAd,UAAwC,GAAxC,EAAkD,MAAlD,EAAgE;AAC9D,IAAA,UAAU,CAAC,uBAAX,CAAmC,GAAnC,EAAwC,MAAxC;;AAEA,QACE,CAAC,kBAAkB,CAAC,GAAG,CAAC,KAAL,CAAnB,IACG,CAAC,kBAAkB,CAAC,GAAG,CAAC,UAAL,CAFxB,EAGE;AACA,YAAM,IAAI,KAAJ,CAAa,MAAM,GAAA,gCAAN,GAAuC,GAAG,CAAC,KAA3C,GAAgD,SAAhD,GAA0D,GAAG,CAAC,UAA9D,GAAwE,iCAArF,CAAN;AACD;AACF,GATa;;AAoBd,EAAA,MAAA,CAAA,cAAA,CAAW,YAAA,CAAA,SAAX,EAAW,OAAX,EAAgB;SAAhB,eAAA;AAA6B,aAAO,KAAK,MAAZ;AAAoB,KAAjC;oBAAA;;AAAA,GAAhB;AACA,EAAA,MAAA,CAAA,cAAA,CAAW,YAAA,CAAA,SAAX,EAAW,YAAX,EAAqB;SAArB,eAAA;AAAkC,aAAO,KAAK,WAAZ;AAAyB,KAAtC;oBAAA;;AAAA,GAArB;AAEF,SAAA,YAAA;AAAC,CAzBD,CAAkC,UAAlC,CAAA","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\r\nimport { isValidProbablitiy } from '../utils';\r\nimport { LabeledBox } from './LabeledBox';\r\nvar PredictedBox = /** @class */ (function (_super) {\r\n    __extends(PredictedBox, _super);\r\n    function PredictedBox(box, label, score, classScore) {\r\n        var _this = _super.call(this, box, label) || this;\r\n        _this._score = score;\r\n        _this._classScore = classScore;\r\n        return _this;\r\n    }\r\n    PredictedBox.assertIsValidPredictedBox = function (box, callee) {\r\n        LabeledBox.assertIsValidLabeledBox(box, callee);\r\n        if (!isValidProbablitiy(box.score)\r\n            || !isValidProbablitiy(box.classScore)) {\r\n            throw new Error(callee + \" - expected properties score (\" + box.score + \") and (\" + box.classScore + \") to be a number between [0, 1]\");\r\n        }\r\n    };\r\n    Object.defineProperty(PredictedBox.prototype, \"score\", {\r\n        get: function () { return this._score; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PredictedBox.prototype, \"classScore\", {\r\n        get: function () { return this._classScore; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PredictedBox;\r\n}(LabeledBox));\r\nexport { PredictedBox };\r\n//# sourceMappingURL=PredictedBox.js.map"]},"metadata":{},"sourceType":"module"}