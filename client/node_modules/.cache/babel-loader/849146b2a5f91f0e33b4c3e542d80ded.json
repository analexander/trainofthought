{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Cast } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\n * Casts a `tf.Tensor` to a new dtype.\n *\n * ```js\n * const x = tf.tensor1d([1.5, 2.5, 3]);\n * tf.cast(x, 'int32').print();\n * ```\n * @param x The input tensor to be casted.\n * @param dtype The dtype to cast the input tensor to.\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\n\nfunction cast_(x, dtype) {\n  var $x = convertToTensor(x, 'x', 'cast'); // Sanity checks.\n\n  if (!util.isValidDtype(dtype)) {\n    throw new Error(\"Failed to cast to unknown dtype \".concat(dtype));\n  }\n\n  if (dtype === 'string' && $x.dtype !== 'string' || dtype !== 'string' && $x.dtype === 'string') {\n    throw new Error('Only strings can be casted to strings');\n  }\n\n  var inputs = {\n    x: $x\n  };\n  var attrs = {\n    dtype: dtype\n  };\n  return ENGINE.runKernelFunc(function (backend) {\n    return backend.cast($x, dtype);\n  }, inputs, null\n  /* grad */\n  , Cast, attrs);\n}\n\nexport var cast = op({\n  cast_: cast_\n});","map":null,"metadata":{},"sourceType":"module"}