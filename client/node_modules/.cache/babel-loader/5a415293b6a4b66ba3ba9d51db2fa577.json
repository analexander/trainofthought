{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { LRNBackprop } from '../kernel_names';\nimport { op } from './operation';\n\nfunction localResponseNormalizationBackprop_(x, y, dy) {\n  var depthRadius = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 5;\n  var bias = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n  var alpha = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;\n  var beta = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0.5;\n\n  var forward = function forward(backend) {\n    return backend.LRNGrad(dy, x, y, depthRadius, bias, alpha, beta);\n  };\n\n  var inputs = {\n    x: x,\n    y: y,\n    dy: dy\n  };\n  var attrs = {\n    depthRadius: depthRadius,\n    bias: bias,\n    alpha: alpha,\n    beta: beta\n  };\n  return ENGINE.runKernelFunc(forward, inputs, null\n  /* grad */\n  , LRNBackprop, attrs);\n}\n\nexport var localResponseNormalizationBackprop = op({\n  localResponseNormalizationBackprop_: localResponseNormalizationBackprop_\n});","map":null,"metadata":{},"sourceType":"module"}