{"ast":null,"code":"'use strict'; // map types from key to human-friendly name\n\nexports.name = new Map([['0', 'File'], // same as File\n['', 'OldFile'], ['1', 'Link'], ['2', 'SymbolicLink'], // Devices and FIFOs aren't fully supported\n// they are parsed, but skipped when unpacking\n['3', 'CharacterDevice'], ['4', 'BlockDevice'], ['5', 'Directory'], ['6', 'FIFO'], // same as File\n['7', 'ContiguousFile'], // pax headers\n['g', 'GlobalExtendedHeader'], ['x', 'ExtendedHeader'], // vendor-specific stuff\n// skip\n['A', 'SolarisACL'], // like 5, but with data, which should be skipped\n['D', 'GNUDumpDir'], // metadata only, skip\n['I', 'Inode'], // data = link path of next file\n['K', 'NextFileHasLongLinkpath'], // data = path of next file\n['L', 'NextFileHasLongPath'], // skip\n['M', 'ContinuationFile'], // like L\n['N', 'OldGnuLongPath'], // skip\n['S', 'SparseFile'], // skip\n['V', 'TapeVolumeHeader'], // like x\n['X', 'OldExtendedHeader']]); // map the other direction\n\nexports.code = new Map(Array.from(exports.name).map(function (kv) {\n  return [kv[1], kv[0]];\n}));","map":null,"metadata":{},"sourceType":"script"}