{"ast":null,"code":"import _classCallCheck from \"/Users/angeldiscopanda/Trilogy-2020/Projects/trainofthought/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getChannels, getSourceCoords } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport var UnpackProgram = function UnpackProgram(outputShape) {\n  _classCallCheck(this, UnpackProgram);\n\n  this.variableNames = ['A'];\n  this.packedInputs = true;\n  this.packedOutput = false;\n  this.outputShape = outputShape;\n  var rank = outputShape.length;\n  var channels = getChannels('rc', rank);\n  var dtype = getCoordsDataType(rank);\n  var sourceCoords = getSourceCoords(rank, channels);\n  var innerDims = channels.slice(-2);\n  var coords = rank <= 1 ? 'rc' : \"vec2(\".concat(innerDims.join(','), \")\");\n  this.userCode = \"\\n      void main() {\\n        \".concat(dtype, \" rc = getOutputCoords();\\n        vec4 packedInput = getA(\").concat(sourceCoords, \");\\n\\n        setOutput(getChannel(packedInput, \").concat(coords, \"));\\n      }\\n    \");\n};","map":null,"metadata":{},"sourceType":"module"}