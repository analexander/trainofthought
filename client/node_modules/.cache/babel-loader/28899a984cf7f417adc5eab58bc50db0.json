{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Transpose } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { transposeImpl } from './Transpose_impl';\nexport function transpose(args) {\n  var inputs = args.inputs,\n      attrs = args.attrs,\n      backend = args.backend;\n  var x = inputs.x;\n  var perm = attrs.perm;\n  assertNotComplex(x, 'transpose');\n  var xRank = x.shape.length;\n  var newShape = new Array(xRank);\n\n  for (var i = 0; i < newShape.length; i++) {\n    newShape[i] = x.shape[perm[i]];\n  }\n\n  var values = backend.data.get(x.dataId).values;\n  var result = transposeImpl(values, x.shape, x.dtype, perm, newShape);\n  var dataId = backend.write(result, newShape, x.dtype);\n  return {\n    dataId: dataId,\n    shape: newShape,\n    dtype: x.dtype\n  };\n}\nexport var transposeConfig = {\n  kernelName: Transpose,\n  backendName: 'cpu',\n  kernelFunc: transpose\n};","map":null,"metadata":{},"sourceType":"module"}