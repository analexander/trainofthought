{"ast":null,"code":"\"use strict\";\n\nmodule.exports = exports = clean;\nexports.usage = 'Removes the entire folder containing the compiled .node module';\n\nvar fs = require('fs');\n\nvar rm = require('rimraf');\n\nvar exists = require('fs').exists || require('path').exists;\n\nvar versioning = require('./util/versioning.js');\n\nvar napi = require('./util/napi.js');\n\nvar path = require('path');\n\nfunction clean(gyp, argv, callback) {\n  var package_json = JSON.parse(fs.readFileSync('./package.json'));\n  var napi_build_version = napi.get_napi_build_version_from_command_args(argv);\n  var opts = versioning.evaluate(package_json, gyp.opts, napi_build_version);\n  var to_delete = opts.module_path;\n\n  if (!to_delete) {\n    return callback(new Error(\"module_path is empty, refusing to delete\"));\n  } else if (path.normalize(to_delete) == path.normalize(process.cwd())) {\n    return callback(new Error(\"module_path is not set, refusing to delete\"));\n  } else {\n    exists(to_delete, function (found) {\n      if (found) {\n        if (!gyp.opts.silent_clean) console.log('[' + package_json.name + '] Removing \"%s\"', to_delete);\n        return rm(to_delete, callback);\n      }\n\n      return callback();\n    });\n  }\n}","map":null,"metadata":{},"sourceType":"script"}