{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport * as tf from '@tensorflow/tfjs-core';\nimport { env } from '../env';\nimport { isTensor4D } from '../utils';\nexport function imageTensorToCanvas(imgTensor, canvas) {\n  return __awaiter(this, void 0, void 0, function () {\n    var targetCanvas, _a, height, width, numChannels, imgTensor3D;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          targetCanvas = canvas || env.getEnv().createCanvasElement();\n          _a = imgTensor.shape.slice(isTensor4D(imgTensor) ? 1 : 0), height = _a[0], width = _a[1], numChannels = _a[2];\n          imgTensor3D = tf.tidy(function () {\n            return imgTensor.as3D(height, width, numChannels).toInt();\n          });\n          return [4\n          /*yield*/\n          , tf.browser.toPixels(imgTensor3D, targetCanvas)];\n\n        case 1:\n          _b.sent();\n\n          imgTensor3D.dispose();\n          return [2\n          /*return*/\n          , targetCanvas];\n      }\n    });\n  });\n}","map":{"version":3,"sources":["../../../src/dom/imageTensorToCanvas.ts"],"names":[],"mappings":";AAAA,OAAO,KAAK,EAAZ,MAAoB,uBAApB;AAEA,SAAS,GAAT,QAAoB,QAApB;AACA,SAAS,UAAT,QAA2B,UAA3B;AAEA,OAAM,SAAgB,mBAAhB,CACJ,SADI,EAEJ,MAFI,EAEsB;;;;;;;AAGpB,UAAA,YAAY,GAAG,MAAM,IAAI,GAAG,CAAC,MAAJ,GAAa,mBAAb,EAAzB;AAEA,UAAA,EAAA,GAA+B,SAAS,CAAC,KAAV,CAAgB,KAAhB,CAAsB,UAAU,CAAC,SAAD,CAAV,GAAwB,CAAxB,GAA4B,CAAlD,CAA/B,EAAC,MAAM,GAAA,EAAA,CAAA,CAAA,CAAP,EAAS,KAAK,GAAA,EAAA,CAAA,CAAA,CAAd,EAAgB,WAAW,GAAA,EAAA,CAAA,CAAA,CAA3B;AACA,UAAA,WAAW,GAAG,EAAE,CAAC,IAAH,CAAQ,YAAA;AAAM,mBAAA,SAAS,CAAC,IAAV,CAAe,MAAf,EAAuB,KAAvB,EAA8B,WAA9B,EAAA,KAAA,EAAA;AAAkD,WAAhE,CAAd;AACN,iBAAA,CAAA;AAAA;AAAA,YAAM,EAAE,CAAC,OAAH,CAAW,QAAX,CAAoB,WAApB,EAAiC,YAAjC,CAAN,CAAA;;;AAAA,UAAA,EAAA,CAAA,IAAA;;AAEA,UAAA,WAAW,CAAC,OAAZ;AAEA,iBAAA,CAAA;AAAA;AAAA,YAAO,YAAP,CAAA;;;;AACD","sourceRoot":"","sourcesContent":["import { __awaiter, __generator } from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { env } from '../env';\r\nimport { isTensor4D } from '../utils';\r\nexport function imageTensorToCanvas(imgTensor, canvas) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var targetCanvas, _a, height, width, numChannels, imgTensor3D;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    targetCanvas = canvas || env.getEnv().createCanvasElement();\r\n                    _a = imgTensor.shape.slice(isTensor4D(imgTensor) ? 1 : 0), height = _a[0], width = _a[1], numChannels = _a[2];\r\n                    imgTensor3D = tf.tidy(function () { return imgTensor.as3D(height, width, numChannels).toInt(); });\r\n                    return [4 /*yield*/, tf.browser.toPixels(imgTensor3D, targetCanvas)];\r\n                case 1:\r\n                    _b.sent();\r\n                    imgTensor3D.dispose();\r\n                    return [2 /*return*/, targetCanvas];\r\n            }\r\n        });\r\n    });\r\n}\r\n//# sourceMappingURL=imageTensorToCanvas.js.map"]},"metadata":{},"sourceType":"module"}