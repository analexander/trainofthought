{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport * as tf from '@tensorflow/tfjs-core';\nimport { nonMaxSuppression } from '../ops';\nimport { extractImagePatches } from './extractImagePatches';\nimport { MtcnnBox } from './MtcnnBox';\nimport { RNet } from './RNet';\nexport function stage2(img, inputBoxes, scoreThreshold, params, stats) {\n  return __awaiter(this, void 0, void 0, function () {\n    var ts, rnetInputs, rnetOuts, scoresTensor, scores, _a, _b, indices, filteredBoxes, filteredScores, finalBoxes, finalScores, indicesNms, regions_1;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          ts = Date.now();\n          return [4\n          /*yield*/\n          , extractImagePatches(img, inputBoxes, {\n            width: 24,\n            height: 24\n          })];\n\n        case 1:\n          rnetInputs = _c.sent();\n          stats.stage2_extractImagePatches = Date.now() - ts;\n          ts = Date.now();\n          rnetOuts = rnetInputs.map(function (rnetInput) {\n            var out = RNet(rnetInput, params);\n            rnetInput.dispose();\n            return out;\n          });\n          stats.stage2_rnet = Date.now() - ts;\n          scoresTensor = rnetOuts.length > 1 ? tf.concat(rnetOuts.map(function (out) {\n            return out.scores;\n          })) : rnetOuts[0].scores;\n          _b = (_a = Array).from;\n          return [4\n          /*yield*/\n          , scoresTensor.data()];\n\n        case 2:\n          scores = _b.apply(_a, [_c.sent()]);\n          scoresTensor.dispose();\n          indices = scores.map(function (score, idx) {\n            return {\n              score: score,\n              idx: idx\n            };\n          }).filter(function (c) {\n            return c.score > scoreThreshold;\n          }).map(function (_a) {\n            var idx = _a.idx;\n            return idx;\n          });\n          filteredBoxes = indices.map(function (idx) {\n            return inputBoxes[idx];\n          });\n          filteredScores = indices.map(function (idx) {\n            return scores[idx];\n          });\n          finalBoxes = [];\n          finalScores = [];\n\n          if (filteredBoxes.length > 0) {\n            ts = Date.now();\n            indicesNms = nonMaxSuppression(filteredBoxes, filteredScores, 0.7);\n            stats.stage2_nms = Date.now() - ts;\n            regions_1 = indicesNms.map(function (idx) {\n              var regionsData = rnetOuts[indices[idx]].regions.arraySync();\n              return new MtcnnBox(regionsData[0][0], regionsData[0][1], regionsData[0][2], regionsData[0][3]);\n            });\n            finalScores = indicesNms.map(function (idx) {\n              return filteredScores[idx];\n            });\n            finalBoxes = indicesNms.map(function (idx, i) {\n              return filteredBoxes[idx].calibrate(regions_1[i]);\n            });\n          }\n\n          rnetOuts.forEach(function (t) {\n            t.regions.dispose();\n            t.scores.dispose();\n          });\n          return [2\n          /*return*/\n          , {\n            boxes: finalBoxes,\n            scores: finalScores\n          }];\n      }\n    });\n  });\n}","map":{"version":3,"sources":["../../../src/mtcnn/stage2.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __awaiter, __generator } from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { nonMaxSuppression } from '../ops';\r\nimport { extractImagePatches } from './extractImagePatches';\r\nimport { MtcnnBox } from './MtcnnBox';\r\nimport { RNet } from './RNet';\r\nexport function stage2(img, inputBoxes, scoreThreshold, params, stats) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var ts, rnetInputs, rnetOuts, scoresTensor, scores, _a, _b, indices, filteredBoxes, filteredScores, finalBoxes, finalScores, indicesNms, regions_1;\r\n        return __generator(this, function (_c) {\r\n            switch (_c.label) {\r\n                case 0:\r\n                    ts = Date.now();\r\n                    return [4 /*yield*/, extractImagePatches(img, inputBoxes, { width: 24, height: 24 })];\r\n                case 1:\r\n                    rnetInputs = _c.sent();\r\n                    stats.stage2_extractImagePatches = Date.now() - ts;\r\n                    ts = Date.now();\r\n                    rnetOuts = rnetInputs.map(function (rnetInput) {\r\n                        var out = RNet(rnetInput, params);\r\n                        rnetInput.dispose();\r\n                        return out;\r\n                    });\r\n                    stats.stage2_rnet = Date.now() - ts;\r\n                    scoresTensor = rnetOuts.length > 1\r\n                        ? tf.concat(rnetOuts.map(function (out) { return out.scores; }))\r\n                        : rnetOuts[0].scores;\r\n                    _b = (_a = Array).from;\r\n                    return [4 /*yield*/, scoresTensor.data()];\r\n                case 2:\r\n                    scores = _b.apply(_a, [_c.sent()]);\r\n                    scoresTensor.dispose();\r\n                    indices = scores\r\n                        .map(function (score, idx) { return ({ score: score, idx: idx }); })\r\n                        .filter(function (c) { return c.score > scoreThreshold; })\r\n                        .map(function (_a) {\r\n                        var idx = _a.idx;\r\n                        return idx;\r\n                    });\r\n                    filteredBoxes = indices.map(function (idx) { return inputBoxes[idx]; });\r\n                    filteredScores = indices.map(function (idx) { return scores[idx]; });\r\n                    finalBoxes = [];\r\n                    finalScores = [];\r\n                    if (filteredBoxes.length > 0) {\r\n                        ts = Date.now();\r\n                        indicesNms = nonMaxSuppression(filteredBoxes, filteredScores, 0.7);\r\n                        stats.stage2_nms = Date.now() - ts;\r\n                        regions_1 = indicesNms.map(function (idx) {\r\n                            var regionsData = rnetOuts[indices[idx]].regions.arraySync();\r\n                            return new MtcnnBox(regionsData[0][0], regionsData[0][1], regionsData[0][2], regionsData[0][3]);\r\n                        });\r\n                        finalScores = indicesNms.map(function (idx) { return filteredScores[idx]; });\r\n                        finalBoxes = indicesNms.map(function (idx, i) { return filteredBoxes[idx].calibrate(regions_1[i]); });\r\n                    }\r\n                    rnetOuts.forEach(function (t) {\r\n                        t.regions.dispose();\r\n                        t.scores.dispose();\r\n                    });\r\n                    return [2 /*return*/, {\r\n                            boxes: finalBoxes,\r\n                            scores: finalScores\r\n                        }];\r\n            }\r\n        });\r\n    });\r\n}\r\n//# sourceMappingURL=stage2.js.map"]},"metadata":{},"sourceType":"module"}