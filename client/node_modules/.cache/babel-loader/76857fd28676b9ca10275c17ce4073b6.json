{"ast":null,"code":"var isNumber = function isNumber(arg) {\n  return typeof arg === 'number';\n};\n\nexport function validateConfig(config) {\n  if (!config) {\n    throw new Error(\"invalid config: \" + config);\n  }\n\n  if (typeof config.withSeparableConvs !== 'boolean') {\n    throw new Error(\"config.withSeparableConvs has to be a boolean, have: \" + config.withSeparableConvs);\n  }\n\n  if (!isNumber(config.iouThreshold) || config.iouThreshold < 0 || config.iouThreshold > 1.0) {\n    throw new Error(\"config.iouThreshold has to be a number between [0, 1], have: \" + config.iouThreshold);\n  }\n\n  if (!Array.isArray(config.classes) || !config.classes.length || !config.classes.every(function (c) {\n    return typeof c === 'string';\n  })) {\n    throw new Error(\"config.classes has to be an array class names: string[], have: \" + JSON.stringify(config.classes));\n  }\n\n  if (!Array.isArray(config.anchors) || !config.anchors.length || !config.anchors.map(function (a) {\n    return a || {};\n  }).every(function (a) {\n    return isNumber(a.x) && isNumber(a.y);\n  })) {\n    throw new Error(\"config.anchors has to be an array of { x: number, y: number }, have: \" + JSON.stringify(config.anchors));\n  }\n\n  if (config.meanRgb && (!Array.isArray(config.meanRgb) || config.meanRgb.length !== 3 || !config.meanRgb.every(isNumber))) {\n    throw new Error(\"config.meanRgb has to be an array of shape [number, number, number], have: \" + JSON.stringify(config.meanRgb));\n  }\n}","map":{"version":3,"sources":["../../../src/tinyYolov2/config.ts"],"names":[],"mappings":"AAaA,IAAM,QAAQ,GAAG,SAAX,QAAW,CAAC,GAAD,EAAS;AAAK,SAAA,OAAO,GAAP,KAAA,QAAA;AAAuB,CAAtD;;AAEA,OAAM,SAAU,cAAV,CAAyB,MAAzB,EAAoC;AACxC,MAAI,CAAC,MAAL,EAAa;AACX,UAAM,IAAI,KAAJ,CAAU,qBAAmB,MAA7B,CAAN;AACD;;AAED,MAAI,OAAO,MAAM,CAAC,kBAAd,KAAqC,SAAzC,EAAoD;AAClD,UAAM,IAAI,KAAJ,CAAU,0DAAwD,MAAM,CAAC,kBAAzE,CAAN;AACD;;AAED,MAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAR,CAAT,IAAkC,MAAM,CAAC,YAAP,GAAsB,CAAxD,IAA6D,MAAM,CAAC,YAAP,GAAsB,GAAvF,EAA4F;AAC1F,UAAM,IAAI,KAAJ,CAAU,kEAAgE,MAAM,CAAC,YAAjF,CAAN;AACD;;AAED,MACE,CAAC,KAAK,CAAC,OAAN,CAAc,MAAM,CAAC,OAArB,CAAD,IACG,CAAC,MAAM,CAAC,OAAP,CAAe,MADnB,IAEG,CAAC,MAAM,CAAC,OAAP,CAAe,KAAf,CAAqB,UAAC,CAAD,EAAO;AAAK,WAAA,OAAO,CAAP,KAAA,QAAA;AAAqB,GAAtD,CAHN,EAIE;AAEA,UAAM,IAAI,KAAJ,CAAU,oEAAkE,IAAI,CAAC,SAAL,CAAe,MAAM,CAAC,OAAtB,CAA5E,CAAN;AACD;;AAED,MACE,CAAC,KAAK,CAAC,OAAN,CAAc,MAAM,CAAC,OAArB,CAAD,IACG,CAAC,MAAM,CAAC,OAAP,CAAe,MADnB,IAEG,CAAC,MAAM,CAAC,OAAP,CAAe,GAAf,CAAmB,UAAC,CAAD,EAAO;AAAK,WAAA,CAAC,IAAD,EAAA;AAAO,GAAtC,EAAwC,KAAxC,CAA8C,UAAC,CAAD,EAAO;AAAK,WAAA,QAAQ,CAAC,CAAC,CAAC,CAAH,CAAR,IAAiB,QAAQ,CAAC,CAAC,CAA3B,CAAyB,CAAzB;AAA8B,GAAxF,CAHN,EAIE;AAEA,UAAM,IAAI,KAAJ,CAAU,0EAAwE,IAAI,CAAC,SAAL,CAAe,MAAM,CAAC,OAAtB,CAAlF,CAAN;AACD;;AAED,MAAI,MAAM,CAAC,OAAP,KACF,CAAC,KAAK,CAAC,OAAN,CAAc,MAAM,CAAC,OAArB,CAAD,IACG,MAAM,CAAC,OAAP,CAAe,MAAf,KAA0B,CAD7B,IAEG,CAAC,MAAM,CAAC,OAAP,CAAe,KAAf,CAAqB,QAArB,CAHF,CAAJ,EAIG;AAED,UAAM,IAAI,KAAJ,CAAU,gFAA8E,IAAI,CAAC,SAAL,CAAe,MAAM,CAAC,OAAtB,CAAxF,CAAN;AACD;AACF","sourceRoot":"","sourcesContent":["var isNumber = function (arg) { return typeof arg === 'number'; };\r\nexport function validateConfig(config) {\r\n    if (!config) {\r\n        throw new Error(\"invalid config: \" + config);\r\n    }\r\n    if (typeof config.withSeparableConvs !== 'boolean') {\r\n        throw new Error(\"config.withSeparableConvs has to be a boolean, have: \" + config.withSeparableConvs);\r\n    }\r\n    if (!isNumber(config.iouThreshold) || config.iouThreshold < 0 || config.iouThreshold > 1.0) {\r\n        throw new Error(\"config.iouThreshold has to be a number between [0, 1], have: \" + config.iouThreshold);\r\n    }\r\n    if (!Array.isArray(config.classes)\r\n        || !config.classes.length\r\n        || !config.classes.every(function (c) { return typeof c === 'string'; })) {\r\n        throw new Error(\"config.classes has to be an array class names: string[], have: \" + JSON.stringify(config.classes));\r\n    }\r\n    if (!Array.isArray(config.anchors)\r\n        || !config.anchors.length\r\n        || !config.anchors.map(function (a) { return a || {}; }).every(function (a) { return isNumber(a.x) && isNumber(a.y); })) {\r\n        throw new Error(\"config.anchors has to be an array of { x: number, y: number }, have: \" + JSON.stringify(config.anchors));\r\n    }\r\n    if (config.meanRgb && (!Array.isArray(config.meanRgb)\r\n        || config.meanRgb.length !== 3\r\n        || !config.meanRgb.every(isNumber))) {\r\n        throw new Error(\"config.meanRgb has to be an array of shape [number, number, number], have: \" + JSON.stringify(config.meanRgb));\r\n    }\r\n}\r\n//# sourceMappingURL=config.js.map"]},"metadata":{},"sourceType":"module"}