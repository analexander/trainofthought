{"ast":null,"code":"import _classCallCheck from \"/Users/angeldiscopanda/Trilogy-2020/Projects/trainofthought/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/angeldiscopanda/Trilogy-2020/Projects/trainofthought/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/angeldiscopanda/Trilogy-2020/Projects/trainofthought/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/angeldiscopanda/Trilogy-2020/Projects/trainofthought/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/angeldiscopanda/Trilogy-2020/Projects/trainofthought/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _wrapNativeSuper from \"/Users/angeldiscopanda/Trilogy-2020/Projects/trainofthought/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper\";\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * Explicit error types.\n *\n * See the following link for more information about why the code includes\n * calls to setPrototypeOf:\n *\n * https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n */\n// tslint:enable\n\n/**\n * Equivalent of Python's AttributeError.\n */\nexport var AttributeError = /*#__PURE__*/function (_Error) {\n  _inherits(AttributeError, _Error);\n\n  function AttributeError(message) {\n    var _this;\n\n    _classCallCheck(this, AttributeError);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AttributeError).call(this, message)); // Set the prototype explicitly.\n\n    Object.setPrototypeOf(_assertThisInitialized(_assertThisInitialized(_this)), AttributeError.prototype);\n    return _this;\n  }\n\n  return AttributeError;\n}(_wrapNativeSuper(Error));\n/**\n * Equivalent of Python's RuntimeError.\n */\n\nexport var RuntimeError = /*#__PURE__*/function (_Error2) {\n  _inherits(RuntimeError, _Error2);\n\n  function RuntimeError(message) {\n    var _this2;\n\n    _classCallCheck(this, RuntimeError);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(RuntimeError).call(this, message)); // Set the prototype explicitly.\n\n    Object.setPrototypeOf(_assertThisInitialized(_assertThisInitialized(_this2)), RuntimeError.prototype);\n    return _this2;\n  }\n\n  return RuntimeError;\n}(_wrapNativeSuper(Error));\n/**\n * Equivalent of Python's ValueError.\n */\n\nexport var ValueError = /*#__PURE__*/function (_Error3) {\n  _inherits(ValueError, _Error3);\n\n  function ValueError(message) {\n    var _this3;\n\n    _classCallCheck(this, ValueError);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(ValueError).call(this, message)); // Set the prototype explicitly.\n\n    Object.setPrototypeOf(_assertThisInitialized(_assertThisInitialized(_this3)), ValueError.prototype);\n    return _this3;\n  }\n\n  return ValueError;\n}(_wrapNativeSuper(Error));\n/**\n * Equivalent of Python's NotImplementedError.\n */\n\nexport var NotImplementedError = /*#__PURE__*/function (_Error4) {\n  _inherits(NotImplementedError, _Error4);\n\n  function NotImplementedError(message) {\n    var _this4;\n\n    _classCallCheck(this, NotImplementedError);\n\n    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(NotImplementedError).call(this, message)); // Set the prototype explicitly.\n\n    Object.setPrototypeOf(_assertThisInitialized(_assertThisInitialized(_this4)), NotImplementedError.prototype);\n    return _this4;\n  }\n\n  return NotImplementedError;\n}(_wrapNativeSuper(Error));\n/**\n * Equivalent of Python's AssertionError.\n */\n\nexport var AssertionError = /*#__PURE__*/function (_Error5) {\n  _inherits(AssertionError, _Error5);\n\n  function AssertionError(message) {\n    var _this5;\n\n    _classCallCheck(this, AssertionError);\n\n    _this5 = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, message)); // Set the prototype explicitly.\n\n    Object.setPrototypeOf(_assertThisInitialized(_assertThisInitialized(_this5)), AssertionError.prototype);\n    return _this5;\n  }\n\n  return AssertionError;\n}(_wrapNativeSuper(Error));\n/**\n * Equivalent of Python's IndexError.\n */\n\nexport var IndexError = /*#__PURE__*/function (_Error6) {\n  _inherits(IndexError, _Error6);\n\n  function IndexError(message) {\n    var _this6;\n\n    _classCallCheck(this, IndexError);\n\n    _this6 = _possibleConstructorReturn(this, _getPrototypeOf(IndexError).call(this, message)); // Set the prototype explicitly.\n\n    Object.setPrototypeOf(_assertThisInitialized(_assertThisInitialized(_this6)), IndexError.prototype);\n    return _this6;\n  }\n\n  return IndexError;\n}(_wrapNativeSuper(Error));","map":null,"metadata":{},"sourceType":"module"}