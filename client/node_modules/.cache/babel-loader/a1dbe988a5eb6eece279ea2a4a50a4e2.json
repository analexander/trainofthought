{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Transpose } from '@tensorflow/tfjs-core';\nimport { transposeImpl } from './Transpose_impl';\nimport { transposeImplCPU as cpuTranspose } from './Transpose_impl';\nexport var transposeConfig = {\n  kernelName: Transpose,\n  backendName: 'webgl',\n  kernelFunc: function kernelFunc(_ref) {\n    var inputs = _ref.inputs,\n        attrs = _ref.attrs,\n        backend = _ref.backend;\n    var x = inputs.x;\n    var perm = attrs.perm;\n    var webglBackend = backend;\n    var xRank = x.shape.length;\n    var newShape = new Array(xRank);\n\n    for (var i = 0; i < newShape.length; i++) {\n      newShape[i] = x.shape[perm[i]];\n    }\n\n    var out;\n\n    if (webglBackend.shouldExecuteOnCPU([x])) {\n      var xTexData = webglBackend.texData.get(x.dataId);\n      var values = xTexData.values;\n      var outValues = cpuTranspose(values, x.shape, x.dtype, perm, newShape);\n      out = webglBackend.makeTensorInfo(newShape, x.dtype);\n      var outData = webglBackend.texData.get(out.dataId);\n      outData.values = outValues;\n    } else {\n      out = transposeImpl(x, perm, webglBackend);\n    }\n\n    return out;\n  }\n};","map":null,"metadata":{},"sourceType":"module"}