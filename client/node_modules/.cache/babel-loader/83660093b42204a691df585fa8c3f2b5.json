{"ast":null,"code":"import _classCallCheck from \"/Users/angeldiscopanda/Trilogy-2020/Projects/trainofthought/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType } from './shader_compiler';\nexport var StridedSliceProgram = function StridedSliceProgram(begin, strides, size) {\n  _classCallCheck(this, StridedSliceProgram);\n\n  this.variableNames = ['x'];\n  this.outputShape = size;\n  var rank = size.length;\n  var inputDtype = getCoordsDataType(size.length);\n  var dtype = getCoordsDataType(size.length);\n  var newCoords = '';\n\n  if (rank === 1) {\n    newCoords = 'coords * strides + begin';\n  } else {\n    var outputAxis = 0;\n    newCoords = size.map(function (_, i) {\n      outputAxis++;\n      return size.length === 1 ? \"coords * strides[\".concat(i, \"] + begin[\").concat(i, \"]\") : \"coords[\".concat(outputAxis - 1, \"] * strides[\").concat(i, \"] + begin[\").concat(i, \"]\");\n    }).join(',');\n  }\n\n  this.userCode = \"\\n      \".concat(inputDtype, \" begin = \").concat(inputDtype, \"(\").concat(begin, \");\\n      \").concat(inputDtype, \" strides = \").concat(inputDtype, \"(\").concat(strides, \");\\n\\n      void main() {\\n        \").concat(dtype, \" coords = getOutputCoords();\\n        setOutput(getX(\").concat(newCoords, \"));\\n      }\\n    \");\n};","map":null,"metadata":{},"sourceType":"module"}