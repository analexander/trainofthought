{"ast":null,"code":"\"use strict\";\n\nmodule.exports = exports = unpublish;\nexports.usage = 'Lists all published binaries (requires aws-sdk)';\n\nvar fs = require('fs');\n\nvar log = require('npmlog');\n\nvar versioning = require('./util/versioning.js');\n\nvar s3_setup = require('./util/s3_setup.js');\n\nvar config = require('rc')(\"node_pre_gyp\", {\n  acl: \"public-read\"\n});\n\nfunction unpublish(gyp, argv, callback) {\n  var AWS = require(\"aws-sdk\");\n\n  var package_json = JSON.parse(fs.readFileSync('./package.json'));\n  var opts = versioning.evaluate(package_json, gyp.opts);\n  s3_setup.detect(opts.hosted_path, config);\n  AWS.config.update(config);\n  var s3 = new AWS.S3();\n  var s3_opts = {\n    Bucket: config.bucket,\n    Prefix: config.prefix\n  };\n  s3.listObjects(s3_opts, function (err, meta) {\n    if (err && err.code == 'NotFound') {\n      return callback(new Error('[' + package_json.name + '] Not found: https://' + s3_opts.Bucket + '.s3.amazonaws.com/' + config.prefix));\n    } else if (err) {\n      return callback(err);\n    } else {\n      log.verbose(JSON.stringify(meta, null, 1));\n\n      if (meta && meta.Contents) {\n        meta.Contents.forEach(function (obj) {\n          console.log(obj.Key);\n        });\n      } else {\n        console.error('[' + package_json.name + '] No objects found at https://' + s3_opts.Bucket + '.s3.amazonaws.com/' + config.prefix);\n      }\n\n      return callback();\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"script"}