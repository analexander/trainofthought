{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\n\nvar ComposableTask =\n/** @class */\nfunction () {\n  function ComposableTask() {}\n\n  ComposableTask.prototype.then = function (onfulfilled) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = onfulfilled;\n            return [4\n            /*yield*/\n            , this.run()];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.apply(void 0, [_b.sent()])];\n        }\n      });\n    });\n  };\n\n  ComposableTask.prototype.run = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        throw new Error('ComposableTask - run is not implemented');\n      });\n    });\n  };\n\n  return ComposableTask;\n}();\n\nexport { ComposableTask };","map":{"version":3,"sources":["../../../src/globalApi/ComposableTask.ts"],"names":[],"mappings":";;AAAA,IAAA,cAAA;AAAA;AAAA,YAAA;AAAA,WAAA,cAAA,GAAA,CAWC;;AATc,EAAA,cAAA,CAAA,SAAA,CAAA,IAAA,GAAb,UACE,WADF,EAC+C;;;;;;;AAEtC,YAAA,EAAA,GAAA,WAAA;AAAY,mBAAA,CAAA;AAAA;AAAA,cAAM,KAAK,GAAL,EAAN,CAAA;;;AAAnB,mBAAA,CAAA;AAAA;AAAA,cAAO,EAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAY,EAAA,CAAA,IAAA,EAAZ,CAAA,CAAP,CAAA;;;;AACD,GAJY;;AAMA,EAAA,cAAA,CAAA,SAAA,CAAA,GAAA,GAAb,YAAA;;;AACE,cAAM,IAAI,KAAJ,CAAU,yCAAV,CAAN;;;AACD,GAFY;;AAGf,SAAA,cAAA;AAAC,CAXD,EAAA","sourceRoot":"","sourcesContent":["import { __awaiter, __generator } from \"tslib\";\r\nvar ComposableTask = /** @class */ (function () {\r\n    function ComposableTask() {\r\n    }\r\n    ComposableTask.prototype.then = function (onfulfilled) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = onfulfilled;\r\n                        return [4 /*yield*/, this.run()];\r\n                    case 1: return [2 /*return*/, _a.apply(void 0, [_b.sent()])];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ComposableTask.prototype.run = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                throw new Error('ComposableTask - run is not implemented');\r\n            });\r\n        });\r\n    };\r\n    return ComposableTask;\r\n}());\r\nexport { ComposableTask };\r\n//# sourceMappingURL=ComposableTask.js.map"]},"metadata":{},"sourceType":"module"}