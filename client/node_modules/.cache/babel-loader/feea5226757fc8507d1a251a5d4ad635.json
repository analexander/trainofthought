{"ast":null,"code":"import { Dimensions } from './classes';\nimport { FaceDetection } from './classes/FaceDetection';\nimport { FaceLandmarks } from './classes/FaceLandmarks';\nimport { extendWithFaceDetection, isWithFaceDetection } from './factories/WithFaceDetection';\nimport { extendWithFaceLandmarks, isWithFaceLandmarks } from './factories/WithFaceLandmarks';\nexport function resizeResults(results, dimensions) {\n  var _a = new Dimensions(dimensions.width, dimensions.height),\n      width = _a.width,\n      height = _a.height;\n\n  if (width <= 0 || height <= 0) {\n    throw new Error(\"resizeResults - invalid dimensions: \" + JSON.stringify({\n      width: width,\n      height: height\n    }));\n  }\n\n  if (Array.isArray(results)) {\n    return results.map(function (obj) {\n      return resizeResults(obj, {\n        width: width,\n        height: height\n      });\n    });\n  }\n\n  if (isWithFaceLandmarks(results)) {\n    var resizedDetection = results.detection.forSize(width, height);\n    var resizedLandmarks = results.unshiftedLandmarks.forSize(resizedDetection.box.width, resizedDetection.box.height);\n    return extendWithFaceLandmarks(extendWithFaceDetection(results, resizedDetection), resizedLandmarks);\n  }\n\n  if (isWithFaceDetection(results)) {\n    return extendWithFaceDetection(results, results.detection.forSize(width, height));\n  }\n\n  if (results instanceof FaceLandmarks || results instanceof FaceDetection) {\n    return results.forSize(width, height);\n  }\n\n  return results;\n}","map":{"version":3,"sources":["../../src/resizeResults.ts"],"names":[],"mappings":"AAAA,SAAS,UAAT,QAAwC,WAAxC;AACA,SAAS,aAAT,QAA8B,yBAA9B;AACA,SAAS,aAAT,QAA8B,yBAA9B;AACA,SAAS,uBAAT,EAAkC,mBAAlC,QAA6D,+BAA7D;AACA,SAAS,uBAAT,EAAkC,mBAAlC,QAA6D,+BAA7D;AAEA,OAAM,SAAU,aAAV,CAA2B,OAA3B,EAAuC,UAAvC,EAA8D;AAE5D,MAAA,EAAA,GAAA,IAAA,UAAA,CAAA,UAAA,CAAA,KAAA,EAAA,UAAA,CAAA,MAAA,CAAA;AAAA,MAAE,KAAA,GAAA,EAAA,CAAA,KAAF;AAAA,MAAS,MAAA,GAAA,EAAA,CAAA,MAAT;;AAEN,MAAI,KAAK,IAAI,CAAT,IAAc,MAAM,IAAI,CAA5B,EAA+B;AAC7B,UAAM,IAAI,KAAJ,CAAU,yCAAuC,IAAI,CAAC,SAAL,CAAe;AAAE,MAAA,KAAK,EAAA,KAAP;AAAS,MAAA,MAAM,EAAA;AAAf,KAAf,CAAjD,CAAN;AACD;;AAED,MAAI,KAAK,CAAC,OAAN,CAAc,OAAd,CAAJ,EAA4B;AAC1B,WAAO,OAAO,CAAC,GAAR,CAAY,UAAA,GAAA,EAAG;AAAI,aAAA,aAAa,CAAC,GAAD,EAAM;AAAE,QAAA,KAAK,EAAA,KAAP;AAAS,QAAA,MAAM,EAAlC;AAAmB,OAAN,CAAb;AAAqC,KAAxD,CAAP;AACD;;AAED,MAAI,mBAAmB,CAAC,OAAD,CAAvB,EAAkC;AAChC,QAAM,gBAAgB,GAAG,OAAO,CAAC,SAAR,CAAkB,OAAlB,CAA0B,KAA1B,EAAiC,MAAjC,CAAzB;AACA,QAAM,gBAAgB,GAAG,OAAO,CAAC,kBAAR,CAA2B,OAA3B,CAAmC,gBAAgB,CAAC,GAAjB,CAAqB,KAAxD,EAA+D,gBAAgB,CAAC,GAAjB,CAAqB,MAApF,CAAzB;AAEA,WAAO,uBAAuB,CAAC,uBAAuB,CAAC,OAAD,EAAU,gBAAV,CAAxB,EAAqD,gBAArD,CAA9B;AACD;;AAED,MAAI,mBAAmB,CAAC,OAAD,CAAvB,EAAkC;AAChC,WAAO,uBAAuB,CAAC,OAAD,EAAU,OAAO,CAAC,SAAR,CAAkB,OAAlB,CAA0B,KAA1B,EAAiC,MAAjC,CAAV,CAA9B;AACD;;AAED,MAAI,OAAO,YAAY,aAAnB,IAAoC,OAAO,YAAY,aAA3D,EAA0E;AACxE,WAAQ,OAAe,CAAC,OAAhB,CAAwB,KAAxB,EAA+B,MAA/B,CAAR;AACD;;AAED,SAAO,OAAP;AACD","sourceRoot":"","sourcesContent":["import { Dimensions } from './classes';\r\nimport { FaceDetection } from './classes/FaceDetection';\r\nimport { FaceLandmarks } from './classes/FaceLandmarks';\r\nimport { extendWithFaceDetection, isWithFaceDetection } from './factories/WithFaceDetection';\r\nimport { extendWithFaceLandmarks, isWithFaceLandmarks } from './factories/WithFaceLandmarks';\r\nexport function resizeResults(results, dimensions) {\r\n    var _a = new Dimensions(dimensions.width, dimensions.height), width = _a.width, height = _a.height;\r\n    if (width <= 0 || height <= 0) {\r\n        throw new Error(\"resizeResults - invalid dimensions: \" + JSON.stringify({ width: width, height: height }));\r\n    }\r\n    if (Array.isArray(results)) {\r\n        return results.map(function (obj) { return resizeResults(obj, { width: width, height: height }); });\r\n    }\r\n    if (isWithFaceLandmarks(results)) {\r\n        var resizedDetection = results.detection.forSize(width, height);\r\n        var resizedLandmarks = results.unshiftedLandmarks.forSize(resizedDetection.box.width, resizedDetection.box.height);\r\n        return extendWithFaceLandmarks(extendWithFaceDetection(results, resizedDetection), resizedLandmarks);\r\n    }\r\n    if (isWithFaceDetection(results)) {\r\n        return extendWithFaceDetection(results, results.detection.forSize(width, height));\r\n    }\r\n    if (results instanceof FaceLandmarks || results instanceof FaceDetection) {\r\n        return results.forSize(width, height);\r\n    }\r\n    return results;\r\n}\r\n//# sourceMappingURL=resizeResults.js.map"]},"metadata":{},"sourceType":"module"}