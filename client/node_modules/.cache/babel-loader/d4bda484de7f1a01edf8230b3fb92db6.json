{"ast":null,"code":"import * as tf from '@tensorflow/tfjs-core';\nimport { scale } from './scaleLayer';\n\nfunction convLayer(x, params, strides, withRelu, padding) {\n  if (padding === void 0) {\n    padding = 'same';\n  }\n\n  var _a = params.conv,\n      filters = _a.filters,\n      bias = _a.bias;\n  var out = tf.conv2d(x, filters, strides, padding);\n  out = tf.add(out, bias);\n  out = scale(out, params.scale);\n  return withRelu ? tf.relu(out) : out;\n}\n\nexport function conv(x, params) {\n  return convLayer(x, params, [1, 1], true);\n}\nexport function convNoRelu(x, params) {\n  return convLayer(x, params, [1, 1], false);\n}\nexport function convDown(x, params) {\n  return convLayer(x, params, [2, 2], true, 'valid');\n}","map":{"version":3,"sources":["../../../src/faceRecognitionNet/convLayer.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAZ,MAAoB,uBAApB;AAEA,SAAS,KAAT,QAAsB,cAAtB;;AAIA,SAAS,SAAT,CACE,CADF,EAEE,MAFF,EAGE,OAHF,EAIE,QAJF,EAKE,OALF,EAKoC;AAAlC,MAAA,OAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,MAAA;AAAkC;;AAE5B,MAAA,EAAA,GAAA,MAAA,CAAA,IAAA;AAAA,MAAE,OAAA,GAAA,EAAA,CAAA,OAAF;AAAA,MAAW,IAAA,GAAA,EAAA,CAAA,IAAX;AAEN,MAAI,GAAG,GAAG,EAAE,CAAC,MAAH,CAAU,CAAV,EAAa,OAAb,EAAsB,OAAtB,EAA+B,OAA/B,CAAV;AACA,EAAA,GAAG,GAAG,EAAE,CAAC,GAAH,CAAO,GAAP,EAAY,IAAZ,CAAN;AACA,EAAA,GAAG,GAAG,KAAK,CAAC,GAAD,EAAM,MAAM,CAAC,KAAb,CAAX;AACA,SAAO,QAAQ,GAAG,EAAE,CAAC,IAAH,CAAQ,GAAR,CAAH,GAAkB,GAAjC;AACD;;AAED,OAAM,SAAU,IAAV,CAAe,CAAf,EAA+B,MAA/B,EAAsD;AAC1D,SAAO,SAAS,CAAC,CAAD,EAAI,MAAJ,EAAY,CAAC,CAAD,EAAI,CAAJ,CAAZ,EAAoB,IAApB,CAAhB;AACD;AAED,OAAM,SAAU,UAAV,CAAqB,CAArB,EAAqC,MAArC,EAA4D;AAChE,SAAO,SAAS,CAAC,CAAD,EAAI,MAAJ,EAAY,CAAC,CAAD,EAAI,CAAJ,CAAZ,EAAoB,KAApB,CAAhB;AACD;AAED,OAAM,SAAU,QAAV,CAAmB,CAAnB,EAAmC,MAAnC,EAA0D;AAC9D,SAAO,SAAS,CAAC,CAAD,EAAI,MAAJ,EAAY,CAAC,CAAD,EAAI,CAAJ,CAAZ,EAAoB,IAApB,EAA0B,OAA1B,CAAhB;AACD","sourceRoot":"","sourcesContent":["import * as tf from '@tensorflow/tfjs-core';\r\nimport { scale } from './scaleLayer';\r\nfunction convLayer(x, params, strides, withRelu, padding) {\r\n    if (padding === void 0) { padding = 'same'; }\r\n    var _a = params.conv, filters = _a.filters, bias = _a.bias;\r\n    var out = tf.conv2d(x, filters, strides, padding);\r\n    out = tf.add(out, bias);\r\n    out = scale(out, params.scale);\r\n    return withRelu ? tf.relu(out) : out;\r\n}\r\nexport function conv(x, params) {\r\n    return convLayer(x, params, [1, 1], true);\r\n}\r\nexport function convNoRelu(x, params) {\r\n    return convLayer(x, params, [1, 1], false);\r\n}\r\nexport function convDown(x, params) {\r\n    return convLayer(x, params, [2, 2], true, 'valid');\r\n}\r\n//# sourceMappingURL=convLayer.js.map"]},"metadata":{},"sourceType":"module"}