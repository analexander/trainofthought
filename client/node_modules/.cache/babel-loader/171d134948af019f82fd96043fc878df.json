{"ast":null,"code":"var path = require('path');\n\nvar fs = require('fs');\n\nvar _0777 = parseInt('0777', 8);\n\nmodule.exports = mkdirP.mkdirp = mkdirP.mkdirP = mkdirP;\n\nfunction mkdirP(p, opts, f, made) {\n  if (typeof opts === 'function') {\n    f = opts;\n    opts = {};\n  } else if (!opts || typeof opts !== 'object') {\n    opts = {\n      mode: opts\n    };\n  }\n\n  var mode = opts.mode;\n  var xfs = opts.fs || fs;\n\n  if (mode === undefined) {\n    mode = _0777;\n  }\n\n  if (!made) made = null;\n\n  var cb = f || function () {};\n\n  p = path.resolve(p);\n  xfs.mkdir(p, mode, function (er) {\n    if (!er) {\n      made = made || p;\n      return cb(null, made);\n    }\n\n    switch (er.code) {\n      case 'ENOENT':\n        if (path.dirname(p) === p) return cb(er);\n        mkdirP(path.dirname(p), opts, function (er, made) {\n          if (er) cb(er, made);else mkdirP(p, opts, cb, made);\n        });\n        break;\n      // In the case of any other error, just see if there's a dir\n      // there already.  If so, then hooray!  If not, then something\n      // is borked.\n\n      default:\n        xfs.stat(p, function (er2, stat) {\n          // if the stat fails, then that's super weird.\n          // let the original error be the failure reason.\n          if (er2 || !stat.isDirectory()) cb(er, made);else cb(null, made);\n        });\n        break;\n    }\n  });\n}\n\nmkdirP.sync = function sync(p, opts, made) {\n  if (!opts || typeof opts !== 'object') {\n    opts = {\n      mode: opts\n    };\n  }\n\n  var mode = opts.mode;\n  var xfs = opts.fs || fs;\n\n  if (mode === undefined) {\n    mode = _0777;\n  }\n\n  if (!made) made = null;\n  p = path.resolve(p);\n\n  try {\n    xfs.mkdirSync(p, mode);\n    made = made || p;\n  } catch (err0) {\n    switch (err0.code) {\n      case 'ENOENT':\n        made = sync(path.dirname(p), opts, made);\n        sync(p, opts, made);\n        break;\n      // In the case of any other error, just see if there's a dir\n      // there already.  If so, then hooray!  If not, then something\n      // is borked.\n\n      default:\n        var stat;\n\n        try {\n          stat = xfs.statSync(p);\n        } catch (err1) {\n          throw err0;\n        }\n\n        if (!stat.isDirectory()) throw err0;\n        break;\n    }\n  }\n\n  return made;\n};","map":null,"metadata":{},"sourceType":"script"}