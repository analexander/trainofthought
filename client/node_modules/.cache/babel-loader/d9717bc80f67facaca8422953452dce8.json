{"ast":null,"code":"import { disposeUnusedWeightTensors } from '../common/disposeUnusedWeightTensors';\nimport { loadSeparableConvParamsFactory } from '../common/extractSeparableConvParamsFactory';\nimport { extractWeightEntryFactory } from '../common/extractWeightEntryFactory';\n\nfunction extractorsFactory(weightMap, paramMappings) {\n  var extractWeightEntry = extractWeightEntryFactory(weightMap, paramMappings);\n\n  function extractBatchNormParams(prefix) {\n    var sub = extractWeightEntry(prefix + \"/sub\", 1);\n    var truediv = extractWeightEntry(prefix + \"/truediv\", 1);\n    return {\n      sub: sub,\n      truediv: truediv\n    };\n  }\n\n  function extractConvParams(prefix) {\n    var filters = extractWeightEntry(prefix + \"/filters\", 4);\n    var bias = extractWeightEntry(prefix + \"/bias\", 1);\n    return {\n      filters: filters,\n      bias: bias\n    };\n  }\n\n  function extractConvWithBatchNormParams(prefix) {\n    var conv = extractConvParams(prefix + \"/conv\");\n    var bn = extractBatchNormParams(prefix + \"/bn\");\n    return {\n      conv: conv,\n      bn: bn\n    };\n  }\n\n  var extractSeparableConvParams = loadSeparableConvParamsFactory(extractWeightEntry);\n  return {\n    extractConvParams: extractConvParams,\n    extractConvWithBatchNormParams: extractConvWithBatchNormParams,\n    extractSeparableConvParams: extractSeparableConvParams\n  };\n}\n\nexport function extractParamsFromWeigthMap(weightMap, config) {\n  var paramMappings = [];\n\n  var _a = extractorsFactory(weightMap, paramMappings),\n      extractConvParams = _a.extractConvParams,\n      extractConvWithBatchNormParams = _a.extractConvWithBatchNormParams,\n      extractSeparableConvParams = _a.extractSeparableConvParams;\n\n  var params;\n\n  if (config.withSeparableConvs) {\n    var numFilters = config.filterSizes && config.filterSizes.length || 9;\n    params = {\n      conv0: config.isFirstLayerConv2d ? extractConvParams('conv0') : extractSeparableConvParams('conv0'),\n      conv1: extractSeparableConvParams('conv1'),\n      conv2: extractSeparableConvParams('conv2'),\n      conv3: extractSeparableConvParams('conv3'),\n      conv4: extractSeparableConvParams('conv4'),\n      conv5: extractSeparableConvParams('conv5'),\n      conv6: numFilters > 7 ? extractSeparableConvParams('conv6') : undefined,\n      conv7: numFilters > 8 ? extractSeparableConvParams('conv7') : undefined,\n      conv8: extractConvParams('conv8')\n    };\n  } else {\n    params = {\n      conv0: extractConvWithBatchNormParams('conv0'),\n      conv1: extractConvWithBatchNormParams('conv1'),\n      conv2: extractConvWithBatchNormParams('conv2'),\n      conv3: extractConvWithBatchNormParams('conv3'),\n      conv4: extractConvWithBatchNormParams('conv4'),\n      conv5: extractConvWithBatchNormParams('conv5'),\n      conv6: extractConvWithBatchNormParams('conv6'),\n      conv7: extractConvWithBatchNormParams('conv7'),\n      conv8: extractConvParams('conv8')\n    };\n  }\n\n  disposeUnusedWeightTensors(weightMap, paramMappings);\n  return {\n    params: params,\n    paramMappings: paramMappings\n  };\n}","map":{"version":3,"sources":["../../../src/tinyYolov2/extractParamsFromWeigthMap.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { disposeUnusedWeightTensors } from '../common/disposeUnusedWeightTensors';\r\nimport { loadSeparableConvParamsFactory } from '../common/extractSeparableConvParamsFactory';\r\nimport { extractWeightEntryFactory } from '../common/extractWeightEntryFactory';\r\nfunction extractorsFactory(weightMap, paramMappings) {\r\n    var extractWeightEntry = extractWeightEntryFactory(weightMap, paramMappings);\r\n    function extractBatchNormParams(prefix) {\r\n        var sub = extractWeightEntry(prefix + \"/sub\", 1);\r\n        var truediv = extractWeightEntry(prefix + \"/truediv\", 1);\r\n        return { sub: sub, truediv: truediv };\r\n    }\r\n    function extractConvParams(prefix) {\r\n        var filters = extractWeightEntry(prefix + \"/filters\", 4);\r\n        var bias = extractWeightEntry(prefix + \"/bias\", 1);\r\n        return { filters: filters, bias: bias };\r\n    }\r\n    function extractConvWithBatchNormParams(prefix) {\r\n        var conv = extractConvParams(prefix + \"/conv\");\r\n        var bn = extractBatchNormParams(prefix + \"/bn\");\r\n        return { conv: conv, bn: bn };\r\n    }\r\n    var extractSeparableConvParams = loadSeparableConvParamsFactory(extractWeightEntry);\r\n    return {\r\n        extractConvParams: extractConvParams,\r\n        extractConvWithBatchNormParams: extractConvWithBatchNormParams,\r\n        extractSeparableConvParams: extractSeparableConvParams\r\n    };\r\n}\r\nexport function extractParamsFromWeigthMap(weightMap, config) {\r\n    var paramMappings = [];\r\n    var _a = extractorsFactory(weightMap, paramMappings), extractConvParams = _a.extractConvParams, extractConvWithBatchNormParams = _a.extractConvWithBatchNormParams, extractSeparableConvParams = _a.extractSeparableConvParams;\r\n    var params;\r\n    if (config.withSeparableConvs) {\r\n        var numFilters = (config.filterSizes && config.filterSizes.length || 9);\r\n        params = {\r\n            conv0: config.isFirstLayerConv2d ? extractConvParams('conv0') : extractSeparableConvParams('conv0'),\r\n            conv1: extractSeparableConvParams('conv1'),\r\n            conv2: extractSeparableConvParams('conv2'),\r\n            conv3: extractSeparableConvParams('conv3'),\r\n            conv4: extractSeparableConvParams('conv4'),\r\n            conv5: extractSeparableConvParams('conv5'),\r\n            conv6: numFilters > 7 ? extractSeparableConvParams('conv6') : undefined,\r\n            conv7: numFilters > 8 ? extractSeparableConvParams('conv7') : undefined,\r\n            conv8: extractConvParams('conv8')\r\n        };\r\n    }\r\n    else {\r\n        params = {\r\n            conv0: extractConvWithBatchNormParams('conv0'),\r\n            conv1: extractConvWithBatchNormParams('conv1'),\r\n            conv2: extractConvWithBatchNormParams('conv2'),\r\n            conv3: extractConvWithBatchNormParams('conv3'),\r\n            conv4: extractConvWithBatchNormParams('conv4'),\r\n            conv5: extractConvWithBatchNormParams('conv5'),\r\n            conv6: extractConvWithBatchNormParams('conv6'),\r\n            conv7: extractConvWithBatchNormParams('conv7'),\r\n            conv8: extractConvParams('conv8')\r\n        };\r\n    }\r\n    disposeUnusedWeightTensors(weightMap, paramMappings);\r\n    return { params: params, paramMappings: paramMappings };\r\n}\r\n//# sourceMappingURL=extractParamsFromWeigthMap.js.map"]},"metadata":{},"sourceType":"module"}