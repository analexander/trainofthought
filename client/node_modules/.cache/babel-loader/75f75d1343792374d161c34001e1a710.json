{"ast":null,"code":"import { __awaiter, __extends, __generator } from \"tslib\";\nimport { extendWithFaceExpressions } from '../factories/WithFaceExpressions';\nimport { ComposableTask } from './ComposableTask';\nimport { ComputeAllFaceDescriptorsTask, ComputeSingleFaceDescriptorTask } from './ComputeFaceDescriptorsTasks';\nimport { extractAllFacesAndComputeResults, extractSingleFaceAndComputeResult } from './extractFacesAndComputeResults';\nimport { nets } from './nets';\nimport { PredictAllAgeAndGenderTask, PredictAllAgeAndGenderWithFaceAlignmentTask, PredictSingleAgeAndGenderTask, PredictSingleAgeAndGenderWithFaceAlignmentTask } from './PredictAgeAndGenderTask';\n\nvar PredictFaceExpressionsTaskBase =\n/** @class */\nfunction (_super) {\n  __extends(PredictFaceExpressionsTaskBase, _super);\n\n  function PredictFaceExpressionsTaskBase(parentTask, input, extractedFaces) {\n    var _this = _super.call(this) || this;\n\n    _this.parentTask = parentTask;\n    _this.input = input;\n    _this.extractedFaces = extractedFaces;\n    return _this;\n  }\n\n  return PredictFaceExpressionsTaskBase;\n}(ComposableTask);\n\nexport { PredictFaceExpressionsTaskBase };\n\nvar PredictAllFaceExpressionsTask =\n/** @class */\nfunction (_super) {\n  __extends(PredictAllFaceExpressionsTask, _super);\n\n  function PredictAllFaceExpressionsTask() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  PredictAllFaceExpressionsTask.prototype.run = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var parentResults, faceExpressionsByFace;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.parentTask];\n\n          case 1:\n            parentResults = _a.sent();\n            return [4\n            /*yield*/\n            , extractAllFacesAndComputeResults(parentResults, this.input, function (faces) {\n              return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                  switch (_a.label) {\n                    case 0:\n                      return [4\n                      /*yield*/\n                      , Promise.all(faces.map(function (face) {\n                        return nets.faceExpressionNet.predictExpressions(face);\n                      }))];\n\n                    case 1:\n                      return [2\n                      /*return*/\n                      , _a.sent()];\n                  }\n                });\n              });\n            }, this.extractedFaces)];\n\n          case 2:\n            faceExpressionsByFace = _a.sent();\n            return [2\n            /*return*/\n            , parentResults.map(function (parentResult, i) {\n              return extendWithFaceExpressions(parentResult, faceExpressionsByFace[i]);\n            })];\n        }\n      });\n    });\n  };\n\n  PredictAllFaceExpressionsTask.prototype.withAgeAndGender = function () {\n    return new PredictAllAgeAndGenderTask(this, this.input);\n  };\n\n  return PredictAllFaceExpressionsTask;\n}(PredictFaceExpressionsTaskBase);\n\nexport { PredictAllFaceExpressionsTask };\n\nvar PredictSingleFaceExpressionsTask =\n/** @class */\nfunction (_super) {\n  __extends(PredictSingleFaceExpressionsTask, _super);\n\n  function PredictSingleFaceExpressionsTask() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  PredictSingleFaceExpressionsTask.prototype.run = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var parentResult, faceExpressions;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.parentTask];\n\n          case 1:\n            parentResult = _a.sent();\n\n            if (!parentResult) {\n              return [2\n              /*return*/\n              ];\n            }\n\n            return [4\n            /*yield*/\n            , extractSingleFaceAndComputeResult(parentResult, this.input, function (face) {\n              return nets.faceExpressionNet.predictExpressions(face);\n            }, this.extractedFaces)];\n\n          case 2:\n            faceExpressions = _a.sent();\n            return [2\n            /*return*/\n            , extendWithFaceExpressions(parentResult, faceExpressions)];\n        }\n      });\n    });\n  };\n\n  PredictSingleFaceExpressionsTask.prototype.withAgeAndGender = function () {\n    return new PredictSingleAgeAndGenderTask(this, this.input);\n  };\n\n  return PredictSingleFaceExpressionsTask;\n}(PredictFaceExpressionsTaskBase);\n\nexport { PredictSingleFaceExpressionsTask };\n\nvar PredictAllFaceExpressionsWithFaceAlignmentTask =\n/** @class */\nfunction (_super) {\n  __extends(PredictAllFaceExpressionsWithFaceAlignmentTask, _super);\n\n  function PredictAllFaceExpressionsWithFaceAlignmentTask() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  PredictAllFaceExpressionsWithFaceAlignmentTask.prototype.withAgeAndGender = function () {\n    return new PredictAllAgeAndGenderWithFaceAlignmentTask(this, this.input);\n  };\n\n  PredictAllFaceExpressionsWithFaceAlignmentTask.prototype.withFaceDescriptors = function () {\n    return new ComputeAllFaceDescriptorsTask(this, this.input);\n  };\n\n  return PredictAllFaceExpressionsWithFaceAlignmentTask;\n}(PredictAllFaceExpressionsTask);\n\nexport { PredictAllFaceExpressionsWithFaceAlignmentTask };\n\nvar PredictSingleFaceExpressionsWithFaceAlignmentTask =\n/** @class */\nfunction (_super) {\n  __extends(PredictSingleFaceExpressionsWithFaceAlignmentTask, _super);\n\n  function PredictSingleFaceExpressionsWithFaceAlignmentTask() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  PredictSingleFaceExpressionsWithFaceAlignmentTask.prototype.withAgeAndGender = function () {\n    return new PredictSingleAgeAndGenderWithFaceAlignmentTask(this, this.input);\n  };\n\n  PredictSingleFaceExpressionsWithFaceAlignmentTask.prototype.withFaceDescriptor = function () {\n    return new ComputeSingleFaceDescriptorTask(this, this.input);\n  };\n\n  return PredictSingleFaceExpressionsWithFaceAlignmentTask;\n}(PredictSingleFaceExpressionsTask);\n\nexport { PredictSingleFaceExpressionsWithFaceAlignmentTask };","map":{"version":3,"sources":["../../../src/globalApi/PredictFaceExpressionsTask.ts"],"names":[],"mappings":";AAKA,SAAS,yBAAT,QAA+D,kCAA/D;AAEA,SAAS,cAAT,QAA+B,kBAA/B;AACA,SAAS,6BAAT,EAAwC,+BAAxC,QAA+E,+BAA/E;AACA,SAAS,gCAAT,EAA2C,iCAA3C,QAAoF,iCAApF;AACA,SAAS,IAAT,QAAqB,QAArB;AACA,SACE,0BADF,EAEE,2CAFF,EAGE,6BAHF,EAIE,8CAJF,QAKO,2BALP;;AAOA,IAAA,8BAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA4E,EAAA,SAAA,CAAA,8BAAA,EAAA,MAAA,CAAA;;AAC1E,WAAA,8BAAA,CACY,UADZ,EAEY,KAFZ,EAGY,cAHZ,EAGmE;AAHnE,QAAA,KAAA,GAKE,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IALT;;AACY,IAAA,KAAA,CAAA,UAAA,GAAA,UAAA;AACA,IAAA,KAAA,CAAA,KAAA,GAAA,KAAA;AACA,IAAA,KAAA,CAAA,cAAA,GAAA,cAAA;;AAGX;;AACH,SAAA,8BAAA;AAAC,CARD,CAA4E,cAA5E,CAAA;;;;AAUA,IAAA,6BAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAEU,EAAA,SAAA,CAAA,6BAAA,EAAA,MAAA,CAAA;;AAFV,WAAA,6BAAA,GAAA;;AAyBC;;AArBc,EAAA,6BAAA,CAAA,SAAA,CAAA,GAAA,GAAb,YAAA;;;;;;;;;AAEwB,mBAAA,CAAA;AAAA;AAAA,cAAM,KAAK,UAAX,CAAA;;;AAAhB,YAAA,aAAa,GAAG,EAAA,CAAA,IAAA,EAAhB;AAEwB,mBAAA,CAAA;AAAA;AAAA,cAAM,gCAAgC,CAClE,aADkE,EAElE,KAAK,KAF6D,EAGlE,UAAM,KAAN,EAAW;AAAA,qBAAA,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;AAAI,6BAAA,CAAA;AAAA;AAAA,wBAAM,OAAO,CAAC,GAAR,CAAY,KAAK,CAAC,GAAN,CAC/B,UAAA,IAAA,EAAI;AAAI,+BAAA,IAAI,CAAC,iBAAL,CAAuB,kBAAvB,CAAA,IAAA,CAAA;AAA2E,uBADpD,CAAZ,CAAN,CAAA;;;AAAA,6BAAA,CAAA;AAAA;AAAA,wBAAA,EAAA,CAAA,IAAA,EAAA,CAAA;;;eAAJ,CAAA;AAET,aALgE,EAMlE,KAAK,cAN6D,CAAtC,CAAA;;;AAAxB,YAAA,qBAAqB,GAAG,EAAA,CAAA,IAAA,EAAxB;AASN,mBAAA,CAAA;AAAA;AAAA,cAAO,aAAa,CAAC,GAAd,CACL,UAAC,YAAD,EAAe,CAAf,EAAgB;AAAK,qBAAA,yBAAyB,CAAU,YAAV,EAAwB,qBAAqB,CAAtE,CAAsE,CAA7C,CAAzB;AAA0E,aAD1F,CAAP,CAAA;;;;AAGD,GAhBY;;AAkBb,EAAA,6BAAA,CAAA,SAAA,CAAA,gBAAA,GAAA,YAAA;AACE,WAAO,IAAI,0BAAJ,CAA+B,IAA/B,EAAqC,KAAK,KAA1C,CAAP;AACD,GAFD;;AAGF,SAAA,6BAAA;AAAC,CAzBD,CAEU,8BAFV,CAAA;;;;AA2BA,IAAA,gCAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAEW,EAAA,SAAA,CAAA,gCAAA,EAAA,MAAA,CAAA;;AAFX,WAAA,gCAAA,GAAA;;AAwBC;;AApBc,EAAA,gCAAA,CAAA,SAAA,CAAA,GAAA,GAAb,YAAA;;;;;;AAEuB,mBAAA,CAAA;AAAA;AAAA,cAAM,KAAK,UAAX,CAAA;;;AAAf,YAAA,YAAY,GAAG,EAAA,CAAA,IAAA,EAAf;;AACN,gBAAI,CAAC,YAAL,EAAmB;AACjB,qBAAA,CAAA;AAAA;AAAA,eAAA;AACD;;AAEuB,mBAAA,CAAA;AAAA;AAAA,cAAM,iCAAiC,CAC7D,YAD6D,EAE7D,KAAK,KAFwD,EAG7D,UAAA,IAAA,EAAI;AAAI,qBAAA,IAAI,CAAC,iBAAL,CAAuB,kBAAvB,CAAA,IAAA,CAAA;AAA2E,aAHtB,EAI7D,KAAK,cAJwD,CAAvC,CAAA;;;AAAlB,YAAA,eAAe,GAAG,EAAA,CAAA,IAAA,EAAlB;AAON,mBAAA,CAAA;AAAA;AAAA,cAAO,yBAAyB,CAAC,YAAD,EAAe,eAAf,CAAhC,CAAA;;;;AACD,GAfY;;AAiBb,EAAA,gCAAA,CAAA,SAAA,CAAA,gBAAA,GAAA,YAAA;AACE,WAAO,IAAI,6BAAJ,CAAkC,IAAlC,EAAwC,KAAK,KAA7C,CAAP;AACD,GAFD;;AAGF,SAAA,gCAAA;AAAC,CAxBD,CAEW,8BAFX,CAAA;;;;AA0BA,IAAA,8CAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAEU,EAAA,SAAA,CAAA,8CAAA,EAAA,MAAA,CAAA;;AAFV,WAAA,8CAAA,GAAA;;AAWC;;AAPC,EAAA,8CAAA,CAAA,SAAA,CAAA,gBAAA,GAAA,YAAA;AACE,WAAO,IAAI,2CAAJ,CAAgD,IAAhD,EAAsD,KAAK,KAA3D,CAAP;AACD,GAFD;;AAIA,EAAA,8CAAA,CAAA,SAAA,CAAA,mBAAA,GAAA,YAAA;AACE,WAAO,IAAI,6BAAJ,CAAkC,IAAlC,EAAwC,KAAK,KAA7C,CAAP;AACD,GAFD;;AAGF,SAAA,8CAAA;AAAC,CAXD,CAEU,6BAFV,CAAA;;;;AAaA,IAAA,iDAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAEU,EAAA,SAAA,CAAA,iDAAA,EAAA,MAAA,CAAA;;AAFV,WAAA,iDAAA,GAAA;;AAWC;;AAPC,EAAA,iDAAA,CAAA,SAAA,CAAA,gBAAA,GAAA,YAAA;AACE,WAAO,IAAI,8CAAJ,CAAmD,IAAnD,EAAyD,KAAK,KAA9D,CAAP;AACD,GAFD;;AAIA,EAAA,iDAAA,CAAA,SAAA,CAAA,kBAAA,GAAA,YAAA;AACE,WAAO,IAAI,+BAAJ,CAAoC,IAApC,EAA0C,KAAK,KAA/C,CAAP;AACD,GAFD;;AAGF,SAAA,iDAAA;AAAC,CAXD,CAEU,gCAFV,CAAA","sourceRoot":"","sourcesContent":["import { __awaiter, __extends, __generator } from \"tslib\";\r\nimport { extendWithFaceExpressions } from '../factories/WithFaceExpressions';\r\nimport { ComposableTask } from './ComposableTask';\r\nimport { ComputeAllFaceDescriptorsTask, ComputeSingleFaceDescriptorTask } from './ComputeFaceDescriptorsTasks';\r\nimport { extractAllFacesAndComputeResults, extractSingleFaceAndComputeResult } from './extractFacesAndComputeResults';\r\nimport { nets } from './nets';\r\nimport { PredictAllAgeAndGenderTask, PredictAllAgeAndGenderWithFaceAlignmentTask, PredictSingleAgeAndGenderTask, PredictSingleAgeAndGenderWithFaceAlignmentTask, } from './PredictAgeAndGenderTask';\r\nvar PredictFaceExpressionsTaskBase = /** @class */ (function (_super) {\r\n    __extends(PredictFaceExpressionsTaskBase, _super);\r\n    function PredictFaceExpressionsTaskBase(parentTask, input, extractedFaces) {\r\n        var _this = _super.call(this) || this;\r\n        _this.parentTask = parentTask;\r\n        _this.input = input;\r\n        _this.extractedFaces = extractedFaces;\r\n        return _this;\r\n    }\r\n    return PredictFaceExpressionsTaskBase;\r\n}(ComposableTask));\r\nexport { PredictFaceExpressionsTaskBase };\r\nvar PredictAllFaceExpressionsTask = /** @class */ (function (_super) {\r\n    __extends(PredictAllFaceExpressionsTask, _super);\r\n    function PredictAllFaceExpressionsTask() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PredictAllFaceExpressionsTask.prototype.run = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var parentResults, faceExpressionsByFace;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.parentTask];\r\n                    case 1:\r\n                        parentResults = _a.sent();\r\n                        return [4 /*yield*/, extractAllFacesAndComputeResults(parentResults, this.input, function (faces) { return __awaiter(_this, void 0, void 0, function () {\r\n                                return __generator(this, function (_a) {\r\n                                    switch (_a.label) {\r\n                                        case 0: return [4 /*yield*/, Promise.all(faces.map(function (face) { return nets.faceExpressionNet.predictExpressions(face); }))];\r\n                                        case 1: return [2 /*return*/, _a.sent()];\r\n                                    }\r\n                                });\r\n                            }); }, this.extractedFaces)];\r\n                    case 2:\r\n                        faceExpressionsByFace = _a.sent();\r\n                        return [2 /*return*/, parentResults.map(function (parentResult, i) { return extendWithFaceExpressions(parentResult, faceExpressionsByFace[i]); })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    PredictAllFaceExpressionsTask.prototype.withAgeAndGender = function () {\r\n        return new PredictAllAgeAndGenderTask(this, this.input);\r\n    };\r\n    return PredictAllFaceExpressionsTask;\r\n}(PredictFaceExpressionsTaskBase));\r\nexport { PredictAllFaceExpressionsTask };\r\nvar PredictSingleFaceExpressionsTask = /** @class */ (function (_super) {\r\n    __extends(PredictSingleFaceExpressionsTask, _super);\r\n    function PredictSingleFaceExpressionsTask() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PredictSingleFaceExpressionsTask.prototype.run = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var parentResult, faceExpressions;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.parentTask];\r\n                    case 1:\r\n                        parentResult = _a.sent();\r\n                        if (!parentResult) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        return [4 /*yield*/, extractSingleFaceAndComputeResult(parentResult, this.input, function (face) { return nets.faceExpressionNet.predictExpressions(face); }, this.extractedFaces)];\r\n                    case 2:\r\n                        faceExpressions = _a.sent();\r\n                        return [2 /*return*/, extendWithFaceExpressions(parentResult, faceExpressions)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    PredictSingleFaceExpressionsTask.prototype.withAgeAndGender = function () {\r\n        return new PredictSingleAgeAndGenderTask(this, this.input);\r\n    };\r\n    return PredictSingleFaceExpressionsTask;\r\n}(PredictFaceExpressionsTaskBase));\r\nexport { PredictSingleFaceExpressionsTask };\r\nvar PredictAllFaceExpressionsWithFaceAlignmentTask = /** @class */ (function (_super) {\r\n    __extends(PredictAllFaceExpressionsWithFaceAlignmentTask, _super);\r\n    function PredictAllFaceExpressionsWithFaceAlignmentTask() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PredictAllFaceExpressionsWithFaceAlignmentTask.prototype.withAgeAndGender = function () {\r\n        return new PredictAllAgeAndGenderWithFaceAlignmentTask(this, this.input);\r\n    };\r\n    PredictAllFaceExpressionsWithFaceAlignmentTask.prototype.withFaceDescriptors = function () {\r\n        return new ComputeAllFaceDescriptorsTask(this, this.input);\r\n    };\r\n    return PredictAllFaceExpressionsWithFaceAlignmentTask;\r\n}(PredictAllFaceExpressionsTask));\r\nexport { PredictAllFaceExpressionsWithFaceAlignmentTask };\r\nvar PredictSingleFaceExpressionsWithFaceAlignmentTask = /** @class */ (function (_super) {\r\n    __extends(PredictSingleFaceExpressionsWithFaceAlignmentTask, _super);\r\n    function PredictSingleFaceExpressionsWithFaceAlignmentTask() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PredictSingleFaceExpressionsWithFaceAlignmentTask.prototype.withAgeAndGender = function () {\r\n        return new PredictSingleAgeAndGenderWithFaceAlignmentTask(this, this.input);\r\n    };\r\n    PredictSingleFaceExpressionsWithFaceAlignmentTask.prototype.withFaceDescriptor = function () {\r\n        return new ComputeSingleFaceDescriptorTask(this, this.input);\r\n    };\r\n    return PredictSingleFaceExpressionsWithFaceAlignmentTask;\r\n}(PredictSingleFaceExpressionsTask));\r\nexport { PredictSingleFaceExpressionsWithFaceAlignmentTask };\r\n//# sourceMappingURL=PredictFaceExpressionsTask.js.map"]},"metadata":{},"sourceType":"module"}