{"ast":null,"code":"import _slicedToArray from \"/Users/angeldiscopanda/Trilogy-2020/Projects/trainofthought/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { SelectV2 } from '../kernel_names';\nimport { cast } from '../ops/cast';\nimport { logicalNot } from '../ops/logical_not';\nimport { mul } from '../ops/mul';\nimport { zerosLike } from '../ops/zeros_like';\nexport var selectV2PoolGradConfig = {\n  kernelName: SelectV2,\n  inputsToSave: ['condition'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 1),\n        _condition = _saved[0];\n\n    return {\n      // TODO(julianoks): Return null for condition gradient\n      // when backprop supports it.\n      condition: function condition() {\n        return cast(zerosLike(_condition), 'float32');\n      },\n      t: function t() {\n        return mul(dy, cast(_condition, dy.dtype));\n      },\n      e: function e() {\n        return mul(dy, cast(logicalNot(_condition), dy.dtype));\n      }\n    };\n  }\n};","map":null,"metadata":{},"sourceType":"module"}