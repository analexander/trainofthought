{"ast":null,"code":"\"use strict\";\n\nmodule.exports = exports = unpublish;\nexports.usage = 'Unpublishes pre-built binary (requires aws-sdk)';\n\nvar fs = require('fs');\n\nvar log = require('npmlog');\n\nvar versioning = require('./util/versioning.js');\n\nvar napi = require('./util/napi.js');\n\nvar s3_setup = require('./util/s3_setup.js');\n\nvar url = require('url');\n\nvar config = require('rc')(\"node_pre_gyp\", {\n  acl: \"public-read\"\n});\n\nfunction unpublish(gyp, argv, callback) {\n  var AWS = require(\"aws-sdk\");\n\n  var package_json = JSON.parse(fs.readFileSync('./package.json'));\n  var napi_build_version = napi.get_napi_build_version_from_command_args(argv);\n  var opts = versioning.evaluate(package_json, gyp.opts, napi_build_version);\n  s3_setup.detect(opts.hosted_path, config);\n  AWS.config.update(config);\n  var key_name = url.resolve(config.prefix, opts.package_name);\n  var s3 = new AWS.S3();\n  var s3_opts = {\n    Bucket: config.bucket,\n    Key: key_name\n  };\n  s3.headObject(s3_opts, function (err, meta) {\n    if (err && err.code == 'NotFound') {\n      console.log('[' + package_json.name + '] Not found: https://' + s3_opts.Bucket + '.s3.amazonaws.com/' + s3_opts.Key);\n      return callback();\n    } else if (err) {\n      return callback(err);\n    } else {\n      log.info('unpublish', JSON.stringify(meta));\n      s3.deleteObject(s3_opts, function (err, resp) {\n        if (err) return callback(err);\n        log.info(JSON.stringify(resp));\n        console.log('[' + package_json.name + '] Success: removed https://' + s3_opts.Bucket + '.s3.amazonaws.com/' + s3_opts.Key);\n        return callback();\n      });\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"script"}