{"ast":null,"code":"import { isValidNumber } from '../utils';\n\nvar Dimensions =\n/** @class */\nfunction () {\n  function Dimensions(width, height) {\n    if (!isValidNumber(width) || !isValidNumber(height)) {\n      throw new Error(\"Dimensions.constructor - expected width and height to be valid numbers, instead have \" + JSON.stringify({\n        width: width,\n        height: height\n      }));\n    }\n\n    this._width = width;\n    this._height = height;\n  }\n\n  Object.defineProperty(Dimensions.prototype, \"width\", {\n    get: function get() {\n      return this._width;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Dimensions.prototype, \"height\", {\n    get: function get() {\n      return this._height;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Dimensions.prototype.reverse = function () {\n    return new Dimensions(1 / this.width, 1 / this.height);\n  };\n\n  return Dimensions;\n}();\n\nexport { Dimensions };","map":{"version":3,"sources":["../../../src/classes/Dimensions.ts"],"names":[],"mappings":"AAAA,SAAS,aAAT,QAA8B,UAA9B;;AAOA,IAAA,UAAA;AAAA;AAAA,YAAA;AAKE,WAAA,UAAA,CAAY,KAAZ,EAA2B,MAA3B,EAAyC;AACvC,QAAI,CAAC,aAAa,CAAC,KAAD,CAAd,IAAyB,CAAC,aAAa,CAAC,MAAD,CAA3C,EAAqD;AACnD,YAAM,IAAI,KAAJ,CAAU,0FAAwF,IAAI,CAAC,SAAL,CAAe;AAAE,QAAA,KAAK,EAAA,KAAP;AAAS,QAAA,MAAM,EAAA;AAAf,OAAf,CAAlG,CAAN;AACD;;AAED,SAAK,MAAL,GAAc,KAAd;AACA,SAAK,OAAL,GAAe,MAAf;AACD;;AAED,EAAA,MAAA,CAAA,cAAA,CAAW,UAAA,CAAA,SAAX,EAAW,OAAX,EAAgB;SAAhB,eAAA;AAA6B,aAAO,KAAK,MAAZ;AAAoB,KAAjC;oBAAA;;AAAA,GAAhB;AACA,EAAA,MAAA,CAAA,cAAA,CAAW,UAAA,CAAA,SAAX,EAAW,QAAX,EAAiB;SAAjB,eAAA;AAA8B,aAAO,KAAK,OAAZ;AAAqB,KAAlC;oBAAA;;AAAA,GAAjB;;AAEO,EAAA,UAAA,CAAA,SAAA,CAAA,OAAA,GAAP,YAAA;AACE,WAAO,IAAI,UAAJ,CAAe,IAAI,KAAK,KAAxB,EAA+B,IAAI,KAAK,MAAxC,CAAP;AACD,GAFM;;AAGT,SAAA,UAAA;AAAC,CApBD,EAAA","sourceRoot":"","sourcesContent":["import { isValidNumber } from '../utils';\r\nvar Dimensions = /** @class */ (function () {\r\n    function Dimensions(width, height) {\r\n        if (!isValidNumber(width) || !isValidNumber(height)) {\r\n            throw new Error(\"Dimensions.constructor - expected width and height to be valid numbers, instead have \" + JSON.stringify({ width: width, height: height }));\r\n        }\r\n        this._width = width;\r\n        this._height = height;\r\n    }\r\n    Object.defineProperty(Dimensions.prototype, \"width\", {\r\n        get: function () { return this._width; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Dimensions.prototype, \"height\", {\r\n        get: function () { return this._height; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Dimensions.prototype.reverse = function () {\r\n        return new Dimensions(1 / this.width, 1 / this.height);\r\n    };\r\n    return Dimensions;\r\n}());\r\nexport { Dimensions };\r\n//# sourceMappingURL=Dimensions.js.map"]},"metadata":{},"sourceType":"module"}