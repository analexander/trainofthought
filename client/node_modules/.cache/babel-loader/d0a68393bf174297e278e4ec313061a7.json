{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\n\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\n\nexports.mirrorPadConfig = {\n  kernelName: tfjs_1.MirrorPad,\n  backendName: 'tensorflow',\n  kernelFunc: function kernelFunc(_a) {\n    var inputs = _a.inputs,\n        backend = _a.backend,\n        attrs = _a.attrs;\n    var x = inputs.x;\n    var _b = attrs,\n        paddings = _b.paddings,\n        mode = _b.mode;\n    var nodeBackend = backend;\n    var paddingsTensor = tfjs_1.tensor2d(paddings, [paddings.length, 2], 'int32');\n    var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', x.dtype), nodejs_kernel_backend_1.createTensorsTypeOpAttr('Tpaddings', paddingsTensor.dtype), {\n      name: 'mode',\n      type: nodeBackend.binding.TF_ATTR_STRING,\n      value: mode.toUpperCase()\n    }];\n    var output = nodeBackend.executeSingleOutput('MirrorPad', opAttrs, [x, paddingsTensor]);\n    paddingsTensor.dispose();\n    return output;\n  }\n};","map":null,"metadata":{},"sourceType":"script"}