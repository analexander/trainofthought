{"ast":null,"code":"import _classCallCheck from \"/Users/angeldiscopanda/Trilogy-2020/Projects/trainofthought/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var AddNProgram = function AddNProgram(outputShape, shapes) {\n  _classCallCheck(this, AddNProgram);\n\n  this.outputShape = [];\n  this.outputShape = outputShape;\n  this.variableNames = shapes.map(function (_, i) {\n    return \"T\".concat(i);\n  });\n  var snippets = []; // Get target elements from every input tensor.\n\n  this.variableNames.forEach(function (variable) {\n    snippets.push(\"float v\".concat(variable, \" = get\").concat(variable, \"AtOutCoords();\"));\n  }); // Calculate the sum of all elements.\n\n  var operation = this.variableNames.map(function (variable) {\n    return \"v\".concat(variable);\n  }).join(' + ');\n  this.userCode = \"\\n      void main() {\\n        \".concat(snippets.join('\\n        '), \"\\n\\n        float result = \").concat(operation, \";\\n        setOutput(result);\\n      }\\n    \");\n};","map":null,"metadata":{},"sourceType":"module"}