{"ast":null,"code":"import { isDimensions, isValidNumber } from '../utils';\nimport { Point } from './Point';\n\nvar Box =\n/** @class */\nfunction () {\n  function Box(_box, allowNegativeDimensions) {\n    if (allowNegativeDimensions === void 0) {\n      allowNegativeDimensions = true;\n    }\n\n    var box = _box || {};\n    var isBbox = [box.left, box.top, box.right, box.bottom].every(isValidNumber);\n    var isRect = [box.x, box.y, box.width, box.height].every(isValidNumber);\n\n    if (!isRect && !isBbox) {\n      throw new Error(\"Box.constructor - expected box to be IBoundingBox | IRect, instead have \" + JSON.stringify(box));\n    }\n\n    var _a = isRect ? [box.x, box.y, box.width, box.height] : [box.left, box.top, box.right - box.left, box.bottom - box.top],\n        x = _a[0],\n        y = _a[1],\n        width = _a[2],\n        height = _a[3];\n\n    Box.assertIsValidBox({\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }, 'Box.constructor', allowNegativeDimensions);\n    this._x = x;\n    this._y = y;\n    this._width = width;\n    this._height = height;\n  }\n\n  Box.isRect = function (rect) {\n    return !!rect && [rect.x, rect.y, rect.width, rect.height].every(isValidNumber);\n  };\n\n  Box.assertIsValidBox = function (box, callee, allowNegativeDimensions) {\n    if (allowNegativeDimensions === void 0) {\n      allowNegativeDimensions = false;\n    }\n\n    if (!Box.isRect(box)) {\n      throw new Error(callee + \" - invalid box: \" + JSON.stringify(box) + \", expected object with properties x, y, width, height\");\n    }\n\n    if (!allowNegativeDimensions && (box.width < 0 || box.height < 0)) {\n      throw new Error(callee + \" - width (\" + box.width + \") and height (\" + box.height + \") must be positive numbers\");\n    }\n  };\n\n  Object.defineProperty(Box.prototype, \"x\", {\n    get: function get() {\n      return this._x;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Box.prototype, \"y\", {\n    get: function get() {\n      return this._y;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Box.prototype, \"width\", {\n    get: function get() {\n      return this._width;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Box.prototype, \"height\", {\n    get: function get() {\n      return this._height;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Box.prototype, \"left\", {\n    get: function get() {\n      return this.x;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Box.prototype, \"top\", {\n    get: function get() {\n      return this.y;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Box.prototype, \"right\", {\n    get: function get() {\n      return this.x + this.width;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Box.prototype, \"bottom\", {\n    get: function get() {\n      return this.y + this.height;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Box.prototype, \"area\", {\n    get: function get() {\n      return this.width * this.height;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Box.prototype, \"topLeft\", {\n    get: function get() {\n      return new Point(this.left, this.top);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Box.prototype, \"topRight\", {\n    get: function get() {\n      return new Point(this.right, this.top);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Box.prototype, \"bottomLeft\", {\n    get: function get() {\n      return new Point(this.left, this.bottom);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Box.prototype, \"bottomRight\", {\n    get: function get() {\n      return new Point(this.right, this.bottom);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Box.prototype.round = function () {\n    var _a = [this.x, this.y, this.width, this.height].map(function (val) {\n      return Math.round(val);\n    }),\n        x = _a[0],\n        y = _a[1],\n        width = _a[2],\n        height = _a[3];\n\n    return new Box({\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    });\n  };\n\n  Box.prototype.floor = function () {\n    var _a = [this.x, this.y, this.width, this.height].map(function (val) {\n      return Math.floor(val);\n    }),\n        x = _a[0],\n        y = _a[1],\n        width = _a[2],\n        height = _a[3];\n\n    return new Box({\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    });\n  };\n\n  Box.prototype.toSquare = function () {\n    var _a = this,\n        x = _a.x,\n        y = _a.y,\n        width = _a.width,\n        height = _a.height;\n\n    var diff = Math.abs(width - height);\n\n    if (width < height) {\n      x -= diff / 2;\n      width += diff;\n    }\n\n    if (height < width) {\n      y -= diff / 2;\n      height += diff;\n    }\n\n    return new Box({\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    });\n  };\n\n  Box.prototype.rescale = function (s) {\n    var scaleX = isDimensions(s) ? s.width : s;\n    var scaleY = isDimensions(s) ? s.height : s;\n    return new Box({\n      x: this.x * scaleX,\n      y: this.y * scaleY,\n      width: this.width * scaleX,\n      height: this.height * scaleY\n    });\n  };\n\n  Box.prototype.pad = function (padX, padY) {\n    var _a = [this.x - padX / 2, this.y - padY / 2, this.width + padX, this.height + padY],\n        x = _a[0],\n        y = _a[1],\n        width = _a[2],\n        height = _a[3];\n    return new Box({\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    });\n  };\n\n  Box.prototype.clipAtImageBorders = function (imgWidth, imgHeight) {\n    var _a = this,\n        x = _a.x,\n        y = _a.y,\n        right = _a.right,\n        bottom = _a.bottom;\n\n    var clippedX = Math.max(x, 0);\n    var clippedY = Math.max(y, 0);\n    var newWidth = right - clippedX;\n    var newHeight = bottom - clippedY;\n    var clippedWidth = Math.min(newWidth, imgWidth - clippedX);\n    var clippedHeight = Math.min(newHeight, imgHeight - clippedY);\n    return new Box({\n      x: clippedX,\n      y: clippedY,\n      width: clippedWidth,\n      height: clippedHeight\n    }).floor();\n  };\n\n  Box.prototype.shift = function (sx, sy) {\n    var _a = this,\n        width = _a.width,\n        height = _a.height;\n\n    var x = this.x + sx;\n    var y = this.y + sy;\n    return new Box({\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    });\n  };\n\n  Box.prototype.padAtBorders = function (imageHeight, imageWidth) {\n    var w = this.width + 1;\n    var h = this.height + 1;\n    var dx = 1;\n    var dy = 1;\n    var edx = w;\n    var edy = h;\n    var x = this.left;\n    var y = this.top;\n    var ex = this.right;\n    var ey = this.bottom;\n\n    if (ex > imageWidth) {\n      edx = -ex + imageWidth + w;\n      ex = imageWidth;\n    }\n\n    if (ey > imageHeight) {\n      edy = -ey + imageHeight + h;\n      ey = imageHeight;\n    }\n\n    if (x < 1) {\n      edy = 2 - x;\n      x = 1;\n    }\n\n    if (y < 1) {\n      edy = 2 - y;\n      y = 1;\n    }\n\n    return {\n      dy: dy,\n      edy: edy,\n      dx: dx,\n      edx: edx,\n      y: y,\n      ey: ey,\n      x: x,\n      ex: ex,\n      w: w,\n      h: h\n    };\n  };\n\n  Box.prototype.calibrate = function (region) {\n    return new Box({\n      left: this.left + region.left * this.width,\n      top: this.top + region.top * this.height,\n      right: this.right + region.right * this.width,\n      bottom: this.bottom + region.bottom * this.height\n    }).toSquare().round();\n  };\n\n  return Box;\n}();\n\nexport { Box };","map":{"version":3,"sources":["../../../src/classes/Box.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { isDimensions, isValidNumber } from '../utils';\r\nimport { Point } from './Point';\r\nvar Box = /** @class */ (function () {\r\n    function Box(_box, allowNegativeDimensions) {\r\n        if (allowNegativeDimensions === void 0) { allowNegativeDimensions = true; }\r\n        var box = (_box || {});\r\n        var isBbox = [box.left, box.top, box.right, box.bottom].every(isValidNumber);\r\n        var isRect = [box.x, box.y, box.width, box.height].every(isValidNumber);\r\n        if (!isRect && !isBbox) {\r\n            throw new Error(\"Box.constructor - expected box to be IBoundingBox | IRect, instead have \" + JSON.stringify(box));\r\n        }\r\n        var _a = isRect\r\n            ? [box.x, box.y, box.width, box.height]\r\n            : [box.left, box.top, box.right - box.left, box.bottom - box.top], x = _a[0], y = _a[1], width = _a[2], height = _a[3];\r\n        Box.assertIsValidBox({ x: x, y: y, width: width, height: height }, 'Box.constructor', allowNegativeDimensions);\r\n        this._x = x;\r\n        this._y = y;\r\n        this._width = width;\r\n        this._height = height;\r\n    }\r\n    Box.isRect = function (rect) {\r\n        return !!rect && [rect.x, rect.y, rect.width, rect.height].every(isValidNumber);\r\n    };\r\n    Box.assertIsValidBox = function (box, callee, allowNegativeDimensions) {\r\n        if (allowNegativeDimensions === void 0) { allowNegativeDimensions = false; }\r\n        if (!Box.isRect(box)) {\r\n            throw new Error(callee + \" - invalid box: \" + JSON.stringify(box) + \", expected object with properties x, y, width, height\");\r\n        }\r\n        if (!allowNegativeDimensions && (box.width < 0 || box.height < 0)) {\r\n            throw new Error(callee + \" - width (\" + box.width + \") and height (\" + box.height + \") must be positive numbers\");\r\n        }\r\n    };\r\n    Object.defineProperty(Box.prototype, \"x\", {\r\n        get: function () { return this._x; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Box.prototype, \"y\", {\r\n        get: function () { return this._y; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Box.prototype, \"width\", {\r\n        get: function () { return this._width; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Box.prototype, \"height\", {\r\n        get: function () { return this._height; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Box.prototype, \"left\", {\r\n        get: function () { return this.x; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Box.prototype, \"top\", {\r\n        get: function () { return this.y; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Box.prototype, \"right\", {\r\n        get: function () { return this.x + this.width; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Box.prototype, \"bottom\", {\r\n        get: function () { return this.y + this.height; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Box.prototype, \"area\", {\r\n        get: function () { return this.width * this.height; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Box.prototype, \"topLeft\", {\r\n        get: function () { return new Point(this.left, this.top); },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Box.prototype, \"topRight\", {\r\n        get: function () { return new Point(this.right, this.top); },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Box.prototype, \"bottomLeft\", {\r\n        get: function () { return new Point(this.left, this.bottom); },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Box.prototype, \"bottomRight\", {\r\n        get: function () { return new Point(this.right, this.bottom); },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Box.prototype.round = function () {\r\n        var _a = [this.x, this.y, this.width, this.height]\r\n            .map(function (val) { return Math.round(val); }), x = _a[0], y = _a[1], width = _a[2], height = _a[3];\r\n        return new Box({ x: x, y: y, width: width, height: height });\r\n    };\r\n    Box.prototype.floor = function () {\r\n        var _a = [this.x, this.y, this.width, this.height]\r\n            .map(function (val) { return Math.floor(val); }), x = _a[0], y = _a[1], width = _a[2], height = _a[3];\r\n        return new Box({ x: x, y: y, width: width, height: height });\r\n    };\r\n    Box.prototype.toSquare = function () {\r\n        var _a = this, x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n        var diff = Math.abs(width - height);\r\n        if (width < height) {\r\n            x -= (diff / 2);\r\n            width += diff;\r\n        }\r\n        if (height < width) {\r\n            y -= (diff / 2);\r\n            height += diff;\r\n        }\r\n        return new Box({ x: x, y: y, width: width, height: height });\r\n    };\r\n    Box.prototype.rescale = function (s) {\r\n        var scaleX = isDimensions(s) ? s.width : s;\r\n        var scaleY = isDimensions(s) ? s.height : s;\r\n        return new Box({\r\n            x: this.x * scaleX,\r\n            y: this.y * scaleY,\r\n            width: this.width * scaleX,\r\n            height: this.height * scaleY\r\n        });\r\n    };\r\n    Box.prototype.pad = function (padX, padY) {\r\n        var _a = [\r\n            this.x - (padX / 2),\r\n            this.y - (padY / 2),\r\n            this.width + padX,\r\n            this.height + padY\r\n        ], x = _a[0], y = _a[1], width = _a[2], height = _a[3];\r\n        return new Box({ x: x, y: y, width: width, height: height });\r\n    };\r\n    Box.prototype.clipAtImageBorders = function (imgWidth, imgHeight) {\r\n        var _a = this, x = _a.x, y = _a.y, right = _a.right, bottom = _a.bottom;\r\n        var clippedX = Math.max(x, 0);\r\n        var clippedY = Math.max(y, 0);\r\n        var newWidth = right - clippedX;\r\n        var newHeight = bottom - clippedY;\r\n        var clippedWidth = Math.min(newWidth, imgWidth - clippedX);\r\n        var clippedHeight = Math.min(newHeight, imgHeight - clippedY);\r\n        return (new Box({ x: clippedX, y: clippedY, width: clippedWidth, height: clippedHeight })).floor();\r\n    };\r\n    Box.prototype.shift = function (sx, sy) {\r\n        var _a = this, width = _a.width, height = _a.height;\r\n        var x = this.x + sx;\r\n        var y = this.y + sy;\r\n        return new Box({ x: x, y: y, width: width, height: height });\r\n    };\r\n    Box.prototype.padAtBorders = function (imageHeight, imageWidth) {\r\n        var w = this.width + 1;\r\n        var h = this.height + 1;\r\n        var dx = 1;\r\n        var dy = 1;\r\n        var edx = w;\r\n        var edy = h;\r\n        var x = this.left;\r\n        var y = this.top;\r\n        var ex = this.right;\r\n        var ey = this.bottom;\r\n        if (ex > imageWidth) {\r\n            edx = -ex + imageWidth + w;\r\n            ex = imageWidth;\r\n        }\r\n        if (ey > imageHeight) {\r\n            edy = -ey + imageHeight + h;\r\n            ey = imageHeight;\r\n        }\r\n        if (x < 1) {\r\n            edy = 2 - x;\r\n            x = 1;\r\n        }\r\n        if (y < 1) {\r\n            edy = 2 - y;\r\n            y = 1;\r\n        }\r\n        return { dy: dy, edy: edy, dx: dx, edx: edx, y: y, ey: ey, x: x, ex: ex, w: w, h: h };\r\n    };\r\n    Box.prototype.calibrate = function (region) {\r\n        return new Box({\r\n            left: this.left + (region.left * this.width),\r\n            top: this.top + (region.top * this.height),\r\n            right: this.right + (region.right * this.width),\r\n            bottom: this.bottom + (region.bottom * this.height)\r\n        }).toSquare().round();\r\n    };\r\n    return Box;\r\n}());\r\nexport { Box };\r\n//# sourceMappingURL=Box.js.map"]},"metadata":{},"sourceType":"module"}