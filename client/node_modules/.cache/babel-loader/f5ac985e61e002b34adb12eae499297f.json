{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\n\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\n\nexports.argMinConfig = {\n  kernelName: tfjs_1.ArgMin,\n  backendName: 'tensorflow',\n  kernelFunc: function kernelFunc(args) {\n    var x = args.inputs.x;\n    var backend = args.backend;\n    var axis = args.attrs.axis;\n    var toDispose = [];\n    var xInput = x;\n\n    if (x.dtype === 'bool') {\n      xInput = x.toInt();\n      toDispose.push(xInput);\n    }\n\n    var axisScalar = tfjs_1.scalar(axis, 'int32');\n    toDispose.push(axisScalar);\n    var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', xInput.dtype), nodejs_kernel_backend_1.createTensorsTypeOpAttr('Tidx', 'int32'), nodejs_kernel_backend_1.createTensorsTypeOpAttr('output_type', 'int32')];\n    var res = backend.executeSingleOutput(tfjs_1.ArgMin, opAttrs, [xInput, axisScalar]);\n    toDispose.forEach(function (t) {\n      return t.dispose();\n    });\n    return res;\n  }\n};","map":null,"metadata":{},"sourceType":"script"}