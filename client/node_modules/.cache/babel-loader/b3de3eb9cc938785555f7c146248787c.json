{"ast":null,"code":"import { env } from '../env';\nexport function bufferToImage(buf) {\n  return new Promise(function (resolve, reject) {\n    if (!(buf instanceof Blob)) {\n      return reject('bufferToImage - expected buf to be of type: Blob');\n    }\n\n    var reader = new FileReader();\n\n    reader.onload = function () {\n      if (typeof reader.result !== 'string') {\n        return reject('bufferToImage - expected reader.result to be a string, in onload');\n      }\n\n      var img = env.getEnv().createImageElement();\n\n      img.onload = function () {\n        return resolve(img);\n      };\n\n      img.onerror = reject;\n      img.src = reader.result;\n    };\n\n    reader.onerror = reject;\n    reader.readAsDataURL(buf);\n  });\n}","map":{"version":3,"sources":["../../../src/dom/bufferToImage.ts"],"names":[],"mappings":"AAAA,SAAS,GAAT,QAAoB,QAApB;AAEA,OAAM,SAAU,aAAV,CAAwB,GAAxB,EAAiC;AACrC,SAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAgB;AACjC,QAAI,EAAE,GAAG,YAAY,IAAjB,CAAJ,EAA4B;AAC1B,aAAO,MAAM,CAAC,kDAAD,CAAb;AACD;;AAED,QAAM,MAAM,GAAG,IAAI,UAAJ,EAAf;;AACA,IAAA,MAAM,CAAC,MAAP,GAAgB,YAAA;AACd,UAAI,OAAO,MAAM,CAAC,MAAd,KAAyB,QAA7B,EAAuC;AACrC,eAAO,MAAM,CAAC,kEAAD,CAAb;AACD;;AAED,UAAM,GAAG,GAAG,GAAG,CAAC,MAAJ,GAAa,kBAAb,EAAZ;;AACA,MAAA,GAAG,CAAC,MAAJ,GAAa,YAAA;AAAM,eAAA,OAAO,CAAP,GAAO,CAAP;AAAY,OAA/B;;AACA,MAAA,GAAG,CAAC,OAAJ,GAAc,MAAd;AACA,MAAA,GAAG,CAAC,GAAJ,GAAU,MAAM,CAAC,MAAjB;AACD,KATD;;AAUA,IAAA,MAAM,CAAC,OAAP,GAAiB,MAAjB;AACA,IAAA,MAAM,CAAC,aAAP,CAAqB,GAArB;AACD,GAlBM,CAAP;AAmBD","sourceRoot":"","sourcesContent":["import { env } from '../env';\r\nexport function bufferToImage(buf) {\r\n    return new Promise(function (resolve, reject) {\r\n        if (!(buf instanceof Blob)) {\r\n            return reject('bufferToImage - expected buf to be of type: Blob');\r\n        }\r\n        var reader = new FileReader();\r\n        reader.onload = function () {\r\n            if (typeof reader.result !== 'string') {\r\n                return reject('bufferToImage - expected reader.result to be a string, in onload');\r\n            }\r\n            var img = env.getEnv().createImageElement();\r\n            img.onload = function () { return resolve(img); };\r\n            img.onerror = reject;\r\n            img.src = reader.result;\r\n        };\r\n        reader.onerror = reject;\r\n        reader.readAsDataURL(buf);\r\n    });\r\n}\r\n//# sourceMappingURL=bufferToImage.js.map"]},"metadata":{},"sourceType":"module"}