{"ast":null,"code":"var _defineProperty = require(\"/Users/angeldiscopanda/Trilogy-2020/Projects/trainofthought/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\n// pass in a manifest with a 'bin' field here, and it'll turn it\n// into a properly santized bin object\nvar _require = require('path'),\n    join = _require.join,\n    basename = _require.basename;\n\nvar normalize = function normalize(pkg) {\n  return !pkg.bin ? removeBin(pkg) : typeof pkg.bin === 'string' ? normalizeString(pkg) : Array.isArray(pkg.bin) ? normalizeArray(pkg) : typeof pkg.bin === 'object' ? normalizeObject(pkg) : removeBin(pkg);\n};\n\nvar normalizeString = function normalizeString(pkg) {\n  if (!pkg.name) return removeBin(pkg);\n  pkg.bin = _defineProperty({}, pkg.name, pkg.bin);\n  return normalizeObject(pkg);\n};\n\nvar normalizeArray = function normalizeArray(pkg) {\n  pkg.bin = pkg.bin.reduce(function (acc, k) {\n    acc[basename(k)] = k;\n    return acc;\n  }, {});\n  return normalizeObject(pkg);\n};\n\nvar removeBin = function removeBin(pkg) {\n  delete pkg.bin;\n  return pkg;\n};\n\nvar normalizeObject = function normalizeObject(pkg) {\n  var orig = pkg.bin;\n  var clean = {};\n  var hasBins = false;\n  Object.keys(orig).forEach(function (binKey) {\n    var base = join('/', basename(binKey.replace(/\\\\|:/g, '/'))).substr(1);\n    if (typeof orig[binKey] !== 'string' || !base) return;\n    var binTarget = join('/', orig[binKey]).replace(/\\\\/g, '/').substr(1);\n    if (!binTarget) return;\n    clean[base] = binTarget;\n    hasBins = true;\n  });\n  if (hasBins) pkg.bin = clean;else delete pkg.bin;\n  return pkg;\n};\n\nmodule.exports = normalize;","map":null,"metadata":{},"sourceType":"script"}