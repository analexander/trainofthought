{"ast":null,"code":"import _classCallCheck from \"/Users/angeldiscopanda/Trilogy-2020/Projects/trainofthought/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/angeldiscopanda/Trilogy-2020/Projects/trainofthought/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getTensor } from '../executors/utils';\nimport { getBoolArrayParam, getBoolParam, getDtypeArrayParam, getDtypeParam, getNumberParam, getNumericArrayParam, getStringArrayParam, getStringParam, getTensorShapeArrayParam, getTensorShapeParam } from '../operation_mapper';\n/**\n * Helper class for lookup inputs and params for nodes in the model graph.\n */\n\nexport var NodeValueImpl = /*#__PURE__*/function () {\n  function NodeValueImpl(node, tensorMap, context) {\n    var _this = this;\n\n    _classCallCheck(this, NodeValueImpl);\n\n    this.node = node;\n    this.tensorMap = tensorMap;\n    this.context = context;\n    this.inputs = [];\n    this.attrs = {};\n    this.inputs = node.inputNames.map(function (name) {\n      return _this.getInput(name);\n    });\n\n    if (node.rawAttrs != null) {\n      this.attrs = Object.keys(node.rawAttrs).reduce(function (attrs, key) {\n        attrs[key] = _this.getAttr(key);\n        return attrs;\n      }, {});\n    }\n  }\n  /**\n   * Return the value of the attribute or input param.\n   * @param name String: name of attribute or input param.\n   */\n\n\n  _createClass(NodeValueImpl, [{\n    key: \"getInput\",\n    value: function getInput(name) {\n      return getTensor(name, this.tensorMap, this.context);\n    }\n    /**\n     * Return the value of the attribute or input param.\n     * @param name String: name of attribute or input param.\n     */\n\n  }, {\n    key: \"getAttr\",\n    value: function getAttr(name, defaultValue) {\n      var value = this.node.rawAttrs[name];\n\n      if (value.tensor != null) {\n        return getTensor(name, this.tensorMap, this.context);\n      }\n\n      if (value.i != null || value.f != null) {\n        return getNumberParam(this.node.rawAttrs, name, defaultValue);\n      }\n\n      if (value.s != null) {\n        return getStringParam(this.node.rawAttrs, name, defaultValue);\n      }\n\n      if (value.b != null) {\n        return getBoolParam(this.node.rawAttrs, name, defaultValue);\n      }\n\n      if (value.shape != null) {\n        return getTensorShapeParam(this.node.rawAttrs, name, defaultValue);\n      }\n\n      if (value.type != null) {\n        return getDtypeParam(this.node.rawAttrs, name, defaultValue);\n      }\n\n      if (value.list != null) {\n        if (value.list.i != null || value.list.f != null) {\n          return getNumericArrayParam(this.node.rawAttrs, name, defaultValue);\n        }\n\n        if (value.list.s != null) {\n          return getStringArrayParam(this.node.rawAttrs, name, defaultValue);\n        }\n\n        if (value.list.shape != null) {\n          return getTensorShapeArrayParam(this.node.rawAttrs, name, defaultValue);\n        }\n\n        if (value.list.b != null) {\n          return getBoolArrayParam(this.node.rawAttrs, name, defaultValue);\n        }\n\n        if (value.list.type != null) {\n          return getDtypeArrayParam(this.node.rawAttrs, name, defaultValue);\n        }\n      }\n\n      return defaultValue;\n    }\n  }]);\n\n  return NodeValueImpl;\n}();","map":null,"metadata":{},"sourceType":"module"}