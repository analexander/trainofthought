{"ast":null,"code":"import { env } from '../env';\nimport { createCanvas, createCanvasFromMedia } from './createCanvas';\nimport { getContext2dOrThrow } from './getContext2dOrThrow';\nimport { getMediaDimensions } from './getMediaDimensions';\nexport function imageToSquare(input, inputSize, centerImage) {\n  if (centerImage === void 0) {\n    centerImage = false;\n  }\n\n  var _a = env.getEnv(),\n      Image = _a.Image,\n      Canvas = _a.Canvas;\n\n  if (!(input instanceof Image || input instanceof Canvas)) {\n    throw new Error('imageToSquare - expected arg0 to be HTMLImageElement | HTMLCanvasElement');\n  }\n\n  var dims = getMediaDimensions(input);\n  var scale = inputSize / Math.max(dims.height, dims.width);\n  var width = scale * dims.width;\n  var height = scale * dims.height;\n  var targetCanvas = createCanvas({\n    width: inputSize,\n    height: inputSize\n  });\n  var inputCanvas = input instanceof Canvas ? input : createCanvasFromMedia(input);\n  var offset = Math.abs(width - height) / 2;\n  var dx = centerImage && width < height ? offset : 0;\n  var dy = centerImage && height < width ? offset : 0;\n  getContext2dOrThrow(targetCanvas).drawImage(inputCanvas, dx, dy, width, height);\n  return targetCanvas;\n}","map":{"version":3,"sources":["../../../src/dom/imageToSquare.ts"],"names":[],"mappings":"AAAA,SAAS,GAAT,QAAoB,QAApB;AACA,SAAS,YAAT,EAAuB,qBAAvB,QAAoD,gBAApD;AACA,SAAS,mBAAT,QAAoC,uBAApC;AACA,SAAS,kBAAT,QAAmC,sBAAnC;AAEA,OAAM,SAAU,aAAV,CAAwB,KAAxB,EAAqE,SAArE,EAAwF,WAAxF,EAAoH;AAA5B,MAAA,WAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,WAAA,GAAA,KAAA;AAA4B;;AAElH,MAAA,EAAA,GAAA,GAAA,CAAA,MAAA,EAAA;AAAA,MAAE,KAAA,GAAA,EAAA,CAAA,KAAF;AAAA,MAAS,MAAA,GAAA,EAAA,CAAA,MAAT;;AAEN,MAAI,EAAE,KAAK,YAAY,KAAjB,IAA0B,KAAK,YAAY,MAA7C,CAAJ,EAA0D;AACxD,UAAM,IAAI,KAAJ,CAAU,0EAAV,CAAN;AACD;;AAED,MAAM,IAAI,GAAG,kBAAkB,CAAC,KAAD,CAA/B;AACA,MAAM,KAAK,GAAG,SAAS,GAAG,IAAI,CAAC,GAAL,CAAS,IAAI,CAAC,MAAd,EAAsB,IAAI,CAAC,KAA3B,CAA1B;AACA,MAAM,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,KAA3B;AACA,MAAM,MAAM,GAAG,KAAK,GAAG,IAAI,CAAC,MAA5B;AAEA,MAAM,YAAY,GAAG,YAAY,CAAC;AAAE,IAAA,KAAK,EAAE,SAAT;AAAoB,IAAA,MAAM,EAAE;AAA5B,GAAD,CAAjC;AACA,MAAM,WAAW,GAAG,KAAK,YAAY,MAAjB,GAA0B,KAA1B,GAAkC,qBAAqB,CAAC,KAAD,CAA3E;AAEA,MAAM,MAAM,GAAG,IAAI,CAAC,GAAL,CAAS,KAAK,GAAG,MAAjB,IAA2B,CAA1C;AACA,MAAM,EAAE,GAAG,WAAW,IAAI,KAAK,GAAG,MAAvB,GAAgC,MAAhC,GAAyC,CAApD;AACA,MAAM,EAAE,GAAG,WAAW,IAAI,MAAM,GAAG,KAAxB,GAAgC,MAAhC,GAAyC,CAApD;AACA,EAAA,mBAAmB,CAAC,YAAD,CAAnB,CAAkC,SAAlC,CAA4C,WAA5C,EAAyD,EAAzD,EAA6D,EAA7D,EAAiE,KAAjE,EAAwE,MAAxE;AAEA,SAAO,YAAP;AACD","sourceRoot":"","sourcesContent":["import { env } from '../env';\r\nimport { createCanvas, createCanvasFromMedia } from './createCanvas';\r\nimport { getContext2dOrThrow } from './getContext2dOrThrow';\r\nimport { getMediaDimensions } from './getMediaDimensions';\r\nexport function imageToSquare(input, inputSize, centerImage) {\r\n    if (centerImage === void 0) { centerImage = false; }\r\n    var _a = env.getEnv(), Image = _a.Image, Canvas = _a.Canvas;\r\n    if (!(input instanceof Image || input instanceof Canvas)) {\r\n        throw new Error('imageToSquare - expected arg0 to be HTMLImageElement | HTMLCanvasElement');\r\n    }\r\n    var dims = getMediaDimensions(input);\r\n    var scale = inputSize / Math.max(dims.height, dims.width);\r\n    var width = scale * dims.width;\r\n    var height = scale * dims.height;\r\n    var targetCanvas = createCanvas({ width: inputSize, height: inputSize });\r\n    var inputCanvas = input instanceof Canvas ? input : createCanvasFromMedia(input);\r\n    var offset = Math.abs(width - height) / 2;\r\n    var dx = centerImage && width < height ? offset : 0;\r\n    var dy = centerImage && height < width ? offset : 0;\r\n    getContext2dOrThrow(targetCanvas).drawImage(inputCanvas, dx, dy, width, height);\r\n    return targetCanvas;\r\n}\r\n//# sourceMappingURL=imageToSquare.js.map"]},"metadata":{},"sourceType":"module"}