{"ast":null,"code":"'use strict';\n\nvar stringWidth = require('string-width');\n\nexports.center = alignCenter;\nexports.left = alignLeft;\nexports.right = alignRight; // lodash's way of generating pad characters.\n\nfunction createPadding(width) {\n  var result = '';\n  var string = ' ';\n  var n = width;\n\n  do {\n    if (n % 2) {\n      result += string;\n    }\n\n    n = Math.floor(n / 2);\n    string += string;\n  } while (n);\n\n  return result;\n}\n\nfunction alignLeft(str, width) {\n  var trimmed = str.trimRight();\n  if (trimmed.length === 0 && str.length >= width) return str;\n  var padding = '';\n  var strWidth = stringWidth(trimmed);\n\n  if (strWidth < width) {\n    padding = createPadding(width - strWidth);\n  }\n\n  return trimmed + padding;\n}\n\nfunction alignRight(str, width) {\n  var trimmed = str.trimLeft();\n  if (trimmed.length === 0 && str.length >= width) return str;\n  var padding = '';\n  var strWidth = stringWidth(trimmed);\n\n  if (strWidth < width) {\n    padding = createPadding(width - strWidth);\n  }\n\n  return padding + trimmed;\n}\n\nfunction alignCenter(str, width) {\n  var trimmed = str.trim();\n  if (trimmed.length === 0 && str.length >= width) return str;\n  var padLeft = '';\n  var padRight = '';\n  var strWidth = stringWidth(trimmed);\n\n  if (strWidth < width) {\n    var padLeftBy = parseInt((width - strWidth) / 2, 10);\n    padLeft = createPadding(padLeftBy);\n    padRight = createPadding(width - (strWidth + padLeftBy));\n  }\n\n  return padLeft + trimmed + padRight;\n}","map":null,"metadata":{},"sourceType":"script"}