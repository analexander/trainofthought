{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { NonMaxSuppressionV5 } from '@tensorflow/tfjs-core';\nimport { kernel_impls } from '@tensorflow/tfjs-core';\nvar nonMaxSuppressionV5Impl = kernel_impls.nonMaxSuppressionV5Impl;\nimport { assertNotComplex } from '../cpu_util';\nexport var nonMaxSuppressionV5Config = {\n  kernelName: NonMaxSuppressionV5,\n  backendName: 'cpu',\n  kernelFunc: function kernelFunc(_ref) {\n    var inputs = _ref.inputs,\n        backend = _ref.backend,\n        attrs = _ref.attrs;\n    var boxes = inputs.boxes,\n        scores = inputs.scores;\n    var maxOutputSize = attrs.maxOutputSize,\n        iouThreshold = attrs.iouThreshold,\n        scoreThreshold = attrs.scoreThreshold,\n        softNmsSigma = attrs.softNmsSigma;\n    var cpuBackend = backend;\n    assertNotComplex(boxes, 'NonMaxSuppressionWithScore');\n    var boxesVals = cpuBackend.data.get(boxes.dataId).values;\n    var scoresVals = cpuBackend.data.get(scores.dataId).values;\n    var maxOutputSizeVal = maxOutputSize;\n    var iouThresholdVal = iouThreshold;\n    var scoreThresholdVal = scoreThreshold;\n    var softNmsSigmaVal = softNmsSigma;\n\n    var _nonMaxSuppressionV5I = nonMaxSuppressionV5Impl(boxesVals, scoresVals, maxOutputSizeVal, iouThresholdVal, scoreThresholdVal, softNmsSigmaVal),\n        selectedIndices = _nonMaxSuppressionV5I.selectedIndices,\n        selectedScores = _nonMaxSuppressionV5I.selectedScores;\n\n    return [selectedIndices, selectedScores];\n  }\n};","map":null,"metadata":{},"sourceType":"module"}