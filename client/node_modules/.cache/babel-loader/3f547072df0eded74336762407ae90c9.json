{"ast":null,"code":"var LabeledFaceDescriptors =\n/** @class */\nfunction () {\n  function LabeledFaceDescriptors(label, descriptors) {\n    if (!(typeof label === 'string')) {\n      throw new Error('LabeledFaceDescriptors - constructor expected label to be a string');\n    }\n\n    if (!Array.isArray(descriptors) || descriptors.some(function (desc) {\n      return !(desc instanceof Float32Array);\n    })) {\n      throw new Error('LabeledFaceDescriptors - constructor expected descriptors to be an array of Float32Array');\n    }\n\n    this._label = label;\n    this._descriptors = descriptors;\n  }\n\n  Object.defineProperty(LabeledFaceDescriptors.prototype, \"label\", {\n    get: function get() {\n      return this._label;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(LabeledFaceDescriptors.prototype, \"descriptors\", {\n    get: function get() {\n      return this._descriptors;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  LabeledFaceDescriptors.prototype.toJSON = function () {\n    return {\n      label: this.label,\n      descriptors: this.descriptors.map(function (d) {\n        return Array.from(d);\n      })\n    };\n  };\n\n  LabeledFaceDescriptors.fromJSON = function (json) {\n    var descriptors = json.descriptors.map(function (d) {\n      return new Float32Array(d);\n    });\n    return new LabeledFaceDescriptors(json.label, descriptors);\n  };\n\n  return LabeledFaceDescriptors;\n}();\n\nexport { LabeledFaceDescriptors };","map":{"version":3,"sources":["../../../src/classes/LabeledFaceDescriptors.ts"],"names":[],"mappings":"AAAA,IAAA,sBAAA;AAAA;AAAA,YAAA;AAIE,WAAA,sBAAA,CAAY,KAAZ,EAA2B,WAA3B,EAAsD;AACpD,QAAI,EAAE,OAAO,KAAP,KAAiB,QAAnB,CAAJ,EAAkC;AAChC,YAAM,IAAI,KAAJ,CAAU,oEAAV,CAAN;AACD;;AAED,QAAI,CAAC,KAAK,CAAC,OAAN,CAAc,WAAd,CAAD,IAA+B,WAAW,CAAC,IAAZ,CAAiB,UAAA,IAAA,EAAI;AAAI,aAAA,EAAE,IAAI,YAAN,YAAA,CAAA;AAA+B,KAAxD,CAAnC,EAA8F;AAC5F,YAAM,IAAI,KAAJ,CAAU,0FAAV,CAAN;AACD;;AAED,SAAK,MAAL,GAAc,KAAd;AACA,SAAK,YAAL,GAAoB,WAApB;AACD;;AAED,EAAA,MAAA,CAAA,cAAA,CAAW,sBAAA,CAAA,SAAX,EAAW,OAAX,EAAgB;SAAhB,eAAA;AAA6B,aAAO,KAAK,MAAZ;AAAoB,KAAjC;oBAAA;;AAAA,GAAhB;AACA,EAAA,MAAA,CAAA,cAAA,CAAW,sBAAA,CAAA,SAAX,EAAW,aAAX,EAAsB;SAAtB,eAAA;AAA2C,aAAO,KAAK,YAAZ;AAA0B,KAA/C;oBAAA;;AAAA,GAAtB;;AAEO,EAAA,sBAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACE,WAAO;AACL,MAAA,KAAK,EAAE,KAAK,KADP;AAEL,MAAA,WAAW,EAAE,KAAK,WAAL,CAAiB,GAAjB,CAAqB,UAAC,CAAD,EAAE;AAAK,eAAA,KAAK,CAAC,IAAN,CAAA,CAAA,CAAA;AAAa,OAAzC;AAFR,KAAP;AAID,GALM;;AAOO,EAAA,sBAAA,CAAA,QAAA,GAAd,UAAuB,IAAvB,EAAgC;AAC9B,QAAM,WAAW,GAAG,IAAI,CAAC,WAAL,CAAiB,GAAjB,CAAqB,UAAC,CAAD,EAAO;AAC9C,aAAO,IAAI,YAAJ,CAAiB,CAAjB,CAAP;AACD,KAFmB,CAApB;AAGA,WAAO,IAAI,sBAAJ,CAA2B,IAAI,CAAC,KAAhC,EAAuC,WAAvC,CAAP;AACD,GALa;;AAOhB,SAAA,sBAAA;AAAC,CAlCD,EAAA","sourceRoot":"","sourcesContent":["var LabeledFaceDescriptors = /** @class */ (function () {\r\n    function LabeledFaceDescriptors(label, descriptors) {\r\n        if (!(typeof label === 'string')) {\r\n            throw new Error('LabeledFaceDescriptors - constructor expected label to be a string');\r\n        }\r\n        if (!Array.isArray(descriptors) || descriptors.some(function (desc) { return !(desc instanceof Float32Array); })) {\r\n            throw new Error('LabeledFaceDescriptors - constructor expected descriptors to be an array of Float32Array');\r\n        }\r\n        this._label = label;\r\n        this._descriptors = descriptors;\r\n    }\r\n    Object.defineProperty(LabeledFaceDescriptors.prototype, \"label\", {\r\n        get: function () { return this._label; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LabeledFaceDescriptors.prototype, \"descriptors\", {\r\n        get: function () { return this._descriptors; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LabeledFaceDescriptors.prototype.toJSON = function () {\r\n        return {\r\n            label: this.label,\r\n            descriptors: this.descriptors.map(function (d) { return Array.from(d); })\r\n        };\r\n    };\r\n    LabeledFaceDescriptors.fromJSON = function (json) {\r\n        var descriptors = json.descriptors.map(function (d) {\r\n            return new Float32Array(d);\r\n        });\r\n        return new LabeledFaceDescriptors(json.label, descriptors);\r\n    };\r\n    return LabeledFaceDescriptors;\r\n}());\r\nexport { LabeledFaceDescriptors };\r\n//# sourceMappingURL=LabeledFaceDescriptors.js.map"]},"metadata":{},"sourceType":"module"}