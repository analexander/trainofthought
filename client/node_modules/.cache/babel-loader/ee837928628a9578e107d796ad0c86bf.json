{"ast":null,"code":"import { __awaiter, __extends, __generator } from \"tslib\";\nimport { extendWithAge } from '../factories/WithAge';\nimport { extendWithGender } from '../factories/WithGender';\nimport { ComposableTask } from './ComposableTask';\nimport { ComputeAllFaceDescriptorsTask, ComputeSingleFaceDescriptorTask } from './ComputeFaceDescriptorsTasks';\nimport { extractAllFacesAndComputeResults, extractSingleFaceAndComputeResult } from './extractFacesAndComputeResults';\nimport { nets } from './nets';\nimport { PredictAllFaceExpressionsTask, PredictAllFaceExpressionsWithFaceAlignmentTask, PredictSingleFaceExpressionsTask, PredictSingleFaceExpressionsWithFaceAlignmentTask } from './PredictFaceExpressionsTask';\n\nvar PredictAgeAndGenderTaskBase =\n/** @class */\nfunction (_super) {\n  __extends(PredictAgeAndGenderTaskBase, _super);\n\n  function PredictAgeAndGenderTaskBase(parentTask, input, extractedFaces) {\n    var _this = _super.call(this) || this;\n\n    _this.parentTask = parentTask;\n    _this.input = input;\n    _this.extractedFaces = extractedFaces;\n    return _this;\n  }\n\n  return PredictAgeAndGenderTaskBase;\n}(ComposableTask);\n\nexport { PredictAgeAndGenderTaskBase };\n\nvar PredictAllAgeAndGenderTask =\n/** @class */\nfunction (_super) {\n  __extends(PredictAllAgeAndGenderTask, _super);\n\n  function PredictAllAgeAndGenderTask() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  PredictAllAgeAndGenderTask.prototype.run = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var parentResults, ageAndGenderByFace;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.parentTask];\n\n          case 1:\n            parentResults = _a.sent();\n            return [4\n            /*yield*/\n            , extractAllFacesAndComputeResults(parentResults, this.input, function (faces) {\n              return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                  switch (_a.label) {\n                    case 0:\n                      return [4\n                      /*yield*/\n                      , Promise.all(faces.map(function (face) {\n                        return nets.ageGenderNet.predictAgeAndGender(face);\n                      }))];\n\n                    case 1:\n                      return [2\n                      /*return*/\n                      , _a.sent()];\n                  }\n                });\n              });\n            }, this.extractedFaces)];\n\n          case 2:\n            ageAndGenderByFace = _a.sent();\n            return [2\n            /*return*/\n            , parentResults.map(function (parentResult, i) {\n              var _a = ageAndGenderByFace[i],\n                  age = _a.age,\n                  gender = _a.gender,\n                  genderProbability = _a.genderProbability;\n              return extendWithAge(extendWithGender(parentResult, gender, genderProbability), age);\n            })];\n        }\n      });\n    });\n  };\n\n  PredictAllAgeAndGenderTask.prototype.withFaceExpressions = function () {\n    return new PredictAllFaceExpressionsTask(this, this.input);\n  };\n\n  return PredictAllAgeAndGenderTask;\n}(PredictAgeAndGenderTaskBase);\n\nexport { PredictAllAgeAndGenderTask };\n\nvar PredictSingleAgeAndGenderTask =\n/** @class */\nfunction (_super) {\n  __extends(PredictSingleAgeAndGenderTask, _super);\n\n  function PredictSingleAgeAndGenderTask() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  PredictSingleAgeAndGenderTask.prototype.run = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var parentResult, _a, age, gender, genderProbability;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.parentTask];\n\n          case 1:\n            parentResult = _b.sent();\n\n            if (!parentResult) {\n              return [2\n              /*return*/\n              ];\n            }\n\n            return [4\n            /*yield*/\n            , extractSingleFaceAndComputeResult(parentResult, this.input, function (face) {\n              return nets.ageGenderNet.predictAgeAndGender(face);\n            }, this.extractedFaces)];\n\n          case 2:\n            _a = _b.sent(), age = _a.age, gender = _a.gender, genderProbability = _a.genderProbability;\n            return [2\n            /*return*/\n            , extendWithAge(extendWithGender(parentResult, gender, genderProbability), age)];\n        }\n      });\n    });\n  };\n\n  PredictSingleAgeAndGenderTask.prototype.withFaceExpressions = function () {\n    return new PredictSingleFaceExpressionsTask(this, this.input);\n  };\n\n  return PredictSingleAgeAndGenderTask;\n}(PredictAgeAndGenderTaskBase);\n\nexport { PredictSingleAgeAndGenderTask };\n\nvar PredictAllAgeAndGenderWithFaceAlignmentTask =\n/** @class */\nfunction (_super) {\n  __extends(PredictAllAgeAndGenderWithFaceAlignmentTask, _super);\n\n  function PredictAllAgeAndGenderWithFaceAlignmentTask() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  PredictAllAgeAndGenderWithFaceAlignmentTask.prototype.withFaceExpressions = function () {\n    return new PredictAllFaceExpressionsWithFaceAlignmentTask(this, this.input);\n  };\n\n  PredictAllAgeAndGenderWithFaceAlignmentTask.prototype.withFaceDescriptors = function () {\n    return new ComputeAllFaceDescriptorsTask(this, this.input);\n  };\n\n  return PredictAllAgeAndGenderWithFaceAlignmentTask;\n}(PredictAllAgeAndGenderTask);\n\nexport { PredictAllAgeAndGenderWithFaceAlignmentTask };\n\nvar PredictSingleAgeAndGenderWithFaceAlignmentTask =\n/** @class */\nfunction (_super) {\n  __extends(PredictSingleAgeAndGenderWithFaceAlignmentTask, _super);\n\n  function PredictSingleAgeAndGenderWithFaceAlignmentTask() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  PredictSingleAgeAndGenderWithFaceAlignmentTask.prototype.withFaceExpressions = function () {\n    return new PredictSingleFaceExpressionsWithFaceAlignmentTask(this, this.input);\n  };\n\n  PredictSingleAgeAndGenderWithFaceAlignmentTask.prototype.withFaceDescriptor = function () {\n    return new ComputeSingleFaceDescriptorTask(this, this.input);\n  };\n\n  return PredictSingleAgeAndGenderWithFaceAlignmentTask;\n}(PredictSingleAgeAndGenderTask);\n\nexport { PredictSingleAgeAndGenderWithFaceAlignmentTask };","map":null,"metadata":{},"sourceType":"module"}