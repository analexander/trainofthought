{"ast":null,"code":"import { disposeUnusedWeightTensors, extractWeightEntryFactory, loadSeparableConvParamsFactory } from '../common';\nimport { loadConvParamsFactory } from '../common/loadConvParamsFactory';\nimport { range } from '../utils';\n\nfunction loadParamsFactory(weightMap, paramMappings) {\n  var extractWeightEntry = extractWeightEntryFactory(weightMap, paramMappings);\n  var extractConvParams = loadConvParamsFactory(extractWeightEntry);\n  var extractSeparableConvParams = loadSeparableConvParamsFactory(extractWeightEntry);\n\n  function extractReductionBlockParams(mappedPrefix) {\n    var separable_conv0 = extractSeparableConvParams(mappedPrefix + \"/separable_conv0\");\n    var separable_conv1 = extractSeparableConvParams(mappedPrefix + \"/separable_conv1\");\n    var expansion_conv = extractConvParams(mappedPrefix + \"/expansion_conv\");\n    return {\n      separable_conv0: separable_conv0,\n      separable_conv1: separable_conv1,\n      expansion_conv: expansion_conv\n    };\n  }\n\n  function extractMainBlockParams(mappedPrefix) {\n    var separable_conv0 = extractSeparableConvParams(mappedPrefix + \"/separable_conv0\");\n    var separable_conv1 = extractSeparableConvParams(mappedPrefix + \"/separable_conv1\");\n    var separable_conv2 = extractSeparableConvParams(mappedPrefix + \"/separable_conv2\");\n    return {\n      separable_conv0: separable_conv0,\n      separable_conv1: separable_conv1,\n      separable_conv2: separable_conv2\n    };\n  }\n\n  return {\n    extractConvParams: extractConvParams,\n    extractSeparableConvParams: extractSeparableConvParams,\n    extractReductionBlockParams: extractReductionBlockParams,\n    extractMainBlockParams: extractMainBlockParams\n  };\n}\n\nexport function extractParamsFromWeigthMap(weightMap, numMainBlocks) {\n  var paramMappings = [];\n\n  var _a = loadParamsFactory(weightMap, paramMappings),\n      extractConvParams = _a.extractConvParams,\n      extractSeparableConvParams = _a.extractSeparableConvParams,\n      extractReductionBlockParams = _a.extractReductionBlockParams,\n      extractMainBlockParams = _a.extractMainBlockParams;\n\n  var entry_flow_conv_in = extractConvParams('entry_flow/conv_in');\n  var entry_flow_reduction_block_0 = extractReductionBlockParams('entry_flow/reduction_block_0');\n  var entry_flow_reduction_block_1 = extractReductionBlockParams('entry_flow/reduction_block_1');\n  var entry_flow = {\n    conv_in: entry_flow_conv_in,\n    reduction_block_0: entry_flow_reduction_block_0,\n    reduction_block_1: entry_flow_reduction_block_1\n  };\n  var middle_flow = {};\n  range(numMainBlocks, 0, 1).forEach(function (idx) {\n    middle_flow[\"main_block_\" + idx] = extractMainBlockParams(\"middle_flow/main_block_\" + idx);\n  });\n  var exit_flow_reduction_block = extractReductionBlockParams('exit_flow/reduction_block');\n  var exit_flow_separable_conv = extractSeparableConvParams('exit_flow/separable_conv');\n  var exit_flow = {\n    reduction_block: exit_flow_reduction_block,\n    separable_conv: exit_flow_separable_conv\n  };\n  disposeUnusedWeightTensors(weightMap, paramMappings);\n  return {\n    params: {\n      entry_flow: entry_flow,\n      middle_flow: middle_flow,\n      exit_flow: exit_flow\n    },\n    paramMappings: paramMappings\n  };\n}","map":{"version":3,"sources":["../../../src/xception/extractParamsFromWeigthMap.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { disposeUnusedWeightTensors, extractWeightEntryFactory, loadSeparableConvParamsFactory, } from '../common';\r\nimport { loadConvParamsFactory } from '../common/loadConvParamsFactory';\r\nimport { range } from '../utils';\r\nfunction loadParamsFactory(weightMap, paramMappings) {\r\n    var extractWeightEntry = extractWeightEntryFactory(weightMap, paramMappings);\r\n    var extractConvParams = loadConvParamsFactory(extractWeightEntry);\r\n    var extractSeparableConvParams = loadSeparableConvParamsFactory(extractWeightEntry);\r\n    function extractReductionBlockParams(mappedPrefix) {\r\n        var separable_conv0 = extractSeparableConvParams(mappedPrefix + \"/separable_conv0\");\r\n        var separable_conv1 = extractSeparableConvParams(mappedPrefix + \"/separable_conv1\");\r\n        var expansion_conv = extractConvParams(mappedPrefix + \"/expansion_conv\");\r\n        return { separable_conv0: separable_conv0, separable_conv1: separable_conv1, expansion_conv: expansion_conv };\r\n    }\r\n    function extractMainBlockParams(mappedPrefix) {\r\n        var separable_conv0 = extractSeparableConvParams(mappedPrefix + \"/separable_conv0\");\r\n        var separable_conv1 = extractSeparableConvParams(mappedPrefix + \"/separable_conv1\");\r\n        var separable_conv2 = extractSeparableConvParams(mappedPrefix + \"/separable_conv2\");\r\n        return { separable_conv0: separable_conv0, separable_conv1: separable_conv1, separable_conv2: separable_conv2 };\r\n    }\r\n    return {\r\n        extractConvParams: extractConvParams,\r\n        extractSeparableConvParams: extractSeparableConvParams,\r\n        extractReductionBlockParams: extractReductionBlockParams,\r\n        extractMainBlockParams: extractMainBlockParams\r\n    };\r\n}\r\nexport function extractParamsFromWeigthMap(weightMap, numMainBlocks) {\r\n    var paramMappings = [];\r\n    var _a = loadParamsFactory(weightMap, paramMappings), extractConvParams = _a.extractConvParams, extractSeparableConvParams = _a.extractSeparableConvParams, extractReductionBlockParams = _a.extractReductionBlockParams, extractMainBlockParams = _a.extractMainBlockParams;\r\n    var entry_flow_conv_in = extractConvParams('entry_flow/conv_in');\r\n    var entry_flow_reduction_block_0 = extractReductionBlockParams('entry_flow/reduction_block_0');\r\n    var entry_flow_reduction_block_1 = extractReductionBlockParams('entry_flow/reduction_block_1');\r\n    var entry_flow = {\r\n        conv_in: entry_flow_conv_in,\r\n        reduction_block_0: entry_flow_reduction_block_0,\r\n        reduction_block_1: entry_flow_reduction_block_1\r\n    };\r\n    var middle_flow = {};\r\n    range(numMainBlocks, 0, 1).forEach(function (idx) {\r\n        middle_flow[\"main_block_\" + idx] = extractMainBlockParams(\"middle_flow/main_block_\" + idx);\r\n    });\r\n    var exit_flow_reduction_block = extractReductionBlockParams('exit_flow/reduction_block');\r\n    var exit_flow_separable_conv = extractSeparableConvParams('exit_flow/separable_conv');\r\n    var exit_flow = {\r\n        reduction_block: exit_flow_reduction_block,\r\n        separable_conv: exit_flow_separable_conv\r\n    };\r\n    disposeUnusedWeightTensors(weightMap, paramMappings);\r\n    return { params: { entry_flow: entry_flow, middle_flow: middle_flow, exit_flow: exit_flow }, paramMappings: paramMappings };\r\n}\r\n//# sourceMappingURL=extractParamsFromWeigthMap.js.map"]},"metadata":{},"sourceType":"module"}