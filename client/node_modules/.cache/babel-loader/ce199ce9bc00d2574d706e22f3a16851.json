{"ast":null,"code":"'use strict'; // These tables borrowed from `ansi`\n\nvar prefix = '\\x1b[';\n\nexports.up = function up(num) {\n  return prefix + (num || '') + 'A';\n};\n\nexports.down = function down(num) {\n  return prefix + (num || '') + 'B';\n};\n\nexports.forward = function forward(num) {\n  return prefix + (num || '') + 'C';\n};\n\nexports.back = function back(num) {\n  return prefix + (num || '') + 'D';\n};\n\nexports.nextLine = function nextLine(num) {\n  return prefix + (num || '') + 'E';\n};\n\nexports.previousLine = function previousLine(num) {\n  return prefix + (num || '') + 'F';\n};\n\nexports.horizontalAbsolute = function horizontalAbsolute(num) {\n  if (num == null) throw new Error('horizontalAboslute requires a column to position to');\n  return prefix + num + 'G';\n};\n\nexports.eraseData = function eraseData() {\n  return prefix + 'J';\n};\n\nexports.eraseLine = function eraseLine() {\n  return prefix + 'K';\n};\n\nexports.goto = function (x, y) {\n  return prefix + y + ';' + x + 'H';\n};\n\nexports.gotoSOL = function () {\n  return '\\r';\n};\n\nexports.beep = function () {\n  return '\\x07';\n};\n\nexports.hideCursor = function hideCursor() {\n  return prefix + '?25l';\n};\n\nexports.showCursor = function showCursor() {\n  return prefix + '?25h';\n};\n\nvar colors = {\n  reset: 0,\n  // styles\n  bold: 1,\n  italic: 3,\n  underline: 4,\n  inverse: 7,\n  // resets\n  stopBold: 22,\n  stopItalic: 23,\n  stopUnderline: 24,\n  stopInverse: 27,\n  // colors\n  white: 37,\n  black: 30,\n  blue: 34,\n  cyan: 36,\n  green: 32,\n  magenta: 35,\n  red: 31,\n  yellow: 33,\n  bgWhite: 47,\n  bgBlack: 40,\n  bgBlue: 44,\n  bgCyan: 46,\n  bgGreen: 42,\n  bgMagenta: 45,\n  bgRed: 41,\n  bgYellow: 43,\n  grey: 90,\n  brightBlack: 90,\n  brightRed: 91,\n  brightGreen: 92,\n  brightYellow: 93,\n  brightBlue: 94,\n  brightMagenta: 95,\n  brightCyan: 96,\n  brightWhite: 97,\n  bgGrey: 100,\n  bgBrightBlack: 100,\n  bgBrightRed: 101,\n  bgBrightGreen: 102,\n  bgBrightYellow: 103,\n  bgBrightBlue: 104,\n  bgBrightMagenta: 105,\n  bgBrightCyan: 106,\n  bgBrightWhite: 107\n};\n\nexports.color = function color(colorWith) {\n  if (arguments.length !== 1 || !Array.isArray(colorWith)) {\n    colorWith = Array.prototype.slice.call(arguments);\n  }\n\n  return prefix + colorWith.map(colorNameToCode).join(';') + 'm';\n};\n\nfunction colorNameToCode(color) {\n  if (colors[color] != null) return colors[color];\n  throw new Error('Unknown color or style name: ' + color);\n}","map":null,"metadata":{},"sourceType":"script"}