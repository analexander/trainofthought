{"ast":null,"code":"\"use strict\";\n\nmodule.exports = exports = reveal;\nexports.usage = 'Reveals data on the versioned binary';\n\nvar fs = require('fs');\n\nvar versioning = require('./util/versioning.js');\n\nvar napi = require('./util/napi.js');\n\nfunction unix_paths(key, val) {\n  return val && val.replace ? val.replace(/\\\\/g, '/') : val;\n}\n\nfunction reveal(gyp, argv, callback) {\n  var package_json = JSON.parse(fs.readFileSync('./package.json'));\n  var napi_build_version = napi.get_napi_build_version_from_command_args(argv);\n  var opts = versioning.evaluate(package_json, gyp.opts, napi_build_version);\n  var hit = false; // if a second arg is passed look to see\n  // if it is a known option\n  //console.log(JSON.stringify(gyp.opts,null,1))\n\n  var remain = gyp.opts.argv.remain[gyp.opts.argv.remain.length - 1];\n\n  if (remain && opts.hasOwnProperty(remain)) {\n    console.log(opts[remain].replace(/\\\\/g, '/'));\n    hit = true;\n  } // otherwise return all options as json\n\n\n  if (!hit) {\n    console.log(JSON.stringify(opts, unix_paths, 2));\n  }\n\n  return callback();\n}","map":null,"metadata":{},"sourceType":"script"}