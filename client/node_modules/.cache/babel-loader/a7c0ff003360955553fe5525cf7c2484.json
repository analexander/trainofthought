{"ast":null,"code":"'use strict';\n\nvar util = require('util');\n\nvar stream = require('readable-stream');\n\nvar delegate = require('delegates');\n\nvar Tracker = require('./tracker.js');\n\nvar TrackerStream = module.exports = function (name, size, options) {\n  stream.Transform.call(this, options);\n  this.tracker = new Tracker(name, size);\n  this.name = name;\n  this.id = this.tracker.id;\n  this.tracker.on('change', delegateChange(this));\n};\n\nutil.inherits(TrackerStream, stream.Transform);\n\nfunction delegateChange(trackerStream) {\n  return function (name, completion, tracker) {\n    trackerStream.emit('change', name, completion, trackerStream);\n  };\n}\n\nTrackerStream.prototype._transform = function (data, encoding, cb) {\n  this.tracker.completeWork(data.length ? data.length : 1);\n  this.push(data);\n  cb();\n};\n\nTrackerStream.prototype._flush = function (cb) {\n  this.tracker.finish();\n  cb();\n};\n\ndelegate(TrackerStream.prototype, 'tracker').method('completed').method('addWork').method('finish');","map":null,"metadata":{},"sourceType":"script"}