{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Identity } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Creates a new tensor with the same values and shape as the specified\n * tensor.\n *\n * ```js\n * const x = tf.tensor([1, 2]);\n *\n * x.clone().print();\n * ```\n *\n * @param x The tensor to clone.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\n\nfunction clone_(x) {\n  var $x = convertToTensor(x, 'x', 'clone', null);\n\n  var forward = function forward() {\n    return ENGINE.makeTensorFromDataId($x.dataId, $x.shape, $x.dtype);\n  };\n\n  var inputs = {\n    x: $x\n  }; // Note this op is called tf.identity in python. Hence the kernel name used\n  // here.\n\n  return ENGINE.runKernelFunc(forward, inputs, null\n  /* grad */\n  , Identity);\n}\n\nexport var clone = op({\n  clone_: clone_\n});","map":null,"metadata":{},"sourceType":"module"}