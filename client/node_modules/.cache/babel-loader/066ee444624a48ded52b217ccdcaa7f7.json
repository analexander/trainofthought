{"ast":null,"code":"'use strict';\n\nvar consoleControl = require('console-control-strings');\n\nvar renderTemplate = require('./render-template.js');\n\nvar validate = require('aproba');\n\nvar Plumbing = module.exports = function (theme, template, width) {\n  if (!width) width = 80;\n  validate('OAN', [theme, template, width]);\n  this.showing = false;\n  this.theme = theme;\n  this.width = width;\n  this.template = template;\n};\n\nPlumbing.prototype = {};\n\nPlumbing.prototype.setTheme = function (theme) {\n  validate('O', [theme]);\n  this.theme = theme;\n};\n\nPlumbing.prototype.setTemplate = function (template) {\n  validate('A', [template]);\n  this.template = template;\n};\n\nPlumbing.prototype.setWidth = function (width) {\n  validate('N', [width]);\n  this.width = width;\n};\n\nPlumbing.prototype.hide = function () {\n  return consoleControl.gotoSOL() + consoleControl.eraseLine();\n};\n\nPlumbing.prototype.hideCursor = consoleControl.hideCursor;\nPlumbing.prototype.showCursor = consoleControl.showCursor;\n\nPlumbing.prototype.show = function (status) {\n  var values = Object.create(this.theme);\n\n  for (var key in status) {\n    values[key] = status[key];\n  }\n\n  return renderTemplate(this.width, this.template, values).trim() + consoleControl.color('reset') + consoleControl.eraseLine() + consoleControl.gotoSOL();\n};","map":null,"metadata":{},"sourceType":"script"}