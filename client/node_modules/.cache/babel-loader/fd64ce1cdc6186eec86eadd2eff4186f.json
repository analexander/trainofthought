{"ast":null,"code":"import _toConsumableArray from \"/Users/angeldiscopanda/Trilogy-2020/Projects/trainofthought/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ReshapePackedProgram } from '../reshape_packed_gpu';\nimport { getBatchDim, getRowsCols } from '../webgl_util';\nexport function packedReshape(input, afterShape, backend) {\n  var input3DShape = [getBatchDim(input.shape)].concat(_toConsumableArray(getRowsCols(input.shape)));\n  var input3D = {\n    dtype: input.dtype,\n    shape: input3DShape,\n    dataId: input.dataId\n  };\n  var afterShapeAs3D = [getBatchDim(afterShape)].concat(_toConsumableArray(getRowsCols(afterShape)));\n  var program = new ReshapePackedProgram(afterShapeAs3D, input3DShape);\n  var preventEagerUnpackingOfOutput = true;\n  var output = backend.runWebGLProgram(program, [input3D], input.dtype, null\n  /* customSetup */\n  , preventEagerUnpackingOfOutput);\n  return {\n    dataId: output.dataId,\n    shape: afterShape,\n    dtype: output.dtype\n  };\n}","map":null,"metadata":{},"sourceType":"module"}