{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\aanda\\\\OneDrive\\\\Documents\\\\GitHub\\\\Final\\\\trainofthought\\\\client\\\\src\\\\component\\\\CameraComponent\\\\CameraComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport useUserMedia from \"../../hooks/UseUserMedia/UseUserMedia\";\nvar CAPTURE_OPTIONS = {\n  audio: false,\n  video: {\n    facingMode: \"environment\"\n  }\n};\nexport var CameraComponent = function CameraComponent(props) {\n  _s();\n\n  var videoRef = props.videoRef,\n      onReady = props.onReady;\n  var mediaStream = useUserMedia(CAPTURE_OPTIONS);\n\n  var handleCanPlay = function handleCanPlay() {\n    videoRef.current.play();\n    onReady();\n  };\n\n  useEffect(function () {\n    if (mediaStream && videoRef.current) {\n      videoRef.current.srcObject = mediaStream;\n    }\n  }, [mediaStream, videoRef]);\n  return /*#__PURE__*/React.createElement(\"video\", {\n    ref: videoRef,\n    onCanPlay: handleCanPlay,\n    autoPlay: true,\n    playsInline: true,\n    muted: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  });\n};\n\n_s(CameraComponent, \"48E1CRencQMBGRjyUWJZDH2olmE=\", false, function () {\n  return [useUserMedia];\n});\n\n_c = CameraComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"CameraComponent\");","map":{"version":3,"sources":["C:/Users/aanda/OneDrive/Documents/GitHub/Final/trainofthought/client/src/component/CameraComponent/CameraComponent.js"],"names":["React","useEffect","useUserMedia","CAPTURE_OPTIONS","audio","video","facingMode","CameraComponent","props","videoRef","onReady","mediaStream","handleCanPlay","current","play","srcObject"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AAEA,IAAMC,eAAe,GAAG;AACpBC,EAAAA,KAAK,EAAE,KADa;AAEpBC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,UAAU,EAAE;AAAd;AAFa,CAAxB;AAKA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAAA;;AAAA,MAC9BC,QAD8B,GACTD,KADS,CAC9BC,QAD8B;AAAA,MACpBC,OADoB,GACTF,KADS,CACpBE,OADoB;AAEtC,MAAMC,WAAW,GAAGT,YAAY,CAACC,eAAD,CAAhC;;AAEA,MAAMS,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxBH,IAAAA,QAAQ,CAACI,OAAT,CAAiBC,IAAjB;AACAJ,IAAAA,OAAO;AACV,GAHD;;AAKAT,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIU,WAAW,IAAIF,QAAQ,CAACI,OAA5B,EAAqC;AACjCJ,MAAAA,QAAQ,CAACI,OAAT,CAAiBE,SAAjB,GAA6BJ,WAA7B;AACH;AACJ,GAJQ,EAIN,CAACA,WAAD,EAAcF,QAAd,CAJM,CAAT;AAOA,sBACI;AAAO,IAAA,GAAG,EAAEA,QAAZ;AAAsB,IAAA,SAAS,EAAEG,aAAjC;AAAgD,IAAA,QAAQ,MAAxD;AAAyD,IAAA,WAAW,MAApE;AAAqE,IAAA,KAAK,MAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH,CAnBM;;GAAML,e;UAEWL,Y;;;KAFXK,e","sourcesContent":["import React, { useEffect } from \"react\";\nimport useUserMedia from \"../../hooks/UseUserMedia/UseUserMedia\";\n\nconst CAPTURE_OPTIONS = {\n    audio: false,\n    video: { facingMode: \"environment\" },\n};\n\nexport const CameraComponent = (props) => {\n    const { videoRef, onReady }= props;\n    const mediaStream = useUserMedia(CAPTURE_OPTIONS);\n\n    const handleCanPlay = () => {\n        videoRef.current.play();\n        onReady();\n    }\n\n    useEffect(() => {\n        if (mediaStream && videoRef.current) {\n            videoRef.current.srcObject = mediaStream;\n        }\n    }, [mediaStream, videoRef]);\n\n\n    return (\n        <video ref={videoRef} onCanPlay={handleCanPlay} autoPlay playsInline muted />\n    );\n};"]},"metadata":{},"sourceType":"module"}