{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Concat, util } from '@tensorflow/tfjs-core';\nimport { concatImpl } from './Concat_impl';\nexport function concat(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var axis = attrs.axis;\n  var $axis = util.parseAxisParam(axis, inputs[0].shape)[0];\n  var outShape = backend_util.computeOutShape(inputs.map(function (t) {\n    return t.shape;\n  }), $axis);\n\n  if (util.sizeFromShape(outShape) === 0) {\n    return backend.makeTensorInfo(outShape, inputs[0].dtype, []);\n  } // Keep only non-empty tensors (ignore tensors with 0 in their shape).\n\n\n  var $inputs = inputs.filter(function (t) {\n    return util.sizeFromShape(t.shape) > 0;\n  });\n\n  if ($inputs.length === 1) {\n    return $inputs[0];\n  }\n\n  var shapes = $inputs.map(function (t) {\n    return t.shape;\n  });\n  backend_util.assertParamsConsistent(shapes, $axis);\n  return concatImpl($inputs, $axis, backend);\n}\nexport var concatConfig = {\n  kernelName: Concat,\n  backendName: 'webgl',\n  kernelFunc: concat\n};","map":null,"metadata":{},"sourceType":"module"}