{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport './engine';\nimport * as device_util from './device_util';\nimport { env } from './environment';\nvar ENV = env();\n/**\n * This file contains environment-related flag registrations.\n */\n\n/** Whether to enable debug mode. */\n\nENV.registerFlag('DEBUG', function () {\n  return false;\n}, function (debugValue) {\n  if (debugValue) {\n    console.warn('Debugging mode is ON. The output of every math call will ' + 'be downloaded to CPU and checked for NaNs. ' + 'This significantly impacts performance.');\n  }\n});\n/** Whether we are in a browser (as versus, say, node.js) environment. */\n\nENV.registerFlag('IS_BROWSER', function () {\n  return device_util.isBrowser();\n});\n/** Whether we are in a browser (as versus, say, node.js) environment. */\n\nENV.registerFlag('IS_NODE', function () {\n  return typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.node !== 'undefined';\n});\n/** Whether this browser is Chrome. */\n\nENV.registerFlag('IS_CHROME', function () {\n  return typeof navigator !== 'undefined' && navigator != null && navigator.userAgent != null && /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n});\n/**\n * True when the environment is \"production\" where we disable safety checks\n * to gain performance.\n */\n\nENV.registerFlag('PROD', function () {\n  return false;\n});\n/**\n * Whether to do sanity checks when inferring a shape from user-provided\n * values, used when creating a new tensor.\n */\n\nENV.registerFlag('TENSORLIKE_CHECK_SHAPE_CONSISTENCY', function () {\n  return ENV.getBool('DEBUG');\n});\n/** Whether deprecation warnings are enabled. */\n\nENV.registerFlag('DEPRECATION_WARNINGS_ENABLED', function () {\n  return true;\n});\n/** True if running unit tests. */\n\nENV.registerFlag('IS_TEST', function () {\n  return false;\n});","map":null,"metadata":{},"sourceType":"module"}