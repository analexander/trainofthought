{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * This differs from util.assertShapesMatch in that it allows values of\n * negative one, an undefined size of a dimensinon, in a shape to match\n * anything.\n */\nimport { util } from '@tensorflow/tfjs-core';\nexport function assertShapesMatchAllowUndefinedSize(shapeA, shapeB) {\n  var errorMessagePrefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  util.assert(shapesEqualAllowUndefinedSize(shapeA, shapeB), function () {\n    return errorMessagePrefix + \" Shapes \".concat(shapeA, \" and \").concat(shapeB, \" must match\");\n  });\n}\nexport function shapesEqualAllowUndefinedSize(n1, n2) {\n  if (n1.length !== n2.length) {\n    return false;\n  }\n\n  for (var i = 0; i < n1.length; i++) {\n    if (n1[i] !== -1 && n2[i] !== -1 && n1[i] !== n2[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}","map":null,"metadata":{},"sourceType":"module"}