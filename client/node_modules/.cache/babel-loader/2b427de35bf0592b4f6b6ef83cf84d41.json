{"ast":null,"code":"import { __awaiter, __extends, __generator } from \"tslib\";\nimport { extendWithFaceDetection } from '../factories/WithFaceDetection';\nimport { MtcnnOptions } from '../mtcnn/MtcnnOptions';\nimport { SsdMobilenetv1Options } from '../ssdMobilenetv1/SsdMobilenetv1Options';\nimport { TinyFaceDetectorOptions } from '../tinyFaceDetector/TinyFaceDetectorOptions';\nimport { TinyYolov2Options } from '../tinyYolov2';\nimport { ComposableTask } from './ComposableTask';\nimport { DetectAllFaceLandmarksTask, DetectSingleFaceLandmarksTask } from './DetectFaceLandmarksTasks';\nimport { nets } from './nets';\nimport { PredictAllAgeAndGenderTask, PredictSingleAgeAndGenderTask } from './PredictAgeAndGenderTask';\nimport { PredictAllFaceExpressionsTask, PredictSingleFaceExpressionsTask } from './PredictFaceExpressionsTask';\n\nvar DetectFacesTaskBase =\n/** @class */\nfunction (_super) {\n  __extends(DetectFacesTaskBase, _super);\n\n  function DetectFacesTaskBase(input, options) {\n    if (options === void 0) {\n      options = new SsdMobilenetv1Options();\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this.input = input;\n    _this.options = options;\n    return _this;\n  }\n\n  return DetectFacesTaskBase;\n}(ComposableTask);\n\nexport { DetectFacesTaskBase };\n\nvar DetectAllFacesTask =\n/** @class */\nfunction (_super) {\n  __extends(DetectAllFacesTask, _super);\n\n  function DetectAllFacesTask() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  DetectAllFacesTask.prototype.run = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, input, options, faceDetectionFunction;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = this, input = _a.input, options = _a.options;\n            if (!(options instanceof MtcnnOptions)) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , nets.mtcnn.forward(input, options)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _b.sent().map(function (result) {\n              return result.detection;\n            })];\n\n          case 2:\n            faceDetectionFunction = options instanceof TinyFaceDetectorOptions ? function (input) {\n              return nets.tinyFaceDetector.locateFaces(input, options);\n            } : options instanceof SsdMobilenetv1Options ? function (input) {\n              return nets.ssdMobilenetv1.locateFaces(input, options);\n            } : options instanceof TinyYolov2Options ? function (input) {\n              return nets.tinyYolov2.locateFaces(input, options);\n            } : null;\n\n            if (!faceDetectionFunction) {\n              throw new Error('detectFaces - expected options to be instance of TinyFaceDetectorOptions | SsdMobilenetv1Options | MtcnnOptions | TinyYolov2Options');\n            }\n\n            return [2\n            /*return*/\n            , faceDetectionFunction(input)];\n        }\n      });\n    });\n  };\n\n  DetectAllFacesTask.prototype.runAndExtendWithFaceDetections = function () {\n    var _this = this;\n\n    return new Promise(function (res) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var detections;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , this.run()];\n\n            case 1:\n              detections = _a.sent();\n              return [2\n              /*return*/\n              , res(detections.map(function (detection) {\n                return extendWithFaceDetection({}, detection);\n              }))];\n          }\n        });\n      });\n    });\n  };\n\n  DetectAllFacesTask.prototype.withFaceLandmarks = function (useTinyLandmarkNet) {\n    if (useTinyLandmarkNet === void 0) {\n      useTinyLandmarkNet = false;\n    }\n\n    return new DetectAllFaceLandmarksTask(this.runAndExtendWithFaceDetections(), this.input, useTinyLandmarkNet);\n  };\n\n  DetectAllFacesTask.prototype.withFaceExpressions = function () {\n    return new PredictAllFaceExpressionsTask(this.runAndExtendWithFaceDetections(), this.input);\n  };\n\n  DetectAllFacesTask.prototype.withAgeAndGender = function () {\n    return new PredictAllAgeAndGenderTask(this.runAndExtendWithFaceDetections(), this.input);\n  };\n\n  return DetectAllFacesTask;\n}(DetectFacesTaskBase);\n\nexport { DetectAllFacesTask };\n\nvar DetectSingleFaceTask =\n/** @class */\nfunction (_super) {\n  __extends(DetectSingleFaceTask, _super);\n\n  function DetectSingleFaceTask() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  DetectSingleFaceTask.prototype.run = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var faceDetections, faceDetectionWithHighestScore;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , new DetectAllFacesTask(this.input, this.options)];\n\n          case 1:\n            faceDetections = _a.sent();\n            faceDetectionWithHighestScore = faceDetections[0];\n            faceDetections.forEach(function (faceDetection) {\n              if (faceDetection.score > faceDetectionWithHighestScore.score) {\n                faceDetectionWithHighestScore = faceDetection;\n              }\n            });\n            return [2\n            /*return*/\n            , faceDetectionWithHighestScore];\n        }\n      });\n    });\n  };\n\n  DetectSingleFaceTask.prototype.runAndExtendWithFaceDetection = function () {\n    var _this = this;\n\n    return new Promise(function (res) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var detection;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , this.run()];\n\n            case 1:\n              detection = _a.sent();\n              return [2\n              /*return*/\n              , res(detection ? extendWithFaceDetection({}, detection) : undefined)];\n          }\n        });\n      });\n    });\n  };\n\n  DetectSingleFaceTask.prototype.withFaceLandmarks = function (useTinyLandmarkNet) {\n    if (useTinyLandmarkNet === void 0) {\n      useTinyLandmarkNet = false;\n    }\n\n    return new DetectSingleFaceLandmarksTask(this.runAndExtendWithFaceDetection(), this.input, useTinyLandmarkNet);\n  };\n\n  DetectSingleFaceTask.prototype.withFaceExpressions = function () {\n    return new PredictSingleFaceExpressionsTask(this.runAndExtendWithFaceDetection(), this.input);\n  };\n\n  DetectSingleFaceTask.prototype.withAgeAndGender = function () {\n    return new PredictSingleAgeAndGenderTask(this.runAndExtendWithFaceDetection(), this.input);\n  };\n\n  return DetectSingleFaceTask;\n}(DetectFacesTaskBase);\n\nexport { DetectSingleFaceTask };","map":{"version":3,"sources":["../../../src/globalApi/DetectFacesTasks.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __awaiter, __extends, __generator } from \"tslib\";\r\nimport { extendWithFaceDetection } from '../factories/WithFaceDetection';\r\nimport { MtcnnOptions } from '../mtcnn/MtcnnOptions';\r\nimport { SsdMobilenetv1Options } from '../ssdMobilenetv1/SsdMobilenetv1Options';\r\nimport { TinyFaceDetectorOptions } from '../tinyFaceDetector/TinyFaceDetectorOptions';\r\nimport { TinyYolov2Options } from '../tinyYolov2';\r\nimport { ComposableTask } from './ComposableTask';\r\nimport { DetectAllFaceLandmarksTask, DetectSingleFaceLandmarksTask } from './DetectFaceLandmarksTasks';\r\nimport { nets } from './nets';\r\nimport { PredictAllAgeAndGenderTask, PredictSingleAgeAndGenderTask } from './PredictAgeAndGenderTask';\r\nimport { PredictAllFaceExpressionsTask, PredictSingleFaceExpressionsTask } from './PredictFaceExpressionsTask';\r\nvar DetectFacesTaskBase = /** @class */ (function (_super) {\r\n    __extends(DetectFacesTaskBase, _super);\r\n    function DetectFacesTaskBase(input, options) {\r\n        if (options === void 0) { options = new SsdMobilenetv1Options(); }\r\n        var _this = _super.call(this) || this;\r\n        _this.input = input;\r\n        _this.options = options;\r\n        return _this;\r\n    }\r\n    return DetectFacesTaskBase;\r\n}(ComposableTask));\r\nexport { DetectFacesTaskBase };\r\nvar DetectAllFacesTask = /** @class */ (function (_super) {\r\n    __extends(DetectAllFacesTask, _super);\r\n    function DetectAllFacesTask() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    DetectAllFacesTask.prototype.run = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, input, options, faceDetectionFunction;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this, input = _a.input, options = _a.options;\r\n                        if (!(options instanceof MtcnnOptions)) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, nets.mtcnn.forward(input, options)];\r\n                    case 1: return [2 /*return*/, (_b.sent())\r\n                            .map(function (result) { return result.detection; })];\r\n                    case 2:\r\n                        faceDetectionFunction = options instanceof TinyFaceDetectorOptions\r\n                            ? function (input) { return nets.tinyFaceDetector.locateFaces(input, options); }\r\n                            : (options instanceof SsdMobilenetv1Options\r\n                                ? function (input) { return nets.ssdMobilenetv1.locateFaces(input, options); }\r\n                                : (options instanceof TinyYolov2Options\r\n                                    ? function (input) { return nets.tinyYolov2.locateFaces(input, options); }\r\n                                    : null));\r\n                        if (!faceDetectionFunction) {\r\n                            throw new Error('detectFaces - expected options to be instance of TinyFaceDetectorOptions | SsdMobilenetv1Options | MtcnnOptions | TinyYolov2Options');\r\n                        }\r\n                        return [2 /*return*/, faceDetectionFunction(input)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    DetectAllFacesTask.prototype.runAndExtendWithFaceDetections = function () {\r\n        var _this = this;\r\n        return new Promise(function (res) { return __awaiter(_this, void 0, void 0, function () {\r\n            var detections;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.run()];\r\n                    case 1:\r\n                        detections = _a.sent();\r\n                        return [2 /*return*/, res(detections.map(function (detection) { return extendWithFaceDetection({}, detection); }))];\r\n                }\r\n            });\r\n        }); });\r\n    };\r\n    DetectAllFacesTask.prototype.withFaceLandmarks = function (useTinyLandmarkNet) {\r\n        if (useTinyLandmarkNet === void 0) { useTinyLandmarkNet = false; }\r\n        return new DetectAllFaceLandmarksTask(this.runAndExtendWithFaceDetections(), this.input, useTinyLandmarkNet);\r\n    };\r\n    DetectAllFacesTask.prototype.withFaceExpressions = function () {\r\n        return new PredictAllFaceExpressionsTask(this.runAndExtendWithFaceDetections(), this.input);\r\n    };\r\n    DetectAllFacesTask.prototype.withAgeAndGender = function () {\r\n        return new PredictAllAgeAndGenderTask(this.runAndExtendWithFaceDetections(), this.input);\r\n    };\r\n    return DetectAllFacesTask;\r\n}(DetectFacesTaskBase));\r\nexport { DetectAllFacesTask };\r\nvar DetectSingleFaceTask = /** @class */ (function (_super) {\r\n    __extends(DetectSingleFaceTask, _super);\r\n    function DetectSingleFaceTask() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    DetectSingleFaceTask.prototype.run = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var faceDetections, faceDetectionWithHighestScore;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, new DetectAllFacesTask(this.input, this.options)];\r\n                    case 1:\r\n                        faceDetections = _a.sent();\r\n                        faceDetectionWithHighestScore = faceDetections[0];\r\n                        faceDetections.forEach(function (faceDetection) {\r\n                            if (faceDetection.score > faceDetectionWithHighestScore.score) {\r\n                                faceDetectionWithHighestScore = faceDetection;\r\n                            }\r\n                        });\r\n                        return [2 /*return*/, faceDetectionWithHighestScore];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    DetectSingleFaceTask.prototype.runAndExtendWithFaceDetection = function () {\r\n        var _this = this;\r\n        return new Promise(function (res) { return __awaiter(_this, void 0, void 0, function () {\r\n            var detection;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.run()];\r\n                    case 1:\r\n                        detection = _a.sent();\r\n                        return [2 /*return*/, res(detection ? extendWithFaceDetection({}, detection) : undefined)];\r\n                }\r\n            });\r\n        }); });\r\n    };\r\n    DetectSingleFaceTask.prototype.withFaceLandmarks = function (useTinyLandmarkNet) {\r\n        if (useTinyLandmarkNet === void 0) { useTinyLandmarkNet = false; }\r\n        return new DetectSingleFaceLandmarksTask(this.runAndExtendWithFaceDetection(), this.input, useTinyLandmarkNet);\r\n    };\r\n    DetectSingleFaceTask.prototype.withFaceExpressions = function () {\r\n        return new PredictSingleFaceExpressionsTask(this.runAndExtendWithFaceDetection(), this.input);\r\n    };\r\n    DetectSingleFaceTask.prototype.withAgeAndGender = function () {\r\n        return new PredictSingleAgeAndGenderTask(this.runAndExtendWithFaceDetection(), this.input);\r\n    };\r\n    return DetectSingleFaceTask;\r\n}(DetectFacesTaskBase));\r\nexport { DetectSingleFaceTask };\r\n//# sourceMappingURL=DetectFacesTasks.js.map"]},"metadata":{},"sourceType":"module"}