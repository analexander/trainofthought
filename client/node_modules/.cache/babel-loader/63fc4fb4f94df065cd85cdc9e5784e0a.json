{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport { MtcnnOptions } from '../mtcnn/MtcnnOptions';\nimport { SsdMobilenetv1Options } from '../ssdMobilenetv1';\nimport { TinyYolov2Options } from '../tinyYolov2';\nimport { detectAllFaces } from './detectFaces'; // export allFaces API for backward compatibility\n\nexport function allFacesSsdMobilenetv1(input, minConfidence) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          console.warn('allFacesSsdMobilenetv1 is deprecated and will be removed soon, use the high level api instead');\n          return [4\n          /*yield*/\n          , detectAllFaces(input, new SsdMobilenetv1Options(minConfidence ? {\n            minConfidence: minConfidence\n          } : {})).withFaceLandmarks().withFaceDescriptors()];\n\n        case 1:\n          return [2\n          /*return*/\n          , _a.sent()];\n      }\n    });\n  });\n}\nexport function allFacesTinyYolov2(input, forwardParams) {\n  if (forwardParams === void 0) {\n    forwardParams = {};\n  }\n\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          console.warn('allFacesTinyYolov2 is deprecated and will be removed soon, use the high level api instead');\n          return [4\n          /*yield*/\n          , detectAllFaces(input, new TinyYolov2Options(forwardParams)).withFaceLandmarks().withFaceDescriptors()];\n\n        case 1:\n          return [2\n          /*return*/\n          , _a.sent()];\n      }\n    });\n  });\n}\nexport function allFacesMtcnn(input, forwardParams) {\n  if (forwardParams === void 0) {\n    forwardParams = {};\n  }\n\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          console.warn('allFacesMtcnn is deprecated and will be removed soon, use the high level api instead');\n          return [4\n          /*yield*/\n          , detectAllFaces(input, new MtcnnOptions(forwardParams)).withFaceLandmarks().withFaceDescriptors()];\n\n        case 1:\n          return [2\n          /*return*/\n          , _a.sent()];\n      }\n    });\n  });\n}\nexport var allFaces = allFacesSsdMobilenetv1;","map":{"version":3,"sources":["../../../src/globalApi/allFaces.ts"],"names":[],"mappings":";AAEA,SAAwB,YAAxB,QAA4C,uBAA5C;AACA,SAAS,qBAAT,QAAsC,mBAAtC;AACA,SAA6B,iBAA7B,QAAsD,eAAtD;AACA,SAAS,cAAT,QAA+B,eAA/B,C,CAEA;;AAEA,OAAM,SAAgB,sBAAhB,CACJ,KADI,EAEJ,aAFI,EAEkB;;;;;AAEtB,UAAA,OAAO,CAAC,IAAR,CAAa,+FAAb;AACO,iBAAA,CAAA;AAAA;AAAA,YAAM,cAAc,CAAC,KAAD,EAAQ,IAAI,qBAAJ,CAA0B,aAAa,GAAG;AAAE,YAAA,aAAa,EAAA;AAAf,WAAH,GAAuB,EAA9D,CAAR,CAAd,CACV,iBADU,GAEV,mBAFU,EAAN,CAAA;;;AAAP,iBAAA,CAAA;AAAA;AAAA,YAAO,EAAA,CAAA,IAAA,EAAP,CAAA;;;;AAGD;AAED,OAAM,SAAgB,kBAAhB,CACJ,KADI,EAEJ,aAFI,EAEkC;AAAtC,MAAA,aAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,EAAA;AAAsC;;;;;;AAEtC,UAAA,OAAO,CAAC,IAAR,CAAa,2FAAb;AACO,iBAAA,CAAA;AAAA;AAAA,YAAM,cAAc,CAAC,KAAD,EAAQ,IAAI,iBAAJ,CAAsB,aAAtB,CAAR,CAAd,CACV,iBADU,GAEV,mBAFU,EAAN,CAAA;;;AAAP,iBAAA,CAAA;AAAA;AAAA,YAAO,EAAA,CAAA,IAAA,EAAP,CAAA;;;;AAGD;AAED,OAAM,SAAgB,aAAhB,CACJ,KADI,EAEJ,aAFI,EAE6B;AAAjC,MAAA,aAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,EAAA;AAAiC;;;;;;AAEjC,UAAA,OAAO,CAAC,IAAR,CAAa,sFAAb;AACO,iBAAA,CAAA;AAAA;AAAA,YAAM,cAAc,CAAC,KAAD,EAAQ,IAAI,YAAJ,CAAiB,aAAjB,CAAR,CAAd,CACV,iBADU,GAEV,mBAFU,EAAN,CAAA;;;AAAP,iBAAA,CAAA;AAAA;AAAA,YAAO,EAAA,CAAA,IAAA,EAAP,CAAA;;;;AAGD;AAED,OAAO,IAAM,QAAQ,GAAG,sBAAjB","sourceRoot":"","sourcesContent":["import { __awaiter, __generator } from \"tslib\";\r\nimport { MtcnnOptions } from '../mtcnn/MtcnnOptions';\r\nimport { SsdMobilenetv1Options } from '../ssdMobilenetv1';\r\nimport { TinyYolov2Options } from '../tinyYolov2';\r\nimport { detectAllFaces } from './detectFaces';\r\n// export allFaces API for backward compatibility\r\nexport function allFacesSsdMobilenetv1(input, minConfidence) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    console.warn('allFacesSsdMobilenetv1 is deprecated and will be removed soon, use the high level api instead');\r\n                    return [4 /*yield*/, detectAllFaces(input, new SsdMobilenetv1Options(minConfidence ? { minConfidence: minConfidence } : {}))\r\n                            .withFaceLandmarks()\r\n                            .withFaceDescriptors()];\r\n                case 1: return [2 /*return*/, _a.sent()];\r\n            }\r\n        });\r\n    });\r\n}\r\nexport function allFacesTinyYolov2(input, forwardParams) {\r\n    if (forwardParams === void 0) { forwardParams = {}; }\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    console.warn('allFacesTinyYolov2 is deprecated and will be removed soon, use the high level api instead');\r\n                    return [4 /*yield*/, detectAllFaces(input, new TinyYolov2Options(forwardParams))\r\n                            .withFaceLandmarks()\r\n                            .withFaceDescriptors()];\r\n                case 1: return [2 /*return*/, _a.sent()];\r\n            }\r\n        });\r\n    });\r\n}\r\nexport function allFacesMtcnn(input, forwardParams) {\r\n    if (forwardParams === void 0) { forwardParams = {}; }\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    console.warn('allFacesMtcnn is deprecated and will be removed soon, use the high level api instead');\r\n                    return [4 /*yield*/, detectAllFaces(input, new MtcnnOptions(forwardParams))\r\n                            .withFaceLandmarks()\r\n                            .withFaceDescriptors()];\r\n                case 1: return [2 /*return*/, _a.sent()];\r\n            }\r\n        });\r\n    });\r\n}\r\nexport var allFaces = allFacesSsdMobilenetv1;\r\n//# sourceMappingURL=allFaces.js.map"]},"metadata":{},"sourceType":"module"}