{"ast":null,"code":"import _classCallCheck from \"/Users/angeldiscopanda/Trilogy-2020/Projects/trainofthought/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/angeldiscopanda/Trilogy-2020/Projects/trainofthought/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var IORouterRegistry = /*#__PURE__*/function () {\n  function IORouterRegistry() {\n    _classCallCheck(this, IORouterRegistry);\n\n    this.saveRouters = [];\n    this.loadRouters = [];\n  }\n\n  _createClass(IORouterRegistry, null, [{\n    key: \"getInstance\",\n    value: function getInstance() {\n      if (IORouterRegistry.instance == null) {\n        IORouterRegistry.instance = new IORouterRegistry();\n      }\n\n      return IORouterRegistry.instance;\n    }\n    /**\n     * Register a save-handler router.\n     *\n     * @param saveRouter A function that maps a URL-like string onto an instance\n     * of `IOHandler` with the `save` method defined or `null`.\n     */\n\n  }, {\n    key: \"registerSaveRouter\",\n    value: function registerSaveRouter(saveRouter) {\n      IORouterRegistry.getInstance().saveRouters.push(saveRouter);\n    }\n    /**\n     * Register a load-handler router.\n     *\n     * @param loadRouter A function that maps a URL-like string onto an instance\n     * of `IOHandler` with the `load` method defined or `null`.\n     */\n\n  }, {\n    key: \"registerLoadRouter\",\n    value: function registerLoadRouter(loadRouter) {\n      IORouterRegistry.getInstance().loadRouters.push(loadRouter);\n    }\n    /**\n     * Look up IOHandler for saving, given a URL-like string.\n     *\n     * @param url\n     * @returns If only one match is found, an instance of IOHandler with the\n     * `save` method defined. If no match is found, `null`.\n     * @throws Error, if more than one match is found.\n     */\n\n  }, {\n    key: \"getSaveHandlers\",\n    value: function getSaveHandlers(url) {\n      return IORouterRegistry.getHandlers(url, 'save');\n    }\n    /**\n     * Look up IOHandler for loading, given a URL-like string.\n     *\n     * @param url\n     * @param loadOptions Optional, custom load options.\n     * @returns All valid handlers for `url`, given the currently registered\n     *   handler routers.\n     */\n\n  }, {\n    key: \"getLoadHandlers\",\n    value: function getLoadHandlers(url, loadOptions) {\n      return IORouterRegistry.getHandlers(url, 'load', loadOptions);\n    }\n  }, {\n    key: \"getHandlers\",\n    value: function getHandlers(url, handlerType, loadOptions) {\n      var validHandlers = [];\n      var routers = handlerType === 'load' ? IORouterRegistry.getInstance().loadRouters : IORouterRegistry.getInstance().saveRouters;\n      routers.forEach(function (router) {\n        var handler = router(url, loadOptions);\n\n        if (handler !== null) {\n          validHandlers.push(handler);\n        }\n      });\n      return validHandlers;\n    }\n  }]);\n\n  return IORouterRegistry;\n}();\nexport var registerSaveRouter = function registerSaveRouter(loudRouter) {\n  return IORouterRegistry.registerSaveRouter(loudRouter);\n};\nexport var registerLoadRouter = function registerLoadRouter(loudRouter) {\n  return IORouterRegistry.registerLoadRouter(loudRouter);\n};\nexport var getSaveHandlers = function getSaveHandlers(url) {\n  return IORouterRegistry.getSaveHandlers(url);\n};\nexport var getLoadHandlers = function getLoadHandlers(url, loadOptions) {\n  return IORouterRegistry.getLoadHandlers(url, loadOptions);\n};","map":null,"metadata":{},"sourceType":"module"}