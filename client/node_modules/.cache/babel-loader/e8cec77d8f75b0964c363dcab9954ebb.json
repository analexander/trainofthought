{"ast":null,"code":"import _slicedToArray from \"/Users/angeldiscopanda/Trilogy-2020/Projects/trainofthought/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Prelu } from '../kernel_names';\nimport { getReductionAxes } from '../ops/broadcast_util';\nimport { greater } from '../ops/greater';\nimport { mul } from '../ops/mul';\nimport { reshape } from '../ops/reshape';\nimport { sum } from '../ops/sum';\nimport { where } from '../ops/where';\nimport { zerosLike } from '../ops/zeros_like';\nexport var preluGradConfig = {\n  kernelName: Prelu,\n  inputsToSave: ['x', 'alpha'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 2),\n        x = _saved[0],\n        _alpha = _saved[1];\n\n    var mask = greater(x, 0);\n    return {\n      x: function x() {\n        return where(mask, dy, mul(dy, _alpha));\n      },\n      alpha: function alpha() {\n        var res = where(mask, zerosLike(dy), mul(dy, x));\n        var reduceAxes = getReductionAxes(_alpha.shape, dy.shape);\n\n        if (reduceAxes.length > 0) {\n          res = sum(res, reduceAxes);\n        }\n\n        return reshape(res, _alpha.shape);\n      }\n    };\n  }\n};","map":null,"metadata":{},"sourceType":"module"}