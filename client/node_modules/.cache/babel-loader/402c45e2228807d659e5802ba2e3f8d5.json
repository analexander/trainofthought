{"ast":null,"code":"import { createBrowserEnv } from './createBrowserEnv';\nimport { createFileSystem } from './createFileSystem';\nimport { createNodejsEnv } from './createNodejsEnv';\nimport { isBrowser } from './isBrowser';\nimport { isNodejs } from './isNodejs';\nvar environment;\n\nfunction getEnv() {\n  if (!environment) {\n    throw new Error('getEnv - environment is not defined, check isNodejs() and isBrowser()');\n  }\n\n  return environment;\n}\n\nfunction setEnv(env) {\n  environment = env;\n}\n\nfunction initialize() {\n  // check for isBrowser() first to prevent electron renderer process\n  // to be initialized with wrong environment due to isNodejs() returning true\n  if (isBrowser()) {\n    setEnv(createBrowserEnv());\n  }\n\n  if (isNodejs()) {\n    setEnv(createNodejsEnv());\n  }\n}\n\nfunction monkeyPatch(env) {\n  if (!environment) {\n    initialize();\n  }\n\n  if (!environment) {\n    throw new Error('monkeyPatch - environment is not defined, check isNodejs() and isBrowser()');\n  }\n\n  var _a = env.Canvas,\n      Canvas = _a === void 0 ? environment.Canvas : _a,\n      _b = env.Image,\n      Image = _b === void 0 ? environment.Image : _b;\n  environment.Canvas = Canvas;\n  environment.Image = Image;\n\n  environment.createCanvasElement = env.createCanvasElement || function () {\n    return new Canvas();\n  };\n\n  environment.createImageElement = env.createImageElement || function () {\n    return new Image();\n  };\n\n  environment.ImageData = env.ImageData || environment.ImageData;\n  environment.Video = env.Video || environment.Video;\n  environment.fetch = env.fetch || environment.fetch;\n  environment.readFile = env.readFile || environment.readFile;\n}\n\nexport var env = {\n  getEnv: getEnv,\n  setEnv: setEnv,\n  initialize: initialize,\n  createBrowserEnv: createBrowserEnv,\n  createFileSystem: createFileSystem,\n  createNodejsEnv: createNodejsEnv,\n  monkeyPatch: monkeyPatch,\n  isBrowser: isBrowser,\n  isNodejs: isNodejs\n};\ninitialize();","map":{"version":3,"sources":["../../../src/env/index.ts"],"names":[],"mappings":"AAAA,SAAS,gBAAT,QAAiC,oBAAjC;AACA,SAAS,gBAAT,QAAiC,oBAAjC;AACA,SAAS,eAAT,QAAgC,mBAAhC;AACA,SAAS,SAAT,QAA0B,aAA1B;AACA,SAAS,QAAT,QAAyB,YAAzB;AAGA,IAAI,WAAJ;;AAEA,SAAS,MAAT,GAAe;AACb,MAAI,CAAC,WAAL,EAAkB;AAChB,UAAM,IAAI,KAAJ,CAAU,uEAAV,CAAN;AACD;;AACD,SAAO,WAAP;AACD;;AAED,SAAS,MAAT,CAAgB,GAAhB,EAAgC;AAC9B,EAAA,WAAW,GAAG,GAAd;AACD;;AAED,SAAS,UAAT,GAAmB;AACjB;AACA;AACA,MAAI,SAAS,EAAb,EAAiB;AACf,IAAA,MAAM,CAAC,gBAAgB,EAAjB,CAAN;AACD;;AACD,MAAI,QAAQ,EAAZ,EAAgB;AACd,IAAA,MAAM,CAAC,eAAe,EAAhB,CAAN;AACD;AACF;;AAED,SAAS,WAAT,CAAqB,GAArB,EAA8C;AAC5C,MAAI,CAAC,WAAL,EAAkB;AAChB,IAAA,UAAU;AACX;;AAED,MAAI,CAAC,WAAL,EAAkB;AAChB,UAAM,IAAI,KAAJ,CAAU,4EAAV,CAAN;AACD;;AAEO,MAAA,EAAA,GAAA,GAAA,CAAA,MAAA;AAAA,MAAA,MAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,WAAA,CAAA,MAAA,GAAA,EAAA;AAAA,MAA6B,EAAA,GAAA,GAAA,CAAA,KAA7B;AAAA,MAA6B,KAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,WAAA,CAAA,KAAA,GAAA,EAA7B;AACR,EAAA,WAAW,CAAC,MAAZ,GAAqB,MAArB;AACA,EAAA,WAAW,CAAC,KAAZ,GAAoB,KAApB;;AACA,EAAA,WAAW,CAAC,mBAAZ,GAAkC,GAAG,CAAC,mBAAJ,IAA4B,YAAA;AAAM,WAAA,IAAA,MAAA,EAAA;AAAY,GAAhF;;AACA,EAAA,WAAW,CAAC,kBAAZ,GAAiC,GAAG,CAAC,kBAAJ,IAA2B,YAAA;AAAM,WAAA,IAAA,KAAA,EAAA;AAAW,GAA7E;;AAEA,EAAA,WAAW,CAAC,SAAZ,GAAwB,GAAG,CAAC,SAAJ,IAAiB,WAAW,CAAC,SAArD;AACA,EAAA,WAAW,CAAC,KAAZ,GAAoB,GAAG,CAAC,KAAJ,IAAa,WAAW,CAAC,KAA7C;AACA,EAAA,WAAW,CAAC,KAAZ,GAAoB,GAAG,CAAC,KAAJ,IAAa,WAAW,CAAC,KAA7C;AACA,EAAA,WAAW,CAAC,QAAZ,GAAuB,GAAG,CAAC,QAAJ,IAAgB,WAAW,CAAC,QAAnD;AACD;;AAED,OAAO,IAAM,GAAG,GAAG;AACjB,EAAA,MAAM,EAAA,MADW;AAEjB,EAAA,MAAM,EAAA,MAFW;AAGjB,EAAA,UAAU,EAAA,UAHO;AAIjB,EAAA,gBAAgB,EAAA,gBAJC;AAKjB,EAAA,gBAAgB,EAAA,gBALC;AAMjB,EAAA,eAAe,EAAA,eANE;AAOjB,EAAA,WAAW,EAAA,WAPM;AAQjB,EAAA,SAAS,EAAA,SARQ;AASjB,EAAA,QAAQ,EAAA;AATS,CAAZ;AAYP,UAAU","sourceRoot":"","sourcesContent":["import { createBrowserEnv } from './createBrowserEnv';\r\nimport { createFileSystem } from './createFileSystem';\r\nimport { createNodejsEnv } from './createNodejsEnv';\r\nimport { isBrowser } from './isBrowser';\r\nimport { isNodejs } from './isNodejs';\r\nvar environment;\r\nfunction getEnv() {\r\n    if (!environment) {\r\n        throw new Error('getEnv - environment is not defined, check isNodejs() and isBrowser()');\r\n    }\r\n    return environment;\r\n}\r\nfunction setEnv(env) {\r\n    environment = env;\r\n}\r\nfunction initialize() {\r\n    // check for isBrowser() first to prevent electron renderer process\r\n    // to be initialized with wrong environment due to isNodejs() returning true\r\n    if (isBrowser()) {\r\n        setEnv(createBrowserEnv());\r\n    }\r\n    if (isNodejs()) {\r\n        setEnv(createNodejsEnv());\r\n    }\r\n}\r\nfunction monkeyPatch(env) {\r\n    if (!environment) {\r\n        initialize();\r\n    }\r\n    if (!environment) {\r\n        throw new Error('monkeyPatch - environment is not defined, check isNodejs() and isBrowser()');\r\n    }\r\n    var _a = env.Canvas, Canvas = _a === void 0 ? environment.Canvas : _a, _b = env.Image, Image = _b === void 0 ? environment.Image : _b;\r\n    environment.Canvas = Canvas;\r\n    environment.Image = Image;\r\n    environment.createCanvasElement = env.createCanvasElement || (function () { return new Canvas(); });\r\n    environment.createImageElement = env.createImageElement || (function () { return new Image(); });\r\n    environment.ImageData = env.ImageData || environment.ImageData;\r\n    environment.Video = env.Video || environment.Video;\r\n    environment.fetch = env.fetch || environment.fetch;\r\n    environment.readFile = env.readFile || environment.readFile;\r\n}\r\nexport var env = {\r\n    getEnv: getEnv,\r\n    setEnv: setEnv,\r\n    initialize: initialize,\r\n    createBrowserEnv: createBrowserEnv,\r\n    createFileSystem: createFileSystem,\r\n    createNodejsEnv: createNodejsEnv,\r\n    monkeyPatch: monkeyPatch,\r\n    isBrowser: isBrowser,\r\n    isNodejs: isNodejs\r\n};\r\ninitialize();\r\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}